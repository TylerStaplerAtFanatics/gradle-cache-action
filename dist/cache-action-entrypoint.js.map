{"version":3,"file":"cache-action-entrypoint.js","mappings":"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B,IAE1D,iCAA8C;IAClDz0B,MAAM;IACNg1C,YAAY;IACZC,WAAW;KACT,KAAK;MACHC,eAAe;;KAEjBC,SAAS;MACPC,YAAY;MACZF,eAAe;;;IAGnBI,iBAAiB,EAAC;IAClBC,eAAe,EAAC;IAChBC,kBAAkB,EAChB,SACA,WACA,SACA,eACA,UACA,SACA,iBACA,mBACA,eACA,qBACA,qBACA,SACA,aACA,QACA,kBACA,iBACA,gBACA,qBACA,qBACA,wBACA,0BACA,wBACA,iBACA,gBACA,Y9E06CyC;KAC3ChH,eAAe;KACfnd,QAAQ;MACN8B,cAAc;MACdD,aAAY;MACZD,gBAAgB;MAChBpzB,MAAM;OACJxC,MAAM;;;;I8E96CV8zB,QAAO;IACPsD,YAAY;MAERyjD,2BAAmD;IACvDl4E,MAAM;IACNg1C,YAAY;IACZC,WAAW;KACT,KAAK;MACHC,eAAe;;KAEjBC,SAAS;MACPC,YAAY;MACZF,eAAe;;;IAGnBG,aAAa;IACbC,iBAAiB,EAAC,kBAA6B;IAC/CC,eAAe,EAAC;IAChBC,kBAAkB,EAChB,SACA,WACA,eACA,SACA,iBACA,mBACA,eACA,qBACA,qBACA,SACA,aACA,QACA,iBACA,yBACA,2BACA,cACA,SACA,SACA;IAEFC,WAAW;IACXhhB;MAEI2jD,kCAA0D;IAC9Dp4E,MAAM;IACNg1C,YAAY;IACZC,WAAW;KACT,KAAK;MACHC,eAAe;;KAEjBC,SAAS;MACPC,YAAY;MACZF,eAAe;;;IAGnBI,iBAAiB,EAAC,kBAA6B;IAC/CC,eAAe,EAAC;IAChBC,kBAAkB,EAChB,SACA,WACA,SACA,eACA,SACA,iBACA,mBACA,eACA,qBACA,qBACA,SACA,aACA,QACA,iBACA,uBACA,yBACA,eACA,mBACA,kBACA,yBACA,yBACA,WACA,oBACA,SACA,gBACA;IAEFrkB,QAAO;IACPsD,YAAY;MAER6jD,oBAA4C;IAChDt4E,MAAM;IACNg1C,YAAY;IACZC,WAAW;KACT,KAAK;MACHC,eAAe;;KAEjBC,SAAS;MACPC,YAAY;MACZF,eAAe;;;IAGnBI,iBAAiB,EAAC,kB9Ei4C2B;KAC7C9G,eAAe;KACfnd,QAAQ;MACN8B,cAAc;MACdD,aAAY;MACZD,gBAAgB;MAChBpzB,MAAM;OACJxC,MAAM;;;;I8Ev4CVk4C,eAAe,EAAC;IAChBC,kBAAkB,EAChB,SACA,WACA,SACA,SACA,iBACA,mBACA,SACA,aACA;IAEFrkB,QAAO;IACPsD,YAAY;;GCzPP,MAAM8jD;IAOXr7E,YAAY6G;KACVrJ,KAAKqJ,SAASA;AAChB;IAWAy0E,OACE34C,eACAyP,MACAxzC;KAEA,MAAMg4C,qBAAkD;MACtDjU;MACAyP;MACAxzC,SAAS,qCAA8CA,WAAW,CAAC;;KAErE,OAAOpB,KAAKqJ,OAAOgwC,qBACjBD,oBACA2kC;AAEJ;IAeAC,eACE74C,eACAS,YACAxkC;KAEA,MAAMg4C,qBAAkD;MACtDjU;MACAS;MACAxkC,SAAS,qCAA8CA,WAAW,CAAC;;KAErE,OAAOpB,KAAKqJ,OAAOgwC,qBACjBD,oBACA6kC;AAEJ;IAWAC,WACEnlC,SACA5T,eACAyP,MACAxzC;KAEA,MAAMg4C,qBAAkD;MACtDL;MACA5T;MACAyP;MACAxzC,SAAS,qCAA8CA,WAAW,CAAC;;KAErE,OAAOpB,KAAKqJ,OAAOgwC,qBACjBD,oBACA+kC;AAEJ;IAYAC,kBACErlC,SACA5T,eACAmT,WACAl3C;KAEA,MAAMg4C,qBAAkD;MACtDL;MACA5T;MACAmT;MACAl3C,SAAS,qCAA8CA,WAAW,CAAC;;KAErE,OAAOpB,KAAKqJ,OAAOgwC,qBACjBD,oBACAilC;AAEJ;IAaAC,gBACEtlC,QACA53C;KAEA,MAAMg4C,qBAAkD;MACtDJ;MACA53C,SAAS,qCAA8CA,WAAW,CAAC;;KAErE,OAAOpB,KAAKqJ,OAAOgwC,qBACjBD,oBACAmlC;AAEJ;IASAC,aACEC,UACAr9E;KAEA,MAAMg4C,qBAAkD;MACtDqlC;MACAr9E,SAAS,qCAA8CA,WAAW,CAAC;;KAErE,OAAOpB,KAAKqJ,OAAOgwC,qBACjBD,oBACAslC;AAEJ;;GAGF,MAAM,0BAAgB,IAAI,WAAoB,0BAAqB,IAC7D,uBAAa,IAAI,WAAoB,0BAAqB,IAE1DX,sBAA8C;IAClDz4E,MAAM;IACNg1C,YAAY;IACZC,WAAW;KACT,KAAK;MACHC,eAAe;;KAEjBC,SAAS;MACPC,YAAY;MACZF,eAAe;;;IAGnBG,aAAa;IACbC,iBAAiB,EAAC;IAClBC,eAAe,EAAC;IAChBC,kBAAkB,EAChB,SACA,WACA,eACA,UACA,SACA,iBACA,mBACA,eACA,qBACA,qBACA,SACA,aACA,QACA,kBACA,iBACA,gBACA,qBACA,qBACA,wBACA,0BACA,wBACA,iBACA,MACA,gBACA,YACA,yBACA,cACA,SACA;IAEFC,WAAW;IACXhhB,YAAU;MAENkkD,8BAAsD;IAC1D34E,MAAM;IACNg1C,YAAY;IACZC,WAAW;KACT,KAAK;MACHC,eAAe;;KAEjBC,SAAS;MACPC,YAAY;MACZF,eAAe;;;IAGnBI,iBAAiB,EAAC;IAClBC,eAAe,EAAC;IAChBC,kBAAkB,EAChB,SACA,WACA,SACA,eACA,UACA,SACA,iBACA,mBACA,eACA,qBACA,qBACA,SACA,aACA,QACA,kBACA,iBACA,gBACA,qBACA,qBACA,wBACA,iBACA,MACA,uBACA,yBACA,eACA,mBACA,cACA,YACA,gBACA,kBACA,yBACA,gBACA,yBACA,W/Ey3CwD;KAC1DhH,eAAe,EAAC,WAAW;KAC3Bnd,QAAQ;MACN4B,gBAAgB;MAChB+C,SAAS;MACTn2B,MAAM;OACJxC,MAAM;;;;I+E53CV8zB,QAAO;IACPsD,YAAY;MAERokD,0BAAkD;IACtD74E,MAAM;IACNg1C,YAAY;IACZC,WAAW;KACT,KAAK;MACHC,eAAe;;KAEjBC,SAAS;MACPC,YAAY;MACZF,eAAe;;;IAGnBG,aAAa;IACbC,iBAAiB,EACf,kBACA,QACA;IAEFC,eAAe,EAAC;IAChBC,kBAAkB,EAChB,SACA,WACA,eACA,SACA,eACA,qBACA,qBACA,iBACA,yBACA,2BACA,cACA;IAEFC,WAAW;IACXhhB,YAAU;MAENskD,iCAAyD;IAC7D/4E,MAAM;IACNg1C,YAAY;IACZC,WAAW;KACT,KAAK;MACHC,eAAe;;KAEjBC,SAAS;MACPC,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AEjBC,SAAS;MACPC,YAAY;MACZF,eAAe;;;IAGnBI,iBAAiB,EAAC;IAClBC,eAAe,EAAC;IAChBC,kBAAkB,EAChB,SACA,WACA,SACA,eACA,UACA,SACA,iBACA,mBACA,eACA,qBACA,qBACA,SACA,aACA,QACA,kBACA,iBACA,gBACA,qBACA,qBACA,wBACA,0BACA,wBACA,iBACA,MACA,gBACA,YhF6iCwC;KAC1ChH,eAAe;KACfnd,QAAQ;MACN8B,cAAc;MACdD,aAAY;MACZD,gBAAgB;MAChBpzB,MAAM;OACJxC,MAAM;;;OgFljCR,mBACA;IAEF8zB,QAAO;IACPsD,YAAY;MAER8kD,2BAAmD;IACvDv5E,MAAM;IACNg1C,YAAY;IACZC,WAAW;KACT,KAAK;MACHC,eAAe;;KAEjBC,SAAS;MACPC,YAAY;MACZF,eAAe;;;IAGnBG,aAAa;IACbC,iBAAiB,EAAC,kBAA6B;IAC/CC,eAAe,EAAC;IAChBC,kBAAkB,EAChB,SACA,WACA,eACA,SACA,iBACA,mBACA,OACA,eACA,qBACA,qBACA,SACA,aACA,QACA,iBACA,yBACA,2BACA,cACA,SACA,WACA,mCACA,0BACA;IAEFC,WAAW;IACXhhB,YAAU;MAENglD,0BAAkD;IACtDz5E,MAAM;IACNg1C,YAAY;IACZC,WAAW;KACT,KAAK;MACHC,eAAe;;KAEjBC,SAAS;MACPC,YAAY;MACZF,eAAe;;;IAGnBI,iBAAiB,EAAC,kBAA6B;IAC/CC,eAAe,EAAC;IAChBC,kBAAkB,EAChB,SACA,WACA,SACA,eACA,SACA,iBACA,mBACA,OACA,eACA,qBACA,qBACA,SACA,aACA,QACA,iBACA,mCACA,0BACA,yBhFumC0C;KAC5ChH,eAAe;KACfnd,QAAQ;MACN8B,cAAc;MACdD,aAAY;MACZD,gBAAgB;MAChBpzB,MAAM;OACJxC,MAAM;;;;IgF3mCV8zB,QAAO;IACPsD,YAAY;MAERmlD,kCAA0D;IAC9D55E,MAAM;IACNg1C,YAAY;IACZC,WAAW;KACT,KAAK;MACHC,eAAe;;KAEjBC,SAAS;MACPC,YAAY;MACZF,eAAe;;;IAGnB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","sources":["webpack://cache-action-entrypoint/webpack/universalModuleDefinition","webpack://cache-action-entrypoint/../src/cache.ts","webpack://cache-action-entrypoint/../../src/internal/cacheHttpClient.ts","webpack://cache-action-entrypoint/../../src/internal/cacheUtils.ts","webpack://cache-action-entrypoint/../../src/internal/constants.ts","webpack://cache-action-entrypoint/../../src/internal/downloadUtils.ts","webpack://cache-action-entrypoint/../../src/internal/requestUtils.ts","webpack://cache-action-entrypoint/../../src/internal/tar.ts","webpack://cache-action-entrypoint/../src/options.ts","webpack://cache-action-entrypoint/../src/glob.ts","webpack://cache-action-entrypoint/../src/internal-glob-options-helper.ts","webpack://cache-action-entrypoint/../src/internal-globber.ts","webpack://cache-action-entrypoint/../src/internal-match-kind.ts","webpack://cache-action-entrypoint/../src/internal-path-helper.ts","webpack://cache-action-entrypoint/../src/internal-path.ts","webpack://cache-action-entrypoint/../src/internal-pattern-helper.ts","webpack://cache-action-entrypoint/../src/internal-pattern.ts","webpack://cache-action-entrypoint/../src/internal-search-state.ts","webpack://cache-action-entrypoint/../../node_modules/@actions/cache/node_modules/uuid/index.js","webpack://cache-action-entrypoint/../../node_modules/@actions/cache/node_modules/uuid/lib/bytesToUuid.js","webpack://cache-action-entrypoint/../../node_modules/@actions/cache/node_modules/uuid/lib/rng.js","webpack://cache-action-entrypoint/../../node_modules/@actions/cache/node_modules/uuid/v1.js","webpack://cache-action-entrypoint/../../node_modules/@actions/cache/node_modules/uuid/v4.js","webpack://cache-action-entrypoint/../src/command.ts","webpack://cache-action-entrypoint/../src/core.ts","webpack://cache-action-entrypoint/../src/file-command.ts","webpack://cache-action-entrypoint/../src/oidc-utils.ts","webpack://cache-action-entrypoint/../src/path-utils.ts","webpack://cache-action-entrypoint/../src/summary.ts","webpack://cache-action-entrypoint/../src/utils.ts","webpack://cache-action-entrypoint/../src/exec.ts","webpack://cache-action-entrypoint/../src/toolrunner.ts","webpack://cache-action-entrypoint/../src/internal-hash-files.ts","webpack://cache-action-entrypoint/../src/auth.ts","webpack://cache-action-entrypoint/../src/index.ts","webpack://cache-action-entrypoint/../src/proxy.ts","webpack://cache-action-entrypoint/../src/io-util.ts","webpack://cache-action-entrypoint/../src/io.ts","webpack://cache-action-entrypoint/../src/manifest.ts","webpack://cache-action-entrypoint/../src/retry-helper.ts","webpack://cache-action-entrypoint/../src/tool-cache.ts","webpack://cache-action-entrypoint/../../node_modules/@actions/tool-cache/node_modules/uuid/lib/bytesToUuid.js","webpack://cache-action-entrypoint/../../node_modules/@actions/tool-cache/node_modules/uuid/lib/rng.js","webpack://cache-action-entrypoint/../../node_modules/@actions/tool-cache/node_modules/uuid/v4.js","webpack://cache-action-entrypoint/../../node_modules/@azure/abort-controller/src/AbortController.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/abort-controller/src/AbortSignal.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/node_modules/form-data/lib/form_data.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/node_modules/form-data/lib/populate.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/node_modules/tough-cookie/lib/cookie.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/node_modules/tough-cookie/lib/memstore.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/node_modules/tough-cookie/lib/pathMatch.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/node_modules/tough-cookie/lib/permuteDomain.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/node_modules/tough-cookie/lib/pubsuffix-psl.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/node_modules/tough-cookie/lib/store.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/node_modules/tough-cookie/lib/utilHelper.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/node_modules/tough-cookie/lib/validators.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/node_modules/tough-cookie/lib/version.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/util/serializer.common.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/util/utils.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/url.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/util/sanitizer.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/util/inspect.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/restError.ts","webpack://cache-action-entrypoint/../../node_modules/tslib/tslib.es6.js","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/httpPipelineLogLevel.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-auth/src/tokenCredential.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/requestPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/util/constants.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/proxyPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/platform/node/globalThis.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/version.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/internal/semver.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/internal/global-utils.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/context/context.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/diag/types.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/context/NoopContextManager.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/diag/ComponentLogger.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/trace/trace_flags.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/api/diag.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/diag/internal/logLevelLogger.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/api/context.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/trace/invalid-span-constants.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/trace/NonRecordingSpan.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/trace/context-utils.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/trace/spancontext-utils.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/trace/NoopTracer.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/trace/ProxyTracer.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-tracing/src/interfaces.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/trace/ProxyTracerProvider.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/trace/NoopTracerProvider.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/api/trace.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/trace-api.ts","webpack://cache-action-entrypoint/../../node_modules/@opentelemetry/api/src/context-api.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/operationOptions.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/util/base64.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/serializer.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/models/mappers.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/queryCollectionFormat.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/models/parameters.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/operations/service.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/operations/container.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-tracing/src/createSpan.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-tracing/src/utils/traceParentHeader.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/logger/src/debug.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/logger/src/log.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/logger/src/index.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/log.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/tracingPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/keepAlivePolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/generateClientRequestIdPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/util/xml.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/deserializationPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/logPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/disableResponseDecompressionPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/httpHeaders.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/webResource.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/log.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/constants.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/utils.common.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/StorageBrowserPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/StorageBrowserPolicyFactory.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/StorageRetryPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/StorageRetryPolicyFactory.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/CredentialPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/AnonymousCredentialPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/credentials/Credential.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/credentials/AnonymousCredential.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/TelemetryPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/TelemetryPolicyFactory.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/proxyAgent.ts","webpack://cache-action-entrypoint/external node-commonjs \"zlib\"","webpack://cache-action-entrypoint/../../node_modules/node-fetch/lib/index.mjs","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/nodeFetchHttpClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/cache.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-util/src/typeGuards.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-util/src/delay.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/StorageBearerTokenChallengeAuthenticationPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/Pipeline.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/policies/StorageSharedKeyCredentialPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/credentials/StorageSharedKeyCredential.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/redirectPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/util/exponentialBackoffStrategy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/exponentialRetryPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/operationParameter.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/msRestUserAgentPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/userAgentPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/bearerTokenAuthenticationPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/httpClientCache.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/rpRegistrationPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/signingPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/systemErrorRetryPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/util/throttlingRetryStrategy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/policies/throttlingRetryPolicy.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/serviceClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-http/src/operationSpec.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/storageClientContext.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/StorageClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/tracing.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/BlobSASPermissions.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/ContainerSASPermissions.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/credentials/UserDelegationKeyCredential.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/SasIPRange.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/SASQueryParameters.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/BlobSASSignatureValues.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/operations/blob.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BlobLeaseClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/RetriableReadableStream.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BlobDownloadResponse.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-internal-avro/src/AvroConstants.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-internal-avro/src/AvroParser.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-internal-avro/src/utils/utils.common.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-internal-avro/src/AvroReader.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-internal-avro/src/AvroReadable.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-internal-avro/src/AvroReadableFromStream.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/BlobQuickQueryStream.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BlobQueryResponse.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/operations/appendBlob.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/operations/blockBlob.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/generated/src/operations/pageBlob.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/models.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/PageBlobRangeResponse.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/core-lro/src/legacy/poller.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/pollers/BlobStartCopyFromUrlPoller.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/Range.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/Batch.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-common/src/BuffersStream.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-common/src/PooledBuffer.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-common/src/BufferScheduler.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/utils.node.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/Clients.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BatchUtils.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BatchResponseParser.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/utils/Mutex.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BlobBatch.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BlobBatchClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/ContainerClient.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/AccountSASPermissions.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/AccountSASResourceTypes.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/AccountSASServices.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/sas/AccountSASSignatureValues.ts","webpack://cache-action-entrypoint/../../node_modules/@azure/storage-blob/src/BlobServiceClient.ts","webpack://cache-action-entrypoint/../../node_modules/asynckit/index.js","webpack://cache-action-entrypoint/../../node_modules/asynckit/lib/abort.js","webpack://cache-action-entrypoint/../../node_modules/asynckit/lib/async.js","webpack://cache-action-entrypoint/../../node_modules/asynckit/lib/defer.js","webpack://cache-action-entrypoint/../../node_modules/asynckit/lib/iterate.js","webpack://cache-action-entrypoint/../../node_modules/asynckit/lib/state.js","webpack://cache-action-entrypoint/../../node_modules/asynckit/lib/terminator.js","webpack://cache-action-entrypoint/../../node_modules/asynckit/parallel.js","webpack://cache-action-entrypoint/../../node_modules/asynckit/serial.js","webpack://cache-action-entrypoint/../../node_modules/asynckit/serialOrdered.js","webpack://cache-action-entrypoint/../../node_modules/balanced-match/index.js","webpack://cache-action-entrypoint/../../node_modules/brace-expansion/index.js","webpack://cache-action-entrypoint/../../node_modules/combined-stream/lib/combined_stream.js","webpack://cache-action-entrypoint/../../node_modules/concat-map/index.js","webpack://cache-action-entrypoint/../../node_modules/delayed-stream/lib/delayed_stream.js","webpack://cache-action-entrypoint/../../node_modules/java-properties/dist-node/index.js","webpack://cache-action-entrypoint/../../node_modules/mime-db/index.js","webpack://cache-action-entrypoint/../../node_modules/mime-types/index.js","webpack://cache-action-entrypoint/../../node_modules/minimatch/minimatch.js","webpack://cache-action-entrypoint/../../node_modules/psl/index.js","webpack://cache-action-entrypoint/../../node_modules/punycode/punycode.es6.js","webpack://cache-action-entrypoint/../../node_modules/querystringify/index.js","webpack://cache-action-entrypoint/../../node_modules/requires-port/index.js","webpack://cache-action-entrypoint/../../node_modules/sax/lib/sax.js","webpack://cache-action-entrypoint/../../node_modules/semver/semver.js","webpack://cache-action-entrypoint/../../node_modules/string-argv/index.js","webpack://cache-action-entrypoint/../../node_modules/tr46/index.js","webpack://cache-action-entrypoint/../../node_modules/tunnel/index.js","webpack://cache-action-entrypoint/../../node_modules/tunnel/lib/tunnel.js","webpack://cache-action-entrypoint/../../node_modules/universalify/index.js","webpack://cache-action-entrypoint/../../node_modules/url-parse/index.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/v1.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/parse.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/v35.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/md5.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/v3.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/sha1.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/v5.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/nil.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/version.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/rng.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/stringify.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/v4.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/regex.js","webpack://cache-action-entrypoint/../../node_modules/uuid/dist/esm-node/validate.js","webpack://cache-action-entrypoint/../../node_modules/webidl-conversions/lib/index.js","webpack://cache-action-entrypoint/../../node_modules/whatwg-url/lib/URL-impl.js","webpack://cache-action-entrypoint/../../node_modules/whatwg-url/lib/URL.js","webpack://cache-action-entrypoint/../../node_modules/whatwg-url/lib/public-api.js","webpack://cache-action-entrypoint/../../node_modules/whatwg-url/lib/url-state-machine.js","webpack://cache-action-entrypoint/../../node_modules/whatwg-url/lib/utils.js","webpack://cache-action-entrypoint/../../node_modules/xml2js/lib/bom.js","webpack://cache-action-entrypoint/../../node_modules/xml2js/lib/builder.js","webpack://cache-action-entrypoint/../../node_modules/xml2js/lib/defaults.js","webpack://cache-action-entrypoint/../../node_modules/xml2js/lib/parser.js","webpack://cache-action-entrypoint/../../node_modules/xml2js/lib/processors.js","webpack://cache-action-entrypoint/../../node_modules/xml2js/lib/xml2js.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/DocumentPosition.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/NodeType.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/Utility.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/WriterState.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLAttribute.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLCData.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLCharacterData.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLComment.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDOMConfiguration.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDOMImplementation.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDOMStringList.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDTDAttList.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDTDElement.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDTDEntity.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDTDNotation.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDeclaration.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDocType.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDocument.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDocumentCB.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLDummy.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLElement.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLNamedNodeMap.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLNode.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLNodeList.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLRaw.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLStreamWriter.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLStringWriter.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLStringifier.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLText.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/XMLWriterBase.js","webpack://cache-action-entrypoint/../../node_modules/xmlbuilder/lib/index.js","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/88b0986a7186d029/atomicfu/src/commonMain/kotlin/kotlinx/atomicfu/Trace.common.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/88b0986a7186d029/atomicfu/src/jsMain/kotlin/kotlinx/atomicfu/AtomicFU.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-cache/src/main/kotlin/actions/cache/CacheExtensions.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-cache/src/main/kotlin/actions/cache/RestoreType.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/main/kotlin/actions/core/ActionFailedException.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/main/kotlin/actions/core/ActionsEnvironment.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/main/kotlin/actions/core/ext/InputExtensions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Standard.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-js/src/jsMain/kotlin/js/core/jso.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/Strings.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Collections.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/main/kotlin/actions/core/issueCommandExtensions.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/main/kotlin/actions/exec/ExecExtensions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/dynamic.kt","webpack://cache-action-entrypoint/../../../../wrappers/actions-toolkit/src/main/kotlin/actions/glob/removeFiles.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-js/src/jsMain/kotlin/js/core/ReadonlyRecord.kt","webpack://cache-action-entrypoint/../../../../cache-action-entrypoint/src/main/kotlin/main.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Maps.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Arrays.kt","webpack://cache-action-entrypoint/../../../../cache-proxy/src/main/kotlin/com/github/burrunan/gradle/proxy/CacheProxy.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Result.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/coroutines/Continuation.kt","webpack://cache-action-entrypoint/../../../../cache-service-mock/src/main/kotlin/com/github/burrunan/gradle/cache/HttpException.kt","webpack://cache-action-entrypoint/../../../../cache-service-mock/src/main/kotlin/com/github/burrunan/gradle/cache/HttpExtensions.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/main/kotlin/com/github/burrunan/launcher/GradleDistribution.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/main/kotlin/com/github/burrunan/launcher/GradleInstaller.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/main/kotlin/com/github/burrunan/launcher/GradleLauncher.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/main/kotlin/com/github/burrunan/launcher/GradleVersion.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/main/kotlin/com/github/burrunan/launcher/LaunchParams.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/main/kotlin/com/github/burrunan/launcher/internal/GradleError.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/main/kotlin/com/github/burrunan/launcher/internal/GradleErrorCollector.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Collections.kt","webpack://cache-action-entrypoint/../../../../gradle-launcher/src/main/kotlin/com/github/burrunan/launcher/internal/GradleOutErrorCollector.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/MutableCollections.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/StringBuilder.kt","webpack://cache-action-entrypoint/../../../../hashing/src/main/kotlin/com/github/burrunan/hashing/HashDetails.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/string.kt","webpack://cache-action-entrypoint/../../../../hashing/src/main/kotlin/com/github/burrunan/hashing/diff.kt","webpack://cache-action-entrypoint/../../../../hashing/src/main/kotlin/com/github/burrunan/hashing/hashFiles.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/builtins/Library.kt","webpack://cache-action-entrypoint/../../../../wrappers/java-properties/src/main/kotlin/javaproperties/parseString.kt","webpack://cache-action-entrypoint/../../../../wrappers/js/src/main/kotlin/com/github/burrunan/formatBytes.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/long.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/main/kotlin/com/github/burrunan/gradle/GradleCacheAction.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/main/kotlin/com/github/burrunan/gradle/Parameters.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/main/kotlin/com/github/burrunan/gradle/cache/ActionsTriggerExtensions.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/main/kotlin/com/github/burrunan/gradle/cache/CompositeCache.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/main/kotlin/com/github/burrunan/gradle/cache/DefaultCache.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/main/kotlin/com/github/burrunan/gradle/cache/GradleGeneratedJarsCache.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/main/kotlin/com/github/burrunan/gradle/cache/LayeredCache.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/main/kotlin/com/github/burrunan/gradle/cache/MetadataFile.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/main/kotlin/com/github/burrunan/gradle/cache/dependenciesCache.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/main/kotlin/com/github/burrunan/gradle/cache/localBuildCache.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/generated/_ArraysJs.kt","webpack://cache-action-entrypoint/../../../../layered-cache/src/main/kotlin/com/github/burrunan/gradle/github/StateExtensions.kt","webpack://cache-action-entrypoint/../../../../wrappers/nodejs/src/main/kotlin/com/github/burrunan/wrappers/nodejs/FsExtensions.kt","webpack://cache-action-entrypoint/../../../../wrappers/nodejs/src/main/kotlin/com/github/burrunan/wrappers/nodejs/StreamExtensions.kt","webpack://cache-action-entrypoint/../../../../wrappers/octokit-webhooks/src/main/kotlin/octokit/ActionsTrigger.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/js/math.polyfills.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/ArrayBuffer.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/math.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/coroutines/CoroutineContext.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/coroutines/ContinuationInterceptor.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/InternalMap.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Sequences.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/generated/_ComparisonsJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Ranges.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Preconditions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Sequences.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Sets.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/common/src/generated/_Strings.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractCollection.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractList.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractMap.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/AbstractSet.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/IndexedValue.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Iterables.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Iterators.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/MapWithDefault.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/Sets.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/comparisons/Comparisons.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/coroutines/CoroutineContextImpl.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/coroutines/intrinsics/Intrinsics.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/internal/progressionUtil.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/ranges/PrimitiveRanges.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/ranges/ProgressionIterators.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/ranges/Progressions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/ranges/Ranges.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/Appendable.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/Char.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/char.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/Indent.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/text/StringNumberConversions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/stringsCode.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/DeepRecursive.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Lazy.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/Tuples.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/unsigned/src/kotlin/UShort.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/runtime/primitiveCompanionObjects.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/kotlinHacks.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableCollection.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableList.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableMap.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/AbstractMutableSet.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/ArrayList.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/ArraySorting.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/HashMap.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/HashSet.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/InternalHashCodeMap.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/LinkedHashMap.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/LinkedHashSet.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/coroutines/SafeContinuationJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/coroutines/cancellation/CancellationException.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/coroutines/js/internal/EmptyContinuation.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/math.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/numbers.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/reflect/KClassImpl.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/reflect/primitives.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/reflect/reflection.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/StringBuilderJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/numberConversions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/text/regex.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/throwableExtensions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/builtins/Char.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/builtins/Enum.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/BitMask.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/arrays.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/noPackageHacks.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/bitUtils.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/charSequence.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/CharCode.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/collectionsHacks.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/compareTo.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/coreRuntime.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/coroutineInternalJS.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/hacks.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/longjs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/numberConversion.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/rangeTo.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/reflectRuntime.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/runtime/typeCheckUtils.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/generated/_DigitChars.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/generated/_WhitespaceChars.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines_13/CoroutineImpl.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines_13/IntrinsicsJs.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/exceptions.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/jsOperators.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/collections/PrimitiveIterators.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/core/builtins/src/kotlin/Unit.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/collections/EqualityComparator.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/jsMainSources/libraries/stdlib/js/src/kotlin/regexp.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-actions-toolkit/src/jsMain/generated/actions/cache/restoreCache.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-actions-toolkit/src/jsMain/generated/actions/cache/saveCache.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-actions-toolkit/src/jsMain/generated/actions/exec/exec.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-actions-toolkit/src/jsMain/generated/actions/glob/create.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-actions-toolkit/src/jsMain/generated/actions/io/mkdirP.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-actions-toolkit/src/jsMain/generated/actions/io/rmRF.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-actions-toolkit/src/jsMain/generated/actions/tool/cache/cacheDir.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-actions-toolkit/src/jsMain/generated/actions/tool/cache/downloadTool.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-actions-toolkit/src/jsMain/generated/actions/tool/cache/extractZip.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-js/src/jsMain/kotlin/js/core/Record.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-js/src/jsMain/kotlin/js/core/recordOf.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-node/src/jsMain/generated/node/fs/chmod.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-node/src/jsMain/generated/node/fs/mkdir.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-node/src/jsMain/generated/node/fs/readFile.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-node/src/jsMain/generated/node/fs/rename.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-node/src/jsMain/generated/node/fs/stat.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-node/src/jsMain/generated/node/fs/unlink.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-node/src/jsMain/generated/node/fs/writeFile.kt","webpack://cache-action-entrypoint/../../../../../../../../../Users/leonid.khachaturov/code/kotlin-wrappers-new/kotlin-node/src/jsMain/generated/node/stream/finished.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/descriptors/SerialDescriptor.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/encoding/Decoding.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/encoding/Encoding.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/PluginHelperInterfaces.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/PolymorphicSerializer.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/SerializationExceptions.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/descriptors/ContextAware.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/descriptors/SerialDescriptors.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/descriptors/SerialKinds.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/AbstractPolymorphicSerializer.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/CollectionDescriptors.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/CollectionSerializers.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/ElementMarker.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/JsonInternalDependencies.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/Platform.common.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/PluginExceptions.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/PluginGeneratedSerialDescriptor.kt","webpack://cache-action-entrypoint/../../../../../cache-action-entrypoint/build/compileSync/js/main/productionExecutable/kotlin/commonMainSources/libraries/stdlib/src/kotlin/util/HashCode.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/Primitives.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/internal/Tagged.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/modules/SerializersModule.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/modules/SerializersModuleBuilders.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/jsMain/src/kotlinx/serialization/internal/Platform.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/encoding/AbstractDecoder.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/core/commonMain/src/kotlinx/serialization/encoding/AbstractEncoder.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/Json.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/JsonConfiguration.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/JsonElement.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/JsonElementSerializers.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/Composers.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/JsonElementMarker.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/JsonExceptions.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/JsonNamesMap.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/JsonPath.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/JsonStreams.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/JsonTreeReader.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/lexer/AbstractJsonLexer.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/Polymorphic.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/TreeJsonEncoder.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/SchemaCache.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/StreamingJsonDecoder.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/StreamingJsonEncoder.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/StringOps.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/TreeJsonDecoder.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/WriteMode.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/commonMain/src/kotlinx/serialization/json/internal/lexer/StringJsonLexer.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/jsMain/src/kotlinx/serialization/json/JsonSchemaCache.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/jsMain/src/kotlinx/serialization/json/internal/JsonToStringWriter.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/buildAgent/work/b2fef8360e1bcf3d/formats/json/jsMain/src/kotlinx/serialization/json/internal/createMapForCache.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Job.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/AbstractCoroutine.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Builders.common.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CancellableContinuationImpl.kt","webpack://cache-action-entrypoint/../../../../../../../../../mnt/agent/work/88b0986a7186d029/atomicfu/src/commonMain/kotlin/kotlinx/atomicfu/AtomicFU.common.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/CompletionHandler.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CompletionState.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineDispatcher.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineExceptionHandler.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/EventLoop.common.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Exceptions.common.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/JobSupport.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/internal/LinkedList.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/internal/Synchronized.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/MainCoroutineDispatcher.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Supervisor.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Unconfined.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/ArrayQueue.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/DispatchedContinuation.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/DispatchedTask.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/CoroutineContext.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/Scopes.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/Symbol.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/intrinsics/Cancellable.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/intrinsics/Undispatched.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/internal/ProbesSupport.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/CoroutineExceptionHandlerImpl.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/Debug.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/Dispatchers.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/EventLoop.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/Exceptions.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/JSDispatcher.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CancellableContinuation.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/Promise.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/SchedulerTask.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/Window.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/internal/Concurrent.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/internal/StackTraceRecovery.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/internal/ThreadContext.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/internal/ThreadLocal.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineScope.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineStart.kt","webpack://cache-action-entrypoint/../../../../../../../../../opt/teamcity-agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CompletionHandler.common.kt","webpack://cache-action-entrypoint/external node-commonjs \"assert\"","webpack://cache-action-entrypoint/external node-commonjs \"buffer\"","webpack://cache-action-entrypoint/external node-commonjs \"child_process\"","webpack://cache-action-entrypoint/external node-commonjs \"crypto\"","webpack://cache-action-entrypoint/external node-commonjs \"events\"","webpack://cache-action-entrypoint/external node-commonjs \"fs\"","webpack://cache-action-entrypoint/external node-commonjs \"http\"","webpack://cache-action-entrypoint/external node-commonjs \"https\"","webpack://cache-action-entrypoint/external node-commonjs \"net\"","webpack://cache-action-entrypoint/external node-commonjs \"node:crypto\"","webpack://cache-action-entrypoint/external node-commonjs \"node:fs\"","webpack://cache-action-entrypoint/external node-commonjs \"node:fs/promises\"","webpack://cache-action-entrypoint/external node-commonjs \"node:http\"","webpack://cache-action-entrypoint/external node-commonjs \"node:os\"","webpack://cache-action-entrypoint/external node-commonjs \"node:path\"","webpack://cache-action-entrypoint/external node-commonjs \"node:process\"","webpack://cache-action-entrypoint/external node-commonjs \"node:stream/promises\"","webpack://cache-action-entrypoint/external node-commonjs \"node:url\"","webpack://cache-action-entrypoint/external node-commonjs \"os\"","webpack://cache-action-entrypoint/external node-commonjs \"path\"","webpack://cache-action-entrypoint/external node-commonjs \"punycode\"","webpack://cache-action-entrypoint/external node-commonjs \"stream\"","webpack://cache-action-entrypoint/external node-commonjs \"string_decoder\"","webpack://cache-action-entrypoint/external node-commonjs \"timers\"","webpack://cache-action-entrypoint/external node-commonjs \"tls\"","webpack://cache-action-entrypoint/external node-commonjs \"url\"","webpack://cache-action-entrypoint/external node-commonjs \"util\"","webpack://cache-action-entrypoint/webpack/bootstrap","webpack://cache-action-entrypoint/webpack/runtime/compat get default export","webpack://cache-action-entrypoint/webpack/runtime/define property getters","webpack://cache-action-entrypoint/webpack/runtime/hasOwnProperty shorthand","webpack://cache-action-entrypoint/webpack/runtime/make namespace object","webpack://cache-action-entrypoint/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cache-action-entrypoint\"] = factory();\n\telse\n\t\troot[\"cache-action-entrypoint\"] = factory();\n})(this, () => {\nreturn ",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignal, AbortSignalLike, abortSignal } from \"./AbortSignal\";\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n\n/**\n * An AbortController provides an AbortSignal and the associated controls to signal\n * that an asynchronous operation should be aborted.\n *\n * @example\n * Abort an operation when another event fires\n * ```ts\n * const controller = new AbortController();\n * const signal = controller.signal;\n * doAsyncWork(signal);\n * button.addEventListener('click', () => controller.abort());\n * ```\n *\n * @example\n * Share aborter cross multiple operations in 30s\n * ```ts\n * // Upload the same data to 2 different data centers at the same time,\n * // abort another when any of them is finished\n * const controller = AbortController.withTimeout(30 * 1000);\n * doAsyncWork(controller.signal).then(controller.abort);\n * doAsyncWork(controller.signal).then(controller.abort);\n *```\n *\n * @example\n * Cascaded aborting\n * ```ts\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * ```\n */\nexport class AbortController {\n  private _signal: AbortSignal;\n\n  /**\n   * @param parentSignals - The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   */\n  constructor(parentSignals?: AbortSignalLike[]);\n  /**\n   * @param parentSignals - The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   */\n  constructor(...parentSignals: AbortSignalLike[]);\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  constructor(parentSignals?: any) {\n    this._signal = new AbortSignal();\n\n    if (!parentSignals) {\n      return;\n    }\n    // coerce parentSignals into an array\n    if (!Array.isArray(parentSignals)) {\n      // eslint-disable-next-line prefer-rest-params\n      parentSignals = arguments;\n    }\n    for (const parentSignal of parentSignals) {\n      // if the parent signal has already had abort() called,\n      // then call abort on this signal as well.\n      if (parentSignal.aborted) {\n        this.abort();\n      } else {\n        // when the parent signal aborts, this signal should as well.\n        parentSignal.addEventListener(\"abort\", () => {\n          this.abort();\n        });\n      }\n    }\n  }\n\n  /**\n   * The AbortSignal associated with this controller that will signal aborted\n   * when the abort method is called on this controller.\n   *\n   * @readonly\n   */\n  public get signal(): AbortSignal {\n    return this._signal;\n  }\n\n  /**\n   * Signal that any operations passed this controller's associated abort signal\n   * to cancel any remaining work and throw an `AbortError`.\n   */\n  abort(): void {\n    abortSignal(this._signal);\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will abort after the provided ms.\n   * @param ms - Elapsed time in milliseconds to trigger an abort.\n   */\n  public static timeout(ms: number): AbortSignal {\n    const signal = new AbortSignal();\n    const timer = setTimeout(abortSignal, ms, signal);\n    // Prevent the active Timer from keeping the Node.js event loop active.\n    if (typeof timer.unref === \"function\") {\n      timer.unref();\n    }\n    return signal;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../shims-public.d.ts\" />\n\ntype AbortEventListener = (this: AbortSignalLike, ev?: any) => any;\n\nconst listenersMap = new WeakMap<AbortSignal, AbortEventListener[]>();\nconst abortedMap = new WeakMap<AbortSignal, boolean>();\n\n/**\n * Allows the request to be aborted upon firing of the \"abort\" event.\n * Compatible with the browser built-in AbortSignal and common polyfills.\n */\nexport interface AbortSignalLike {\n  /**\n   * Indicates if the signal has already been aborted.\n   */\n  readonly aborted: boolean;\n  /**\n   * Add new \"abort\" event listener, only support \"abort\" event.\n   */\n  addEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   */\n  removeEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n}\n\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.\n * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation\n * cannot or will not ever be cancelled.\n *\n * @example\n * Abort without timeout\n * ```ts\n * await doAsyncWork(AbortSignal.none);\n * ```\n */\nexport class AbortSignal implements AbortSignalLike {\n  constructor() {\n    listenersMap.set(this, []);\n    abortedMap.set(this, false);\n  }\n\n  /**\n   * Status of whether aborted or not.\n   *\n   * @readonly\n   */\n  public get aborted(): boolean {\n    if (!abortedMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    return abortedMap.get(this)!;\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will never be aborted.\n   *\n   * @readonly\n   */\n  public static get none(): AbortSignal {\n    return new AbortSignal();\n  }\n\n  /**\n   * onabort event listener.\n   */\n  public onabort: ((ev?: Event) => any) | null = null;\n\n  /**\n   * Added new \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param _type - Only support \"abort\" event\n   * @param listener - The listener to be added\n   */\n  public addEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n    listeners.push(listener);\n  }\n\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param _type - Only support \"abort\" event\n   * @param listener - The listener to be removed\n   */\n  public removeEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Dispatches a synthetic event to the AbortSignal.\n   */\n  dispatchEvent(_event: Event): boolean {\n    throw new Error(\n      \"This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.\"\n    );\n  }\n}\n\n/**\n * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.\n * Will try to trigger abort event for all linked AbortSignal nodes.\n *\n * - If there is a timeout, the timer will be cancelled.\n * - If aborted is true, nothing will happen.\n *\n * @internal\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nexport function abortSignal(signal: AbortSignal): void {\n  if (signal.aborted) {\n    return;\n  }\n\n  if (signal.onabort) {\n    signal.onabort.call(signal);\n  }\n\n  const listeners = listenersMap.get(signal)!;\n  if (listeners) {\n    // Create a copy of listeners so mutations to the array\n    // (e.g. via removeListener calls) don't affect the listeners\n    // we invoke.\n    listeners.slice().forEach((listener) => {\n      listener.call(signal, { type: \"abort\" });\n    });\n  }\n\n  abortedMap.set(signal, true);\n}\n","var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar Stream = require('stream').Stream;\nvar mime = require('mime-types');\nvar asynckit = require('asynckit');\nvar populate = require('./populate.js');\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response or not a stream\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) && !(value instanceof Stream))) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity –> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (!headers.hasOwnProperty(prop)) continue;\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.setBoundary = function(boundary) {\n  this._boundary = boundary;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc( 0 );\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err && err !== 'Unknown stream') {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    if (length) {\n      request.setHeader('Content-Length', length);\n    }\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\n","// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n","/*!\n * Copyright (c) 2015-2020, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst punycode = require(\"punycode/\");\nconst urlParse = require(\"url-parse\");\nconst pubsuffix = require(\"./pubsuffix-psl\");\nconst Store = require(\"./store\").Store;\nconst MemoryCookieStore = require(\"./memstore\").MemoryCookieStore;\nconst pathMatch = require(\"./pathMatch\").pathMatch;\nconst validators = require(\"./validators.js\");\nconst VERSION = require(\"./version\");\nconst { fromCallback } = require(\"universalify\");\nconst { getCustomInspectSymbol } = require(\"./utilHelper\");\n\n// From RFC6265 S4.1.1\n// note that it excludes \\x3B \";\"\nconst COOKIE_OCTETS = /^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]+$/;\n\nconst CONTROL_CHARS = /[\\x00-\\x1F]/;\n\n// From Chromium // '\\r', '\\n' and '\\0' should be treated as a terminator in\n// the \"relaxed\" mode, see:\n// https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L60\nconst TERMINATORS = [\"\\n\", \"\\r\", \"\\0\"];\n\n// RFC6265 S4.1.1 defines path value as 'any CHAR except CTLs or \";\"'\n// Note ';' is \\x3B\nconst PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/;\n\n// date-time parsing constants (RFC6265 S5.1.1)\n\nconst DATE_DELIM = /[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]/;\n\nconst MONTH_TO_NUM = {\n  jan: 0,\n  feb: 1,\n  mar: 2,\n  apr: 3,\n  may: 4,\n  jun: 5,\n  jul: 6,\n  aug: 7,\n  sep: 8,\n  oct: 9,\n  nov: 10,\n  dec: 11\n};\n\nconst MAX_TIME = 2147483647000; // 31-bit max\nconst MIN_TIME = 0; // 31-bit min\nconst SAME_SITE_CONTEXT_VAL_ERR =\n  'Invalid sameSiteContext option for getCookies(); expected one of \"strict\", \"lax\", or \"none\"';\n\nfunction checkSameSiteContext(value) {\n  validators.validate(validators.isNonEmptyString(value), value);\n  const context = String(value).toLowerCase();\n  if (context === \"none\" || context === \"lax\" || context === \"strict\") {\n    return context;\n  } else {\n    return null;\n  }\n}\n\nconst PrefixSecurityEnum = Object.freeze({\n  SILENT: \"silent\",\n  STRICT: \"strict\",\n  DISABLED: \"unsafe-disabled\"\n});\n\n// Dumped from ip-regex@4.0.0, with the following changes:\n// * all capturing groups converted to non-capturing -- \"(?:)\"\n// * support for IPv6 Scoped Literal (\"%eth1\") removed\n// * lowercase hexadecimal only\nconst IP_REGEX_LOWERCASE = /(?:^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$)|(?:^(?:(?:[a-f\\d]{1,4}:){7}(?:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,2}|:)|(?:[a-f\\d]{1,4}:){4}(?:(?::[a-f\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,3}|:)|(?:[a-f\\d]{1,4}:){3}(?:(?::[a-f\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,4}|:)|(?:[a-f\\d]{1,4}:){2}(?:(?::[a-f\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,5}|:)|(?:[a-f\\d]{1,4}:){1}(?:(?::[a-f\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-f\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,7}|:)))$)/;\nconst IP_V6_REGEX = `\n\\\\[?(?:\n(?:[a-fA-F\\\\d]{1,4}:){7}(?:[a-fA-F\\\\d]{1,4}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|:[a-fA-F\\\\d]{1,4}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,2}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){4}(?:(?::[a-fA-F\\\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,3}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){3}(?:(?::[a-fA-F\\\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,4}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){2}(?:(?::[a-fA-F\\\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,5}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){1}(?:(?::[a-fA-F\\\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,6}|:)|\n(?::(?:(?::[a-fA-F\\\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,7}|:))\n)(?:%[0-9a-zA-Z]{1,})?\\\\]?\n`\n  .replace(/\\s*\\/\\/.*$/gm, \"\")\n  .replace(/\\n/g, \"\")\n  .trim();\nconst IP_V6_REGEX_OBJECT = new RegExp(`^${IP_V6_REGEX}$`);\n\n/*\n * Parses a Natural number (i.e., non-negative integer) with either the\n *    <min>*<max>DIGIT ( non-digit *OCTET )\n * or\n *    <min>*<max>DIGIT\n * grammar (RFC6265 S5.1.1).\n *\n * The \"trailingOK\" boolean controls if the grammar accepts a\n * \"( non-digit *OCTET )\" trailer.\n */\nfunction parseDigits(token, minDigits, maxDigits, trailingOK) {\n  let count = 0;\n  while (count < token.length) {\n    const c = token.charCodeAt(count);\n    // \"non-digit = %x00-2F / %x3A-FF\"\n    if (c <= 0x2f || c >= 0x3a) {\n      break;\n    }\n    count++;\n  }\n\n  // constrain to a minimum and maximum number of digits.\n  if (count < minDigits || count > maxDigits) {\n    return null;\n  }\n\n  if (!trailingOK && count != token.length) {\n    return null;\n  }\n\n  return parseInt(token.substr(0, count), 10);\n}\n\nfunction parseTime(token) {\n  const parts = token.split(\":\");\n  const result = [0, 0, 0];\n\n  /* RF6256 S5.1.1:\n   *      time            = hms-time ( non-digit *OCTET )\n   *      hms-time        = time-field \":\" time-field \":\" time-field\n   *      time-field      = 1*2DIGIT\n   */\n\n  if (parts.length !== 3) {\n    return null;\n  }\n\n  for (let i = 0; i < 3; i++) {\n    // \"time-field\" must be strictly \"1*2DIGIT\", HOWEVER, \"hms-time\" can be\n    // followed by \"( non-digit *OCTET )\" so therefore the last time-field can\n    // have a trailer\n    const trailingOK = i == 2;\n    const num = parseDigits(parts[i], 1, 2, trailingOK);\n    if (num === null) {\n      return null;\n    }\n    result[i] = num;\n  }\n\n  return result;\n}\n\nfunction parseMonth(token) {\n  token = String(token)\n    .substr(0, 3)\n    .toLowerCase();\n  const num = MONTH_TO_NUM[token];\n  return num >= 0 ? num : null;\n}\n\n/*\n * RFC6265 S5.1.1 date parser (see RFC for full grammar)\n */\nfunction parseDate(str) {\n  if (!str) {\n    return;\n  }\n\n  /* RFC6265 S5.1.1:\n   * 2. Process each date-token sequentially in the order the date-tokens\n   * appear in the cookie-date\n   */\n  const tokens = str.split(DATE_DELIM);\n  if (!tokens) {\n    return;\n  }\n\n  let hour = null;\n  let minute = null;\n  let second = null;\n  let dayOfMonth = null;\n  let month = null;\n  let year = null;\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i].trim();\n    if (!token.length) {\n      continue;\n    }\n\n    let result;\n\n    /* 2.1. If the found-time flag is not set and the token matches the time\n     * production, set the found-time flag and set the hour- value,\n     * minute-value, and second-value to the numbers denoted by the digits in\n     * the date-token, respectively.  Skip the remaining sub-steps and continue\n     * to the next date-token.\n     */\n    if (second === null) {\n      result = parseTime(token);\n      if (result) {\n        hour = result[0];\n        minute = result[1];\n        second = result[2];\n        continue;\n      }\n    }\n\n    /* 2.2. If the found-day-of-month flag is not set and the date-token matches\n     * the day-of-month production, set the found-day-of- month flag and set\n     * the day-of-month-value to the number denoted by the date-token.  Skip\n     * the remaining sub-steps and continue to the next date-token.\n     */\n    if (dayOfMonth === null) {\n      // \"day-of-month = 1*2DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 1, 2, true);\n      if (result !== null) {\n        dayOfMonth = result;\n        continue;\n      }\n    }\n\n    /* 2.3. If the found-month flag is not set and the date-token matches the\n     * month production, set the found-month flag and set the month-value to\n     * the month denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n    if (month === null) {\n      result = parseMonth(token);\n      if (result !== null) {\n        month = result;\n        continue;\n      }\n    }\n\n    /* 2.4. If the found-year flag is not set and the date-token matches the\n     * year production, set the found-year flag and set the year-value to the\n     * number denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n    if (year === null) {\n      // \"year = 2*4DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 2, 4, true);\n      if (result !== null) {\n        year = result;\n        /* From S5.1.1:\n         * 3.  If the year-value is greater than or equal to 70 and less\n         * than or equal to 99, increment the year-value by 1900.\n         * 4.  If the year-value is greater than or equal to 0 and less\n         * than or equal to 69, increment the year-value by 2000.\n         */\n        if (year >= 70 && year <= 99) {\n          year += 1900;\n        } else if (year >= 0 && year <= 69) {\n          year += 2000;\n        }\n      }\n    }\n  }\n\n  /* RFC 6265 S5.1.1\n   * \"5. Abort these steps and fail to parse the cookie-date if:\n   *     *  at least one of the found-day-of-month, found-month, found-\n   *        year, or found-time flags is not set,\n   *     *  the day-of-month-value is less than 1 or greater than 31,\n   *     *  the year-value is less than 1601,\n   *     *  the hour-value is greater than 23,\n   *     *  the minute-value is greater than 59, or\n   *     *  the second-value is greater than 59.\n   *     (Note that leap seconds cannot be represented in this syntax.)\"\n   *\n   * So, in order as above:\n   */\n  if (\n    dayOfMonth === null ||\n    month === null ||\n    year === null ||\n    second === null ||\n    dayOfMonth < 1 ||\n    dayOfMonth > 31 ||\n    year < 1601 ||\n    hour > 23 ||\n    minute > 59 ||\n    second > 59\n  ) {\n    return;\n  }\n\n  return new Date(Date.UTC(year, month, dayOfMonth, hour, minute, second));\n}\n\nfunction formatDate(date) {\n  validators.validate(validators.isDate(date), date);\n  return date.toUTCString();\n}\n\n// S5.1.2 Canonicalized Host Names\nfunction canonicalDomain(str) {\n  if (str == null) {\n    return null;\n  }\n  str = str.trim().replace(/^\\./, \"\"); // S4.1.2.3 & S5.2.3: ignore leading .\n\n  if (IP_V6_REGEX_OBJECT.test(str)) {\n    str = str.replace(\"[\", \"\").replace(\"]\", \"\");\n  }\n\n  // convert to IDN if any non-ASCII characters\n  if (punycode && /[^\\u0001-\\u007f]/.test(str)) {\n    str = punycode.toASCII(str);\n  }\n\n  return str.toLowerCase();\n}\n\n// S5.1.3 Domain Matching\nfunction domainMatch(str, domStr, canonicalize) {\n  if (str == null || domStr == null) {\n    return null;\n  }\n  if (canonicalize !== false) {\n    str = canonicalDomain(str);\n    domStr = canonicalDomain(domStr);\n  }\n\n  /*\n   * S5.1.3:\n   * \"A string domain-matches a given domain string if at least one of the\n   * following conditions hold:\"\n   *\n   * \" o The domain string and the string are identical. (Note that both the\n   * domain string and the string will have been canonicalized to lower case at\n   * this point)\"\n   */\n  if (str == domStr) {\n    return true;\n  }\n\n  /* \" o All of the following [three] conditions hold:\" */\n\n  /* \"* The domain string is a suffix of the string\" */\n  const idx = str.lastIndexOf(domStr);\n  if (idx <= 0) {\n    return false; // it's a non-match (-1) or prefix (0)\n  }\n\n  // next, check it's a proper suffix\n  // e.g., \"a.b.c\".indexOf(\"b.c\") === 2\n  // 5 === 3+2\n  if (str.length !== domStr.length + idx) {\n    return false; // it's not a suffix\n  }\n\n  /* \"  * The last character of the string that is not included in the\n   * domain string is a %x2E (\".\") character.\" */\n  if (str.substr(idx - 1, 1) !== \".\") {\n    return false; // doesn't align on \".\"\n  }\n\n  /* \"  * The string is a host name (i.e., not an IP address).\" */\n  if (IP_REGEX_LOWERCASE.test(str)) {\n    return false; // it's an IP address\n  }\n\n  return true;\n}\n\n// RFC6265 S5.1.4 Paths and Path-Match\n\n/*\n * \"The user agent MUST use an algorithm equivalent to the following algorithm\n * to compute the default-path of a cookie:\"\n *\n * Assumption: the path (and not query part or absolute uri) is passed in.\n */\nfunction defaultPath(path) {\n  // \"2. If the uri-path is empty or if the first character of the uri-path is not\n  // a %x2F (\"/\") character, output %x2F (\"/\") and skip the remaining steps.\n  if (!path || path.substr(0, 1) !== \"/\") {\n    return \"/\";\n  }\n\n  // \"3. If the uri-path contains no more than one %x2F (\"/\") character, output\n  // %x2F (\"/\") and skip the remaining step.\"\n  if (path === \"/\") {\n    return path;\n  }\n\n  const rightSlash = path.lastIndexOf(\"/\");\n  if (rightSlash === 0) {\n    return \"/\";\n  }\n\n  // \"4. Output the characters of the uri-path from the first character up to,\n  // but not including, the right-most %x2F (\"/\").\"\n  return path.slice(0, rightSlash);\n}\n\nfunction trimTerminator(str) {\n  if (validators.isEmptyString(str)) return str;\n  for (let t = 0; t < TERMINATORS.length; t++) {\n    const terminatorIdx = str.indexOf(TERMINATORS[t]);\n    if (terminatorIdx !== -1) {\n      str = str.substr(0, terminatorIdx);\n    }\n  }\n\n  return str;\n}\n\nfunction parseCookiePair(cookiePair, looseMode) {\n  cookiePair = trimTerminator(cookiePair);\n  validators.validate(validators.isString(cookiePair), cookiePair);\n\n  let firstEq = cookiePair.indexOf(\"=\");\n  if (looseMode) {\n    if (firstEq === 0) {\n      // '=' is immediately at start\n      cookiePair = cookiePair.substr(1);\n      firstEq = cookiePair.indexOf(\"=\"); // might still need to split on '='\n    }\n  } else {\n    // non-loose mode\n    if (firstEq <= 0) {\n      // no '=' or is at start\n      return; // needs to have non-empty \"cookie-name\"\n    }\n  }\n\n  let cookieName, cookieValue;\n  if (firstEq <= 0) {\n    cookieName = \"\";\n    cookieValue = cookiePair.trim();\n  } else {\n    cookieName = cookiePair.substr(0, firstEq).trim();\n    cookieValue = cookiePair.substr(firstEq + 1).trim();\n  }\n\n  if (CONTROL_CHARS.test(cookieName) || CONTROL_CHARS.test(cookieValue)) {\n    return;\n  }\n\n  const c = new Cookie();\n  c.key = cookieName;\n  c.value = cookieValue;\n  return c;\n}\n\nfunction parse(str, options) {\n  if (!options || typeof options !== \"object\") {\n    options = {};\n  }\n\n  if (validators.isEmptyString(str) || !validators.isString(str)) {\n    return null;\n  }\n\n  str = str.trim();\n\n  // We use a regex to parse the \"name-value-pair\" part of S5.2\n  const firstSemi = str.indexOf(\";\"); // S5.2 step 1\n  const cookiePair = firstSemi === -1 ? str : str.substr(0, firstSemi);\n  const c = parseCookiePair(cookiePair, !!options.loose);\n  if (!c) {\n    return;\n  }\n\n  if (firstSemi === -1) {\n    return c;\n  }\n\n  // S5.2.3 \"unparsed-attributes consist of the remainder of the set-cookie-string\n  // (including the %x3B (\";\") in question).\" plus later on in the same section\n  // \"discard the first \";\" and trim\".\n  const unparsed = str.slice(firstSemi + 1).trim();\n\n  // \"If the unparsed-attributes string is empty, skip the rest of these\n  // steps.\"\n  if (unparsed.length === 0) {\n    return c;\n  }\n\n  /*\n   * S5.2 says that when looping over the items \"[p]rocess the attribute-name\n   * and attribute-value according to the requirements in the following\n   * subsections\" for every item.  Plus, for many of the individual attributes\n   * in S5.3 it says to use the \"attribute-value of the last attribute in the\n   * cookie-attribute-list\".  Therefore, in this implementation, we overwrite\n   * the previous value.\n   */\n  const cookie_avs = unparsed.split(\";\");\n  while (cookie_avs.length) {\n    const av = cookie_avs.shift().trim();\n    if (av.length === 0) {\n      // happens if \";;\" appears\n      continue;\n    }\n    const av_sep = av.indexOf(\"=\");\n    let av_key, av_value;\n\n    if (av_sep === -1) {\n      av_key = av;\n      av_value = null;\n    } else {\n      av_key = av.substr(0, av_sep);\n      av_value = av.substr(av_sep + 1);\n    }\n\n    av_key = av_key.trim().toLowerCase();\n\n    if (av_value) {\n      av_value = av_value.trim();\n    }\n\n    switch (av_key) {\n      case \"expires\": // S5.2.1\n        if (av_value) {\n          const exp = parseDate(av_value);\n          // \"If the attribute-value failed to parse as a cookie date, ignore the\n          // cookie-av.\"\n          if (exp) {\n            // over and underflow not realistically a concern: V8's getTime() seems to\n            // store something larger than a 32-bit time_t (even with 32-bit node)\n            c.expires = exp;\n          }\n        }\n        break;\n\n      case \"max-age\": // S5.2.2\n        if (av_value) {\n          // \"If the first character of the attribute-value is not a DIGIT or a \"-\"\n          // character ...[or]... If the remainder of attribute-value contains a\n          // non-DIGIT character, ignore the cookie-av.\"\n          if (/^-?[0-9]+$/.test(av_value)) {\n            const delta = parseInt(av_value, 10);\n            // \"If delta-seconds is less than or equal to zero (0), let expiry-time\n            // be the earliest representable date and time.\"\n            c.setMaxAge(delta);\n          }\n        }\n        break;\n\n      case \"domain\": // S5.2.3\n        // \"If the attribute-value is empty, the behavior is undefined.  However,\n        // the user agent SHOULD ignore the cookie-av entirely.\"\n        if (av_value) {\n          // S5.2.3 \"Let cookie-domain be the attribute-value without the leading %x2E\n          // (\".\") character.\"\n          const domain = av_value.trim().replace(/^\\./, \"\");\n          if (domain) {\n            // \"Convert the cookie-domain to lower case.\"\n            c.domain = domain.toLowerCase();\n          }\n        }\n        break;\n\n      case \"path\": // S5.2.4\n        /*\n         * \"If the attribute-value is empty or if the first character of the\n         * attribute-value is not %x2F (\"/\"):\n         *   Let cookie-path be the default-path.\n         * Otherwise:\n         *   Let cookie-path be the attribute-value.\"\n         *\n         * We'll represent the default-path as null since it depends on the\n         * context of the parsing.\n         */\n        c.path = av_value && av_value[0] === \"/\" ? av_value : null;\n        break;\n\n      case \"secure\": // S5.2.5\n        /*\n         * \"If the attribute-name case-insensitively matches the string \"Secure\",\n         * the user agent MUST append an attribute to the cookie-attribute-list\n         * with an attribute-name of Secure and an empty attribute-value.\"\n         */\n        c.secure = true;\n        break;\n\n      case \"httponly\": // S5.2.6 -- effectively the same as 'secure'\n        c.httpOnly = true;\n        break;\n\n      case \"samesite\": // RFC6265bis-02 S5.3.7\n        const enforcement = av_value ? av_value.toLowerCase() : \"\";\n        switch (enforcement) {\n          case \"strict\":\n            c.sameSite = \"strict\";\n            break;\n          case \"lax\":\n            c.sameSite = \"lax\";\n            break;\n          case \"none\":\n            c.sameSite = \"none\";\n            break;\n          default:\n            c.sameSite = undefined;\n            break;\n        }\n        break;\n\n      default:\n        c.extensions = c.extensions || [];\n        c.extensions.push(av);\n        break;\n    }\n  }\n\n  return c;\n}\n\n/**\n *  If the cookie-name begins with a case-sensitive match for the\n *  string \"__Secure-\", abort these steps and ignore the cookie\n *  entirely unless the cookie's secure-only-flag is true.\n * @param cookie\n * @returns boolean\n */\nfunction isSecurePrefixConditionMet(cookie) {\n  validators.validate(validators.isObject(cookie), cookie);\n  return !cookie.key.startsWith(\"__Secure-\") || cookie.secure;\n}\n\n/**\n *  If the cookie-name begins with a case-sensitive match for the\n *  string \"__Host-\", abort these steps and ignore the cookie\n *  entirely unless the cookie meets all the following criteria:\n *    1.  The cookie's secure-only-flag is true.\n *    2.  The cookie's host-only-flag is true.\n *    3.  The cookie-attribute-list contains an attribute with an\n *        attribute-name of \"Path\", and the cookie's path is \"/\".\n * @param cookie\n * @returns boolean\n */\nfunction isHostPrefixConditionMet(cookie) {\n  validators.validate(validators.isObject(cookie));\n  return (\n    !cookie.key.startsWith(\"__Host-\") ||\n    (cookie.secure &&\n      cookie.hostOnly &&\n      cookie.path != null &&\n      cookie.path === \"/\")\n  );\n}\n\n// avoid the V8 deoptimization monster!\nfunction jsonParse(str) {\n  let obj;\n  try {\n    obj = JSON.parse(str);\n  } catch (e) {\n    return e;\n  }\n  return obj;\n}\n\nfunction fromJSON(str) {\n  if (!str || validators.isEmptyString(str)) {\n    return null;\n  }\n\n  let obj;\n  if (typeof str === \"string\") {\n    obj = jsonParse(str);\n    if (obj instanceof Error) {\n      return null;\n    }\n  } else {\n    // assume it's an Object\n    obj = str;\n  }\n\n  const c = new Cookie();\n  for (let i = 0; i < Cookie.serializableProperties.length; i++) {\n    const prop = Cookie.serializableProperties[i];\n    if (obj[prop] === undefined || obj[prop] === cookieDefaults[prop]) {\n      continue; // leave as prototype default\n    }\n\n    if (prop === \"expires\" || prop === \"creation\" || prop === \"lastAccessed\") {\n      if (obj[prop] === null) {\n        c[prop] = null;\n      } else {\n        c[prop] = obj[prop] == \"Infinity\" ? \"Infinity\" : new Date(obj[prop]);\n      }\n    } else {\n      c[prop] = obj[prop];\n    }\n  }\n\n  return c;\n}\n\n/* Section 5.4 part 2:\n * \"*  Cookies with longer paths are listed before cookies with\n *     shorter paths.\n *\n *  *  Among cookies that have equal-length path fields, cookies with\n *     earlier creation-times are listed before cookies with later\n *     creation-times.\"\n */\n\nfunction cookieCompare(a, b) {\n  validators.validate(validators.isObject(a), a);\n  validators.validate(validators.isObject(b), b);\n  let cmp = 0;\n\n  // descending for length: b CMP a\n  const aPathLen = a.path ? a.path.length : 0;\n  const bPathLen = b.path ? b.path.length : 0;\n  cmp = bPathLen - aPathLen;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // ascending for time: a CMP b\n  const aTime = a.creation ? a.creation.getTime() : MAX_TIME;\n  const bTime = b.creation ? b.creation.getTime() : MAX_TIME;\n  cmp = aTime - bTime;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // break ties for the same millisecond (precision of JavaScript's clock)\n  cmp = a.creationIndex - b.creationIndex;\n\n  return cmp;\n}\n\n// Gives the permutation of all possible pathMatch()es of a given path. The\n// array is in longest-to-shortest order.  Handy for indexing.\nfunction permutePath(path) {\n  validators.validate(validators.isString(path));\n  if (path === \"/\") {\n    return [\"/\"];\n  }\n  const permutations = [path];\n  while (path.length > 1) {\n    const lindex = path.lastIndexOf(\"/\");\n    if (lindex === 0) {\n      break;\n    }\n    path = path.substr(0, lindex);\n    permutations.push(path);\n  }\n  permutations.push(\"/\");\n  return permutations;\n}\n\nfunction getCookieContext(url) {\n  if (url instanceof Object) {\n    return url;\n  }\n  // NOTE: decodeURI will throw on malformed URIs (see GH-32).\n  // Therefore, we will just skip decoding for such URIs.\n  try {\n    url = decodeURI(url);\n  } catch (err) {\n    // Silently swallow error\n  }\n\n  return urlParse(url);\n}\n\nconst cookieDefaults = {\n  // the order in which the RFC has them:\n  key: \"\",\n  value: \"\",\n  expires: \"Infinity\",\n  maxAge: null,\n  domain: null,\n  path: null,\n  secure: false,\n  httpOnly: false,\n  extensions: null,\n  // set by the CookieJar:\n  hostOnly: null,\n  pathIsDefault: null,\n  creation: null,\n  lastAccessed: null,\n  sameSite: undefined\n};\n\nclass Cookie {\n  constructor(options = {}) {\n    const customInspectSymbol = getCustomInspectSymbol();\n    if (customInspectSymbol) {\n      this[customInspectSymbol] = this.inspect;\n    }\n\n    Object.assign(this, cookieDefaults, options);\n    this.creation = this.creation || new Date();\n\n    // used to break creation ties in cookieCompare():\n    Object.defineProperty(this, \"creationIndex\", {\n      configurable: false,\n      enumerable: false, // important for assert.deepEqual checks\n      writable: true,\n      value: ++Cookie.cookiesCreated\n    });\n  }\n\n  inspect() {\n    const now = Date.now();\n    const hostOnly = this.hostOnly != null ? this.hostOnly : \"?\";\n    const createAge = this.creation\n      ? `${now - this.creation.getTime()}ms`\n      : \"?\";\n    const accessAge = this.lastAccessed\n      ? `${now - this.lastAccessed.getTime()}ms`\n      : \"?\";\n    return `Cookie=\"${this.toString()}; hostOnly=${hostOnly}; aAge=${accessAge}; cAge=${createAge}\"`;\n  }\n\n  toJSON() {\n    const obj = {};\n\n    for (const prop of Cookie.serializableProperties) {\n      if (this[prop] === cookieDefaults[prop]) {\n        continue; // leave as prototype default\n      }\n\n      if (\n        prop === \"expires\" ||\n        prop === \"creation\" ||\n        prop === \"lastAccessed\"\n      ) {\n        if (this[prop] === null) {\n          obj[prop] = null;\n        } else {\n          obj[prop] =\n            this[prop] == \"Infinity\" // intentionally not ===\n              ? \"Infinity\"\n              : this[prop].toISOString();\n        }\n      } else if (prop === \"maxAge\") {\n        if (this[prop] !== null) {\n          // again, intentionally not ===\n          obj[prop] =\n            this[prop] == Infinity || this[prop] == -Infinity\n              ? this[prop].toString()\n              : this[prop];\n        }\n      } else {\n        if (this[prop] !== cookieDefaults[prop]) {\n          obj[prop] = this[prop];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  clone() {\n    return fromJSON(this.toJSON());\n  }\n\n  validate() {\n    if (!COOKIE_OCTETS.test(this.value)) {\n      return false;\n    }\n    if (\n      this.expires != Infinity &&\n      !(this.expires instanceof Date) &&\n      !parseDate(this.expires)\n    ) {\n      return false;\n    }\n    if (this.maxAge != null && this.maxAge <= 0) {\n      return false; // \"Max-Age=\" non-zero-digit *DIGIT\n    }\n    if (this.path != null && !PATH_VALUE.test(this.path)) {\n      return false;\n    }\n\n    const cdomain = this.cdomain();\n    if (cdomain) {\n      if (cdomain.match(/\\.$/)) {\n        return false; // S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this\n      }\n      const suffix = pubsuffix.getPublicSuffix(cdomain);\n      if (suffix == null) {\n        // it's a public suffix\n        return false;\n      }\n    }\n    return true;\n  }\n\n  setExpires(exp) {\n    if (exp instanceof Date) {\n      this.expires = exp;\n    } else {\n      this.expires = parseDate(exp) || \"Infinity\";\n    }\n  }\n\n  setMaxAge(age) {\n    if (age === Infinity || age === -Infinity) {\n      this.maxAge = age.toString(); // so JSON.stringify() works\n    } else {\n      this.maxAge = age;\n    }\n  }\n\n  cookieString() {\n    let val = this.value;\n    if (val == null) {\n      val = \"\";\n    }\n    if (this.key === \"\") {\n      return val;\n    }\n    return `${this.key}=${val}`;\n  }\n\n  // gives Set-Cookie header format\n  toString() {\n    let str = this.cookieString();\n\n    if (this.expires != Infinity) {\n      if (this.expires instanceof Date) {\n        str += `; Expires=${formatDate(this.expires)}`;\n      } else {\n        str += `; Expires=${this.expires}`;\n      }\n    }\n\n    if (this.maxAge != null && this.maxAge != Infinity) {\n      str += `; Max-Age=${this.maxAge}`;\n    }\n\n    if (this.domain && !this.hostOnly) {\n      str += `; Domain=${this.domain}`;\n    }\n    if (this.path) {\n      str += `; Path=${this.path}`;\n    }\n\n    if (this.secure) {\n      str += \"; Secure\";\n    }\n    if (this.httpOnly) {\n      str += \"; HttpOnly\";\n    }\n    if (this.sameSite && this.sameSite !== \"none\") {\n      const ssCanon = Cookie.sameSiteCanonical[this.sameSite.toLowerCase()];\n      str += `; SameSite=${ssCanon ? ssCanon : this.sameSite}`;\n    }\n    if (this.extensions) {\n      this.extensions.forEach(ext => {\n        str += `; ${ext}`;\n      });\n    }\n\n    return str;\n  }\n\n  // TTL() partially replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n  // elsewhere)\n  // S5.3 says to give the \"latest representable date\" for which we use Infinity\n  // For \"expired\" we use 0\n  TTL(now) {\n    /* RFC6265 S4.1.2.2 If a cookie has both the Max-Age and the Expires\n     * attribute, the Max-Age attribute has precedence and controls the\n     * expiration date of the cookie.\n     * (Concurs with S5.3 step 3)\n     */\n    if (this.maxAge != null) {\n      return this.maxAge <= 0 ? 0 : this.maxAge * 1000;\n    }\n\n    let expires = this.expires;\n    if (expires != Infinity) {\n      if (!(expires instanceof Date)) {\n        expires = parseDate(expires) || Infinity;\n      }\n\n      if (expires == Infinity) {\n        return Infinity;\n      }\n\n      return expires.getTime() - (now || Date.now());\n    }\n\n    return Infinity;\n  }\n\n  // expiryTime() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n  // elsewhere)\n  expiryTime(now) {\n    if (this.maxAge != null) {\n      const relativeTo = now || this.creation || new Date();\n      const age = this.maxAge <= 0 ? -Infinity : this.maxAge * 1000;\n      return relativeTo.getTime() + age;\n    }\n\n    if (this.expires == Infinity) {\n      return Infinity;\n    }\n    return this.expires.getTime();\n  }\n\n  // expiryDate() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n  // elsewhere), except it returns a Date\n  expiryDate(now) {\n    const millisec = this.expiryTime(now);\n    if (millisec == Infinity) {\n      return new Date(MAX_TIME);\n    } else if (millisec == -Infinity) {\n      return new Date(MIN_TIME);\n    } else {\n      return new Date(millisec);\n    }\n  }\n\n  // This replaces the \"persistent-flag\" parts of S5.3 step 3\n  isPersistent() {\n    return this.maxAge != null || this.expires != Infinity;\n  }\n\n  // Mostly S5.1.2 and S5.2.3:\n  canonicalizedDomain() {\n    if (this.domain == null) {\n      return null;\n    }\n    return canonicalDomain(this.domain);\n  }\n\n  cdomain() {\n    return this.canonicalizedDomain();\n  }\n}\n\nCookie.cookiesCreated = 0;\nCookie.parse = parse;\nCookie.fromJSON = fromJSON;\nCookie.serializableProperties = Object.keys(cookieDefaults);\nCookie.sameSiteLevel = {\n  strict: 3,\n  lax: 2,\n  none: 1\n};\n\nCookie.sameSiteCanonical = {\n  strict: \"Strict\",\n  lax: \"Lax\"\n};\n\nfunction getNormalizedPrefixSecurity(prefixSecurity) {\n  if (prefixSecurity != null) {\n    const normalizedPrefixSecurity = prefixSecurity.toLowerCase();\n    /* The three supported options */\n    switch (normalizedPrefixSecurity) {\n      case PrefixSecurityEnum.STRICT:\n      case PrefixSecurityEnum.SILENT:\n      case PrefixSecurityEnum.DISABLED:\n        return normalizedPrefixSecurity;\n    }\n  }\n  /* Default is SILENT */\n  return PrefixSecurityEnum.SILENT;\n}\n\nclass CookieJar {\n  constructor(store, options = { rejectPublicSuffixes: true }) {\n    if (typeof options === \"boolean\") {\n      options = { rejectPublicSuffixes: options };\n    }\n    validators.validate(validators.isObject(options), options);\n    this.rejectPublicSuffixes = options.rejectPublicSuffixes;\n    this.enableLooseMode = !!options.looseMode;\n    this.allowSpecialUseDomain =\n      typeof options.allowSpecialUseDomain === \"boolean\"\n        ? options.allowSpecialUseDomain\n        : true;\n    this.store = store || new MemoryCookieStore();\n    this.prefixSecurity = getNormalizedPrefixSecurity(options.prefixSecurity);\n    this._cloneSync = syncWrap(\"clone\");\n    this._importCookiesSync = syncWrap(\"_importCookies\");\n    this.getCookiesSync = syncWrap(\"getCookies\");\n    this.getCookieStringSync = syncWrap(\"getCookieString\");\n    this.getSetCookieStringsSync = syncWrap(\"getSetCookieStrings\");\n    this.removeAllCookiesSync = syncWrap(\"removeAllCookies\");\n    this.setCookieSync = syncWrap(\"setCookie\");\n    this.serializeSync = syncWrap(\"serialize\");\n  }\n\n  setCookie(cookie, url, options, cb) {\n    validators.validate(validators.isNonEmptyString(url), cb, options);\n    let err;\n\n    if (validators.isFunction(url)) {\n      cb = url;\n      return cb(new Error(\"No URL was specified\"));\n    }\n\n    const context = getCookieContext(url);\n    if (validators.isFunction(options)) {\n      cb = options;\n      options = {};\n    }\n\n    validators.validate(validators.isFunction(cb), cb);\n\n    if (\n      !validators.isNonEmptyString(cookie) &&\n      !validators.isObject(cookie) &&\n      cookie instanceof String &&\n      cookie.length == 0\n    ) {\n      return cb(null);\n    }\n\n    const host = canonicalDomain(context.hostname);\n    const loose = options.loose || this.enableLooseMode;\n\n    let sameSiteContext = null;\n    if (options.sameSiteContext) {\n      sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n      if (!sameSiteContext) {\n        return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n      }\n    }\n\n    // S5.3 step 1\n    if (typeof cookie === \"string\" || cookie instanceof String) {\n      cookie = Cookie.parse(cookie, { loose: loose });\n      if (!cookie) {\n        err = new Error(\"Cookie failed to parse\");\n        return cb(options.ignoreError ? null : err);\n      }\n    } else if (!(cookie instanceof Cookie)) {\n      // If you're seeing this error, and are passing in a Cookie object,\n      // it *might* be a Cookie object from another loaded version of tough-cookie.\n      err = new Error(\n        \"First argument to setCookie must be a Cookie object or string\"\n      );\n      return cb(options.ignoreError ? null : err);\n    }\n\n    // S5.3 step 2\n    const now = options.now || new Date(); // will assign later to save effort in the face of errors\n\n    // S5.3 step 3: NOOP; persistent-flag and expiry-time is handled by getCookie()\n\n    // S5.3 step 4: NOOP; domain is null by default\n\n    // S5.3 step 5: public suffixes\n    if (this.rejectPublicSuffixes && cookie.domain) {\n      const suffix = pubsuffix.getPublicSuffix(cookie.cdomain(), {\n        allowSpecialUseDomain: this.allowSpecialUseDomain,\n        ignoreError: options.ignoreError\n      });\n      if (suffix == null && !IP_V6_REGEX_OBJECT.test(cookie.domain)) {\n        // e.g. \"com\"\n        err = new Error(\"Cookie has domain set to a public suffix\");\n        return cb(options.ignoreError ? null : err);\n      }\n    }\n\n    // S5.3 step 6:\n    if (cookie.domain) {\n      if (!domainMatch(host, cookie.cdomain(), false)) {\n        err = new Error(\n          `Cookie not in this host's domain. Cookie:${cookie.cdomain()} Request:${host}`\n        );\n        return cb(options.ignoreError ? null : err);\n      }\n\n      if (cookie.hostOnly == null) {\n        // don't reset if already set\n        cookie.hostOnly = false;\n      }\n    } else {\n      cookie.hostOnly = true;\n      cookie.domain = host;\n    }\n\n    //S5.2.4 If the attribute-value is empty or if the first character of the\n    //attribute-value is not %x2F (\"/\"):\n    //Let cookie-path be the default-path.\n    if (!cookie.path || cookie.path[0] !== \"/\") {\n      cookie.path = defaultPath(context.pathname);\n      cookie.pathIsDefault = true;\n    }\n\n    // S5.3 step 8: NOOP; secure attribute\n    // S5.3 step 9: NOOP; httpOnly attribute\n\n    // S5.3 step 10\n    if (options.http === false && cookie.httpOnly) {\n      err = new Error(\"Cookie is HttpOnly and this isn't an HTTP API\");\n      return cb(options.ignoreError ? null : err);\n    }\n\n    // 6252bis-02 S5.4 Step 13 & 14:\n    if (\n      cookie.sameSite !== \"none\" &&\n      cookie.sameSite !== undefined &&\n      sameSiteContext\n    ) {\n      // \"If the cookie's \"same-site-flag\" is not \"None\", and the cookie\n      //  is being set from a context whose \"site for cookies\" is not an\n      //  exact match for request-uri's host's registered domain, then\n      //  abort these steps and ignore the newly created cookie entirely.\"\n      if (sameSiteContext === \"none\") {\n        err = new Error(\n          \"Cookie is SameSite but this is a cross-origin request\"\n        );\n        return cb(options.ignoreError ? null : err);\n      }\n    }\n\n    /* 6265bis-02 S5.4 Steps 15 & 16 */\n    const ignoreErrorForPrefixSecurity =\n      this.prefixSecurity === PrefixSecurityEnum.SILENT;\n    const prefixSecurityDisabled =\n      this.prefixSecurity === PrefixSecurityEnum.DISABLED;\n    /* If prefix checking is not disabled ...*/\n    if (!prefixSecurityDisabled) {\n      let errorFound = false;\n      let errorMsg;\n      /* Check secure prefix condition */\n      if (!isSecurePrefixConditionMet(cookie)) {\n        errorFound = true;\n        errorMsg = \"Cookie has __Secure prefix but Secure attribute is not set\";\n      } else if (!isHostPrefixConditionMet(cookie)) {\n        /* Check host prefix condition */\n        errorFound = true;\n        errorMsg =\n          \"Cookie has __Host prefix but either Secure or HostOnly attribute is not set or Path is not '/'\";\n      }\n      if (errorFound) {\n        return cb(\n          options.ignoreError || ignoreErrorForPrefixSecurity\n            ? null\n            : new Error(errorMsg)\n        );\n      }\n    }\n\n    const store = this.store;\n\n    if (!store.updateCookie) {\n      store.updateCookie = function(oldCookie, newCookie, cb) {\n        this.putCookie(newCookie, cb);\n      };\n    }\n\n    function withCookie(err, oldCookie) {\n      if (err) {\n        return cb(err);\n      }\n\n      const next = function(err) {\n        if (err) {\n          return cb(err);\n        } else {\n          cb(null, cookie);\n        }\n      };\n\n      if (oldCookie) {\n        // S5.3 step 11 - \"If the cookie store contains a cookie with the same name,\n        // domain, and path as the newly created cookie:\"\n        if (options.http === false && oldCookie.httpOnly) {\n          // step 11.2\n          err = new Error(\"old Cookie is HttpOnly and this isn't an HTTP API\");\n          return cb(options.ignoreError ? null : err);\n        }\n        cookie.creation = oldCookie.creation; // step 11.3\n        cookie.creationIndex = oldCookie.creationIndex; // preserve tie-breaker\n        cookie.lastAccessed = now;\n        // Step 11.4 (delete cookie) is implied by just setting the new one:\n        store.updateCookie(oldCookie, cookie, next); // step 12\n      } else {\n        cookie.creation = cookie.lastAccessed = now;\n        store.putCookie(cookie, next); // step 12\n      }\n    }\n\n    store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);\n  }\n\n  // RFC6365 S5.4\n  getCookies(url, options, cb) {\n    validators.validate(validators.isNonEmptyString(url), cb, url);\n    const context = getCookieContext(url);\n    if (validators.isFunction(options)) {\n      cb = options;\n      options = {};\n    }\n    validators.validate(validators.isObject(options), cb, options);\n    validators.validate(validators.isFunction(cb), cb);\n\n    const host = canonicalDomain(context.hostname);\n    const path = context.pathname || \"/\";\n\n    let secure = options.secure;\n    if (\n      secure == null &&\n      context.protocol &&\n      (context.protocol == \"https:\" || context.protocol == \"wss:\")\n    ) {\n      secure = true;\n    }\n\n    let sameSiteLevel = 0;\n    if (options.sameSiteContext) {\n      const sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n      sameSiteLevel = Cookie.sameSiteLevel[sameSiteContext];\n      if (!sameSiteLevel) {\n        return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n      }\n    }\n\n    let http = options.http;\n    if (http == null) {\n      http = true;\n    }\n\n    const now = options.now || Date.now();\n    const expireCheck = options.expire !== false;\n    const allPaths = !!options.allPaths;\n    const store = this.store;\n\n    function matchingCookie(c) {\n      // \"Either:\n      //   The cookie's host-only-flag is true and the canonicalized\n      //   request-host is identical to the cookie's domain.\n      // Or:\n      //   The cookie's host-only-flag is false and the canonicalized\n      //   request-host domain-matches the cookie's domain.\"\n      if (c.hostOnly) {\n        if (c.domain != host) {\n          return false;\n        }\n      } else {\n        if (!domainMatch(host, c.domain, false)) {\n          return false;\n        }\n      }\n\n      // \"The request-uri's path path-matches the cookie's path.\"\n      if (!allPaths && !pathMatch(path, c.path)) {\n        return false;\n      }\n\n      // \"If the cookie's secure-only-flag is true, then the request-uri's\n      // scheme must denote a \"secure\" protocol\"\n      if (c.secure && !secure) {\n        return false;\n      }\n\n      // \"If the cookie's http-only-flag is true, then exclude the cookie if the\n      // cookie-string is being generated for a \"non-HTTP\" API\"\n      if (c.httpOnly && !http) {\n        return false;\n      }\n\n      // RFC6265bis-02 S5.3.7\n      if (sameSiteLevel) {\n        const cookieLevel = Cookie.sameSiteLevel[c.sameSite || \"none\"];\n        if (cookieLevel > sameSiteLevel) {\n          // only allow cookies at or below the request level\n          return false;\n        }\n      }\n\n      // deferred from S5.3\n      // non-RFC: allow retention of expired cookies by choice\n      if (expireCheck && c.expiryTime() <= now) {\n        store.removeCookie(c.domain, c.path, c.key, () => {}); // result ignored\n        return false;\n      }\n\n      return true;\n    }\n\n    store.findCookies(\n      host,\n      allPaths ? null : path,\n      this.allowSpecialUseDomain,\n      (err, cookies) => {\n        if (err) {\n          return cb(err);\n        }\n\n        cookies = cookies.filter(matchingCookie);\n\n        // sorting of S5.4 part 2\n        if (options.sort !== false) {\n          cookies = cookies.sort(cookieCompare);\n        }\n\n        // S5.4 part 3\n        const now = new Date();\n        for (const cookie of cookies) {\n          cookie.lastAccessed = now;\n        }\n        // TODO persist lastAccessed\n\n        cb(null, cookies);\n      }\n    );\n  }\n\n  getCookieString(...args) {\n    const cb = args.pop();\n    validators.validate(validators.isFunction(cb), cb);\n    const next = function(err, cookies) {\n      if (err) {\n        cb(err);\n      } else {\n        cb(\n          null,\n          cookies\n            .sort(cookieCompare)\n            .map(c => c.cookieString())\n            .join(\"; \")\n        );\n      }\n    };\n    args.push(next);\n    this.getCookies.apply(this, args);\n  }\n\n  getSetCookieStrings(...args) {\n    const cb = args.pop();\n    validators.validate(validators.isFunction(cb), cb);\n    const next = function(err, cookies) {\n      if (err) {\n        cb(err);\n      } else {\n        cb(\n          null,\n          cookies.map(c => {\n            return c.toString();\n          })\n        );\n      }\n    };\n    args.push(next);\n    this.getCookies.apply(this, args);\n  }\n\n  serialize(cb) {\n    validators.validate(validators.isFunction(cb), cb);\n    let type = this.store.constructor.name;\n    if (validators.isObject(type)) {\n      type = null;\n    }\n\n    // update README.md \"Serialization Format\" if you change this, please!\n    const serialized = {\n      // The version of tough-cookie that serialized this jar. Generally a good\n      // practice since future versions can make data import decisions based on\n      // known past behavior. When/if this matters, use `semver`.\n      version: `tough-cookie@${VERSION}`,\n\n      // add the store type, to make humans happy:\n      storeType: type,\n\n      // CookieJar configuration:\n      rejectPublicSuffixes: !!this.rejectPublicSuffixes,\n      enableLooseMode: !!this.enableLooseMode,\n      allowSpecialUseDomain: !!this.allowSpecialUseDomain,\n      prefixSecurity: getNormalizedPrefixSecurity(this.prefixSecurity),\n\n      // this gets filled from getAllCookies:\n      cookies: []\n    };\n\n    if (\n      !(\n        this.store.getAllCookies &&\n        typeof this.store.getAllCookies === \"function\"\n      )\n    ) {\n      return cb(\n        new Error(\n          \"store does not support getAllCookies and cannot be serialized\"\n        )\n      );\n    }\n\n    this.store.getAllCookies((err, cookies) => {\n      if (err) {\n        return cb(err);\n      }\n\n      serialized.cookies = cookies.map(cookie => {\n        // convert to serialized 'raw' cookies\n        cookie = cookie instanceof Cookie ? cookie.toJSON() : cookie;\n\n        // Remove the index so new ones get assigned during deserialization\n        delete cookie.creationIndex;\n\n        return cookie;\n      });\n\n      return cb(null, serialized);\n    });\n  }\n\n  toJSON() {\n    return this.serializeSync();\n  }\n\n  // use the class method CookieJar.deserialize instead of calling this directly\n  _importCookies(serialized, cb) {\n    let cookies = serialized.cookies;\n    if (!cookies || !Array.isArray(cookies)) {\n      return cb(new Error(\"serialized jar has no cookies array\"));\n    }\n    cookies = cookies.slice(); // do not modify the original\n\n    const putNext = err => {\n      if (err) {\n        return cb(err);\n      }\n\n      if (!cookies.length) {\n        return cb(err, this);\n      }\n\n      let cookie;\n      try {\n        cookie = fromJSON(cookies.shift());\n      } catch (e) {\n        return cb(e);\n      }\n\n      if (cookie === null) {\n        return putNext(null); // skip this cookie\n      }\n\n      this.store.putCookie(cookie, putNext);\n    };\n\n    putNext();\n  }\n\n  clone(newStore, cb) {\n    if (arguments.length === 1) {\n      cb = newStore;\n      newStore = null;\n    }\n\n    this.serialize((err, serialized) => {\n      if (err) {\n        return cb(err);\n      }\n      CookieJar.deserialize(serialized, newStore, cb);\n    });\n  }\n\n  cloneSync(newStore) {\n    if (arguments.length === 0) {\n      return this._cloneSync();\n    }\n    if (!newStore.synchronous) {\n      throw new Error(\n        \"CookieJar clone destination store is not synchronous; use async API instead.\"\n      );\n    }\n    return this._cloneSync(newStore);\n  }\n\n  removeAllCookies(cb) {\n    validators.validate(validators.isFunction(cb), cb);\n    const store = this.store;\n\n    // Check that the store implements its own removeAllCookies(). The default\n    // implementation in Store will immediately call the callback with a \"not\n    // implemented\" Error.\n    if (\n      typeof store.removeAllCookies === \"function\" &&\n      store.removeAllCookies !== Store.prototype.removeAllCookies\n    ) {\n      return store.removeAllCookies(cb);\n    }\n\n    store.getAllCookies((err, cookies) => {\n      if (err) {\n        return cb(err);\n      }\n\n      if (cookies.length === 0) {\n        return cb(null);\n      }\n\n      let completedCount = 0;\n      const removeErrors = [];\n\n      function removeCookieCb(removeErr) {\n        if (removeErr) {\n          removeErrors.push(removeErr);\n        }\n\n        completedCount++;\n\n        if (completedCount === cookies.length) {\n          return cb(removeErrors.length ? removeErrors[0] : null);\n        }\n      }\n\n      cookies.forEach(cookie => {\n        store.removeCookie(\n          cookie.domain,\n          cookie.path,\n          cookie.key,\n          removeCookieCb\n        );\n      });\n    });\n  }\n\n  static deserialize(strOrObj, store, cb) {\n    if (arguments.length !== 3) {\n      // store is optional\n      cb = store;\n      store = null;\n    }\n    validators.validate(validators.isFunction(cb), cb);\n\n    let serialized;\n    if (typeof strOrObj === \"string\") {\n      serialized = jsonParse(strOrObj);\n      if (serialized instanceof Error) {\n        return cb(serialized);\n      }\n    } else {\n      serialized = strOrObj;\n    }\n\n    const jar = new CookieJar(store, {\n      rejectPublicSuffixes: serialized.rejectPublicSuffixes,\n      looseMode: serialized.enableLooseMode,\n      allowSpecialUseDomain: serialized.allowSpecialUseDomain,\n      prefixSecurity: serialized.prefixSecurity\n    });\n    jar._importCookies(serialized, err => {\n      if (err) {\n        return cb(err);\n      }\n      cb(null, jar);\n    });\n  }\n\n  static deserializeSync(strOrObj, store) {\n    const serialized =\n      typeof strOrObj === \"string\" ? JSON.parse(strOrObj) : strOrObj;\n    const jar = new CookieJar(store, {\n      rejectPublicSuffixes: serialized.rejectPublicSuffixes,\n      looseMode: serialized.enableLooseMode\n    });\n\n    // catch this mistake early:\n    if (!jar.store.synchronous) {\n      throw new Error(\n        \"CookieJar store is not synchronous; use async API instead.\"\n      );\n    }\n\n    jar._importCookiesSync(serialized);\n    return jar;\n  }\n}\nCookieJar.fromJSON = CookieJar.deserializeSync;\n\n[\n  \"_importCookies\",\n  \"clone\",\n  \"getCookies\",\n  \"getCookieString\",\n  \"getSetCookieStrings\",\n  \"removeAllCookies\",\n  \"serialize\",\n  \"setCookie\"\n].forEach(name => {\n  CookieJar.prototype[name] = fromCallback(CookieJar.prototype[name]);\n});\nCookieJar.deserialize = fromCallback(CookieJar.deserialize);\n\n// Use a closure to provide a true imperative API for synchronous stores.\nfunction syncWrap(method) {\n  return function(...args) {\n    if (!this.store.synchronous) {\n      throw new Error(\n        \"CookieJar store is not synchronous; use async API instead.\"\n      );\n    }\n\n    let syncErr, syncResult;\n    this[method](...args, (err, result) => {\n      syncErr = err;\n      syncResult = result;\n    });\n\n    if (syncErr) {\n      throw syncErr;\n    }\n    return syncResult;\n  };\n}\n\nexports.version = VERSION;\nexports.CookieJar = CookieJar;\nexports.Cookie = Cookie;\nexports.Store = Store;\nexports.MemoryCookieStore = MemoryCookieStore;\nexports.parseDate = parseDate;\nexports.formatDate = formatDate;\nexports.parse = parse;\nexports.fromJSON = fromJSON;\nexports.domainMatch = domainMatch;\nexports.defaultPath = defaultPath;\nexports.pathMatch = pathMatch;\nexports.getPublicSuffix = pubsuffix.getPublicSuffix;\nexports.cookieCompare = cookieCompare;\nexports.permuteDomain = require(\"./permuteDomain\").permuteDomain;\nexports.permutePath = permutePath;\nexports.canonicalDomain = canonicalDomain;\nexports.PrefixSecurityEnum = PrefixSecurityEnum;\nexports.ParameterError = validators.ParameterError;\n","/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst { fromCallback } = require(\"universalify\");\nconst Store = require(\"./store\").Store;\nconst permuteDomain = require(\"./permuteDomain\").permuteDomain;\nconst pathMatch = require(\"./pathMatch\").pathMatch;\nconst { getCustomInspectSymbol, getUtilInspect } = require(\"./utilHelper\");\n\nclass MemoryCookieStore extends Store {\n  constructor() {\n    super();\n    this.synchronous = true;\n    this.idx = {};\n    const customInspectSymbol = getCustomInspectSymbol();\n    if (customInspectSymbol) {\n      this[customInspectSymbol] = this.inspect;\n    }\n  }\n\n  inspect() {\n    const util = { inspect: getUtilInspect(inspectFallback) };\n    return `{ idx: ${util.inspect(this.idx, false, 2)} }`;\n  }\n\n  findCookie(domain, path, key, cb) {\n    if (!this.idx[domain]) {\n      return cb(null, undefined);\n    }\n    if (!this.idx[domain][path]) {\n      return cb(null, undefined);\n    }\n    return cb(null, this.idx[domain][path][key] || null);\n  }\n  findCookies(domain, path, allowSpecialUseDomain, cb) {\n    const results = [];\n    if (typeof allowSpecialUseDomain === \"function\") {\n      cb = allowSpecialUseDomain;\n      allowSpecialUseDomain = true;\n    }\n    if (!domain) {\n      return cb(null, []);\n    }\n\n    let pathMatcher;\n    if (!path) {\n      // null means \"all paths\"\n      pathMatcher = function matchAll(domainIndex) {\n        for (const curPath in domainIndex) {\n          const pathIndex = domainIndex[curPath];\n          for (const key in pathIndex) {\n            results.push(pathIndex[key]);\n          }\n        }\n      };\n    } else {\n      pathMatcher = function matchRFC(domainIndex) {\n        //NOTE: we should use path-match algorithm from S5.1.4 here\n        //(see : https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/canonical_cookie.cc#L299)\n        Object.keys(domainIndex).forEach(cookiePath => {\n          if (pathMatch(path, cookiePath)) {\n            const pathIndex = domainIndex[cookiePath];\n            for (const key in pathIndex) {\n              results.push(pathIndex[key]);\n            }\n          }\n        });\n      };\n    }\n\n    const domains = permuteDomain(domain, allowSpecialUseDomain) || [domain];\n    const idx = this.idx;\n    domains.forEach(curDomain => {\n      const domainIndex = idx[curDomain];\n      if (!domainIndex) {\n        return;\n      }\n      pathMatcher(domainIndex);\n    });\n\n    cb(null, results);\n  }\n\n  putCookie(cookie, cb) {\n    if (!this.idx[cookie.domain]) {\n      this.idx[cookie.domain] = {};\n    }\n    if (!this.idx[cookie.domain][cookie.path]) {\n      this.idx[cookie.domain][cookie.path] = {};\n    }\n    this.idx[cookie.domain][cookie.path][cookie.key] = cookie;\n    cb(null);\n  }\n  updateCookie(oldCookie, newCookie, cb) {\n    // updateCookie() may avoid updating cookies that are identical.  For example,\n    // lastAccessed may not be important to some stores and an equality\n    // comparison could exclude that field.\n    this.putCookie(newCookie, cb);\n  }\n  removeCookie(domain, path, key, cb) {\n    if (\n      this.idx[domain] &&\n      this.idx[domain][path] &&\n      this.idx[domain][path][key]\n    ) {\n      delete this.idx[domain][path][key];\n    }\n    cb(null);\n  }\n  removeCookies(domain, path, cb) {\n    if (this.idx[domain]) {\n      if (path) {\n        delete this.idx[domain][path];\n      } else {\n        delete this.idx[domain];\n      }\n    }\n    return cb(null);\n  }\n  removeAllCookies(cb) {\n    this.idx = {};\n    return cb(null);\n  }\n  getAllCookies(cb) {\n    const cookies = [];\n    const idx = this.idx;\n\n    const domains = Object.keys(idx);\n    domains.forEach(domain => {\n      const paths = Object.keys(idx[domain]);\n      paths.forEach(path => {\n        const keys = Object.keys(idx[domain][path]);\n        keys.forEach(key => {\n          if (key !== null) {\n            cookies.push(idx[domain][path][key]);\n          }\n        });\n      });\n    });\n\n    // Sort by creationIndex so deserializing retains the creation order.\n    // When implementing your own store, this SHOULD retain the order too\n    cookies.sort((a, b) => {\n      return (a.creationIndex || 0) - (b.creationIndex || 0);\n    });\n\n    cb(null, cookies);\n  }\n}\n\n[\n  \"findCookie\",\n  \"findCookies\",\n  \"putCookie\",\n  \"updateCookie\",\n  \"removeCookie\",\n  \"removeCookies\",\n  \"removeAllCookies\",\n  \"getAllCookies\"\n].forEach(name => {\n  MemoryCookieStore.prototype[name] = fromCallback(\n    MemoryCookieStore.prototype[name]\n  );\n});\n\nexports.MemoryCookieStore = MemoryCookieStore;\n\nfunction inspectFallback(val) {\n  const domains = Object.keys(val);\n  if (domains.length === 0) {\n    return \"{}\";\n  }\n  let result = \"{\\n\";\n  Object.keys(val).forEach((domain, i) => {\n    result += formatDomain(domain, val[domain]);\n    if (i < domains.length - 1) {\n      result += \",\";\n    }\n    result += \"\\n\";\n  });\n  result += \"}\";\n  return result;\n}\n\nfunction formatDomain(domainName, domainValue) {\n  const indent = \"  \";\n  let result = `${indent}'${domainName}': {\\n`;\n  Object.keys(domainValue).forEach((path, i, paths) => {\n    result += formatPath(path, domainValue[path]);\n    if (i < paths.length - 1) {\n      result += \",\";\n    }\n    result += \"\\n\";\n  });\n  result += `${indent}}`;\n  return result;\n}\n\nfunction formatPath(pathName, pathValue) {\n  const indent = \"    \";\n  let result = `${indent}'${pathName}': {\\n`;\n  Object.keys(pathValue).forEach((cookieName, i, cookieNames) => {\n    const cookie = pathValue[cookieName];\n    result += `      ${cookieName}: ${cookie.inspect()}`;\n    if (i < cookieNames.length - 1) {\n      result += \",\";\n    }\n    result += \"\\n\";\n  });\n  result += `${indent}}`;\n  return result;\n}\n\nexports.inspectFallback = inspectFallback;\n","/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\n/*\n * \"A request-path path-matches a given cookie-path if at least one of the\n * following conditions holds:\"\n */\nfunction pathMatch(reqPath, cookiePath) {\n  // \"o  The cookie-path and the request-path are identical.\"\n  if (cookiePath === reqPath) {\n    return true;\n  }\n\n  const idx = reqPath.indexOf(cookiePath);\n  if (idx === 0) {\n    // \"o  The cookie-path is a prefix of the request-path, and the last\n    // character of the cookie-path is %x2F (\"/\").\"\n    if (cookiePath.substr(-1) === \"/\") {\n      return true;\n    }\n\n    // \" o  The cookie-path is a prefix of the request-path, and the first\n    // character of the request-path that is not included in the cookie- path\n    // is a %x2F (\"/\") character.\"\n    if (reqPath.substr(cookiePath.length, 1) === \"/\") {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.pathMatch = pathMatch;\n","/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst pubsuffix = require(\"./pubsuffix-psl\");\n\n// Gives the permutation of all possible domainMatch()es of a given domain. The\n// array is in shortest-to-longest order.  Handy for indexing.\n\nfunction permuteDomain(domain, allowSpecialUseDomain) {\n  const pubSuf = pubsuffix.getPublicSuffix(domain, {\n    allowSpecialUseDomain: allowSpecialUseDomain\n  });\n\n  if (!pubSuf) {\n    return null;\n  }\n  if (pubSuf == domain) {\n    return [domain];\n  }\n\n  // Nuke trailing dot\n  if (domain.slice(-1) == \".\") {\n    domain = domain.slice(0, -1);\n  }\n\n  const prefix = domain.slice(0, -(pubSuf.length + 1)); // \".example.com\"\n  const parts = prefix.split(\".\").reverse();\n  let cur = pubSuf;\n  const permutations = [cur];\n  while (parts.length) {\n    cur = `${parts.shift()}.${cur}`;\n    permutations.push(cur);\n  }\n  return permutations;\n}\n\nexports.permuteDomain = permuteDomain;\n","/*!\n * Copyright (c) 2018, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst psl = require(\"psl\");\n\n// RFC 6761\nconst SPECIAL_USE_DOMAINS = [\n  \"local\",\n  \"example\",\n  \"invalid\",\n  \"localhost\",\n  \"test\"\n];\n\nconst SPECIAL_TREATMENT_DOMAINS = [\"localhost\", \"invalid\"];\n\nfunction getPublicSuffix(domain, options = {}) {\n  const domainParts = domain.split(\".\");\n  const topLevelDomain = domainParts[domainParts.length - 1];\n  const allowSpecialUseDomain = !!options.allowSpecialUseDomain;\n  const ignoreError = !!options.ignoreError;\n\n  if (allowSpecialUseDomain && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\n    if (domainParts.length > 1) {\n      const secondLevelDomain = domainParts[domainParts.length - 2];\n      // In aforementioned example, the eTLD/pubSuf will be apple.localhost\n      return `${secondLevelDomain}.${topLevelDomain}`;\n    } else if (SPECIAL_TREATMENT_DOMAINS.includes(topLevelDomain)) {\n      // For a single word special use domain, e.g. 'localhost' or 'invalid', per RFC 6761,\n      // \"Application software MAY recognize {localhost/invalid} names as special, or\n      // MAY pass them to name resolution APIs as they would for other domain names.\"\n      return `${topLevelDomain}`;\n    }\n  }\n\n  if (!ignoreError && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\n    throw new Error(\n      `Cookie has domain set to the public suffix \"${topLevelDomain}\" which is a special use domain. To allow this, configure your CookieJar with {allowSpecialUseDomain:true, rejectPublicSuffixes: false}.`\n    );\n  }\n\n  return psl.get(domain);\n}\n\nexports.getPublicSuffix = getPublicSuffix;\n","/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\n/*jshint unused:false */\n\nclass Store {\n  constructor() {\n    this.synchronous = false;\n  }\n\n  findCookie(domain, path, key, cb) {\n    throw new Error(\"findCookie is not implemented\");\n  }\n\n  findCookies(domain, path, allowSpecialUseDomain, cb) {\n    throw new Error(\"findCookies is not implemented\");\n  }\n\n  putCookie(cookie, cb) {\n    throw new Error(\"putCookie is not implemented\");\n  }\n\n  updateCookie(oldCookie, newCookie, cb) {\n    // recommended default implementation:\n    // return this.putCookie(newCookie, cb);\n    throw new Error(\"updateCookie is not implemented\");\n  }\n\n  removeCookie(domain, path, key, cb) {\n    throw new Error(\"removeCookie is not implemented\");\n  }\n\n  removeCookies(domain, path, cb) {\n    throw new Error(\"removeCookies is not implemented\");\n  }\n\n  removeAllCookies(cb) {\n    throw new Error(\"removeAllCookies is not implemented\");\n  }\n\n  getAllCookies(cb) {\n    throw new Error(\n      \"getAllCookies is not implemented (therefore jar cannot be serialized)\"\n    );\n  }\n}\n\nexports.Store = Store;\n","function requireUtil() {\n  try {\n    // eslint-disable-next-line no-restricted-modules\n    return require(\"util\");\n  } catch (e) {\n    return null;\n  }\n}\n\n// for v10.12.0+\nfunction lookupCustomInspectSymbol() {\n  return Symbol.for(\"nodejs.util.inspect.custom\");\n}\n\n// for older node environments\nfunction tryReadingCustomSymbolFromUtilInspect(options) {\n  const _requireUtil = options.requireUtil || requireUtil;\n  const util = _requireUtil();\n  return util ? util.inspect.custom : null;\n}\n\nexports.getUtilInspect = function getUtilInspect(fallback, options = {}) {\n  const _requireUtil = options.requireUtil || requireUtil;\n  const util = _requireUtil();\n  return function inspect(value, showHidden, depth) {\n    return util ? util.inspect(value, showHidden, depth) : fallback(value);\n  };\n};\n\nexports.getCustomInspectSymbol = function getCustomInspectSymbol(options = {}) {\n  const _lookupCustomInspectSymbol =\n    options.lookupCustomInspectSymbol || lookupCustomInspectSymbol;\n\n  // get custom inspect symbol for node environments\n  return (\n    _lookupCustomInspectSymbol() ||\n    tryReadingCustomSymbolFromUtilInspect(options)\n  );\n};\n","/* ************************************************************************************\nExtracted from check-types.js\nhttps://gitlab.com/philbooth/check-types.js\n\nMIT License\n\nCopyright (c) 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019 Phil Booth\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n************************************************************************************ */\n\"use strict\";\n\n/* Validation functions copied from check-types package - https://www.npmjs.com/package/check-types */\nfunction isFunction(data) {\n  return typeof data === \"function\";\n}\n\nfunction isNonEmptyString(data) {\n  return isString(data) && data !== \"\";\n}\n\nfunction isDate(data) {\n  return isInstanceStrict(data, Date) && isInteger(data.getTime());\n}\n\nfunction isEmptyString(data) {\n  return data === \"\" || (data instanceof String && data.toString() === \"\");\n}\n\nfunction isString(data) {\n  return typeof data === \"string\" || data instanceof String;\n}\n\nfunction isObject(data) {\n  return toString.call(data) === \"[object Object]\";\n}\nfunction isInstanceStrict(data, prototype) {\n  try {\n    return data instanceof prototype;\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction isInteger(data) {\n  return typeof data === \"number\" && data % 1 === 0;\n}\n/* End validation functions */\n\nfunction validate(bool, cb, options) {\n  if (!isFunction(cb)) {\n    options = cb;\n    cb = null;\n  }\n  if (!isObject(options)) options = { Error: \"Failed Check\" };\n  if (!bool) {\n    if (cb) {\n      cb(new ParameterError(options));\n    } else {\n      throw new ParameterError(options);\n    }\n  }\n}\n\nclass ParameterError extends Error {\n  constructor(...params) {\n    super(...params);\n  }\n}\n\nexports.ParameterError = ParameterError;\nexports.isFunction = isFunction;\nexports.isNonEmptyString = isNonEmptyString;\nexports.isDate = isDate;\nexports.isEmptyString = isEmptyString;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.validate = validate;\n","// generated by genversion\nmodule.exports = '4.1.2'\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n\n/**\n * Options to govern behavior of xml parser and builder.\n */\nexport interface SerializerOptions {\n  /**\n   * indicates the name of the root element in the resulting XML when building XML.\n   */\n  rootName?: string;\n  /**\n   * indicates whether the root element is to be included or not in the output when parsing XML.\n   */\n  includeRoot?: boolean;\n  /**\n   * key used to access the XML value content when parsing XML.\n   */\n  xmlCharKey?: string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Constants } from \"./constants\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { RestError } from \"../restError\";\nimport { WebResourceLike } from \"../webResource\";\nimport { XML_ATTRKEY } from \"./serializer.common\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst validUuidRegex =\n  /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nexport const isNode =\n  typeof process !== \"undefined\" &&\n  !!process.version &&\n  !!process.versions &&\n  !!process.versions.node;\n\n/**\n * Checks if a parsed URL is HTTPS\n *\n * @param urlToCheck - The url to check\n * @returns True if the URL is HTTPS; false otherwise.\n */\nexport function urlIsHTTPS(urlToCheck: { protocol: string }): boolean {\n  return urlToCheck.protocol.toLowerCase() === Constants.HTTPS;\n}\n\n/**\n * Encodes an URI.\n *\n * @param uri - The URI to be encoded.\n * @returns The encoded URI.\n */\nexport function encodeUri(uri: string): string {\n  return encodeURIComponent(uri)\n    .replace(/!/g, \"%21\")\n    .replace(/\"/g, \"%27\")\n    .replace(/\\(/g, \"%28\")\n    .replace(/\\)/g, \"%29\")\n    .replace(/\\*/g, \"%2A\");\n}\n\n/**\n * Returns a stripped version of the Http Response which only contains body,\n * headers and the status.\n *\n * @param response - The Http Response\n * @returns The stripped version of Http Response.\n */\nexport function stripResponse(response: HttpOperationResponse): any {\n  const strippedResponse: any = {};\n  strippedResponse.body = response.bodyAsText;\n  strippedResponse.headers = response.headers;\n  strippedResponse.status = response.status;\n  return strippedResponse;\n}\n\n/**\n * Returns a stripped version of the Http Request that does not contain the\n * Authorization header.\n *\n * @param request - The Http Request object\n * @returns The stripped version of Http Request.\n */\nexport function stripRequest(request: WebResourceLike): WebResourceLike {\n  const strippedRequest = request.clone();\n  if (strippedRequest.headers) {\n    strippedRequest.headers.remove(\"authorization\");\n  }\n  return strippedRequest;\n}\n\n/**\n * Validates the given uuid as a string\n *\n * @param uuid - The uuid as a string that needs to be validated\n * @returns True if the uuid is valid; false otherwise.\n */\nexport function isValidUuid(uuid: string): boolean {\n  return validUuidRegex.test(uuid);\n}\n\n/**\n * Generated UUID\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUuid(): string {\n  return uuidv4();\n}\n\n/**\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param promiseFactories - An array of promise factories(A function that return a promise)\n * @param kickstart - Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n * @returns A chain of resolved or rejected promises\n */\nexport function executePromisesSequentially(\n  promiseFactories: Array<any>,\n  kickstart: unknown\n): Promise<any> {\n  let result = Promise.resolve(kickstart);\n  promiseFactories.forEach((promiseFactory) => {\n    result = result.then(promiseFactory);\n  });\n  return result;\n}\n\n/**\n * Service callback that is returned for REST requests initiated by the service client.\n */\nexport interface ServiceCallback<TResult> {\n  /**\n   * A method that will be invoked as a callback to a service function.\n   * @param err - The error occurred if any, while executing the request; otherwise null.\n   * @param result - The deserialized response body if an error did not occur.\n   * @param request - The raw/actual request sent to the server if an error did not occur.\n   * @param response - The raw/actual response from the server if an error did not occur.\n   */\n  (\n    err: Error | RestError | null,\n    result?: TResult,\n    request?: WebResourceLike,\n    response?: HttpOperationResponse\n  ): void;\n}\n\n/**\n * Converts a Promise to a callback.\n * @param promise - The Promise to be converted to a callback\n * @returns A function that takes the callback `(cb: Function) => void`\n * @deprecated generated code should instead depend on responseToBody\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function promiseToCallback(promise: Promise<any>): (cb: Function) => void {\n  if (typeof promise.then !== \"function\") {\n    throw new Error(\"The provided input is not a Promise.\");\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (cb: Function): void => {\n    promise\n      .then((data: any) => {\n        // eslint-disable-next-line promise/no-callback-in-promise\n        return cb(undefined, data);\n      })\n      .catch((err: Error) => {\n        // eslint-disable-next-line promise/no-callback-in-promise\n        cb(err);\n      });\n  };\n}\n\n/**\n * Converts a Promise to a service callback.\n * @param promise - The Promise of HttpOperationResponse to be converted to a service callback\n * @returns A function that takes the service callback (cb: ServiceCallback<T>): void\n */\nexport function promiseToServiceCallback<T>(\n  promise: Promise<HttpOperationResponse>\n): (cb: ServiceCallback<T>) => void {\n  if (typeof promise.then !== \"function\") {\n    throw new Error(\"The provided input is not a Promise.\");\n  }\n  return (cb: ServiceCallback<T>): void => {\n    promise\n      .then((data: HttpOperationResponse) => {\n        return process.nextTick(cb, undefined, data.parsedBody as T, data.request, data);\n      })\n      .catch((err: Error) => {\n        process.nextTick(cb, err);\n      });\n  };\n}\n\nexport function prepareXMLRootList(\n  obj: unknown,\n  elementName: string,\n  xmlNamespaceKey?: string,\n  xmlNamespace?: string\n): { [s: string]: any } {\n  if (!Array.isArray(obj)) {\n    obj = [obj];\n  }\n\n  if (!xmlNamespaceKey || !xmlNamespace) {\n    return { [elementName]: obj };\n  }\n\n  const result = { [elementName]: obj };\n  result[XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n  return result;\n}\n\n/**\n * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor\n * @param targetCtor - The target object on which the properties need to be applied.\n * @param sourceCtors - An array of source objects from which the properties need to be taken.\n */\nexport function applyMixins(targetCtorParam: unknown, sourceCtors: any[]): void {\n  const castTargetCtorParam = targetCtorParam as {\n    prototype: Record<string, unknown>;\n  };\n  sourceCtors.forEach((sourceCtor) => {\n    Object.getOwnPropertyNames(sourceCtor.prototype).forEach((name) => {\n      castTargetCtorParam.prototype[name] = sourceCtor.prototype[name];\n    });\n  });\n}\n\nconst validateISODuration =\n  /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n/**\n * Indicates whether the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @returns `true` if valid, `false` otherwise.\n */\nexport function isDuration(value: string): boolean {\n  return validateISODuration.test(value);\n}\n\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param value - The value to search and replace in.\n * @param searchValue - The value to search for in the value argument.\n * @param replaceValue - The value to replace searchValue with in the value argument.\n * @returns The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(\n  value: string | undefined,\n  searchValue: string,\n  replaceValue: string\n): string | undefined {\n  return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n\n/**\n * Determines whether the given entity is a basic/primitive type\n * (string, number, boolean, null, undefined).\n * @param value - Any entity\n * @returns true is it is primitive type, false otherwise.\n */\nexport function isPrimitiveType(value: unknown): boolean {\n  return (typeof value !== \"object\" && typeof value !== \"function\") || value === null;\n}\n\nexport function getEnvironmentValue(name: string): string | undefined {\n  if (process.env[name]) {\n    return process.env[name];\n  } else if (process.env[name.toLowerCase()]) {\n    return process.env[name.toLowerCase()];\n  }\n  return undefined;\n}\n\n/**\n * @internal\n */\nexport type UnknownObject = { [s: string]: unknown };\n\n/**\n * @internal\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input: unknown): input is UnknownObject {\n  return (\n    typeof input === \"object\" &&\n    input !== null &&\n    !Array.isArray(input) &&\n    !(input instanceof RegExp) &&\n    !(input instanceof Date)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { replaceAll } from \"./util/utils\";\n\ntype URLQueryParseState = \"ParameterName\" | \"ParameterValue\";\n\n/**\n * A class that handles the query portion of a URLBuilder.\n */\nexport class URLQuery {\n  private readonly _rawQuery: { [queryParameterName: string]: string | string[] } = {};\n\n  /**\n   * Get whether or not there any query parameters in this URLQuery.\n   */\n  public any(): boolean {\n    return Object.keys(this._rawQuery).length > 0;\n  }\n\n  /**\n   * Get the keys of the query string.\n   */\n  public keys(): string[] {\n    return Object.keys(this._rawQuery);\n  }\n\n  /**\n   * Set a query parameter with the provided name and value. If the parameterValue is undefined or\n   * empty, then this will attempt to remove an existing query parameter with the provided\n   * parameterName.\n   */\n  public set(parameterName: string, parameterValue: unknown): void {\n    const caseParameterValue = parameterValue as {\n      toString: () => string;\n    };\n    if (parameterName) {\n      if (caseParameterValue !== undefined && caseParameterValue !== null) {\n        const newValue = Array.isArray(caseParameterValue)\n          ? caseParameterValue\n          : caseParameterValue.toString();\n        this._rawQuery[parameterName] = newValue;\n      } else {\n        delete this._rawQuery[parameterName];\n      }\n    }\n  }\n\n  /**\n   * Get the value of the query parameter with the provided name. If no parameter exists with the\n   * provided parameter name, then undefined will be returned.\n   */\n  public get(parameterName: string): string | string[] | undefined {\n    return parameterName ? this._rawQuery[parameterName] : undefined;\n  }\n\n  /**\n   * Get the string representation of this query. The return value will not start with a \"?\".\n   */\n  public toString(): string {\n    let result = \"\";\n    for (const parameterName in this._rawQuery) {\n      if (result) {\n        result += \"&\";\n      }\n      const parameterValue = this._rawQuery[parameterName];\n      if (Array.isArray(parameterValue)) {\n        const parameterStrings = [];\n        for (const parameterValueElement of parameterValue) {\n          parameterStrings.push(`${parameterName}=${parameterValueElement}`);\n        }\n        result += parameterStrings.join(\"&\");\n      } else {\n        result += `${parameterName}=${parameterValue}`;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Parse a URLQuery from the provided text.\n   */\n  public static parse(text: string): URLQuery {\n    const result = new URLQuery();\n\n    if (text) {\n      if (text.startsWith(\"?\")) {\n        text = text.substring(1);\n      }\n\n      let currentState: URLQueryParseState = \"ParameterName\";\n\n      let parameterName = \"\";\n      let parameterValue = \"\";\n      for (let i = 0; i < text.length; ++i) {\n        const currentCharacter: string = text[i];\n        switch (currentState) {\n          case \"ParameterName\":\n            switch (currentCharacter) {\n              case \"=\":\n                currentState = \"ParameterValue\";\n                break;\n\n              case \"&\":\n                parameterName = \"\";\n                parameterValue = \"\";\n                break;\n\n              default:\n                parameterName += currentCharacter;\n                break;\n            }\n            break;\n\n          case \"ParameterValue\":\n            switch (currentCharacter) {\n              case \"&\":\n                result.set(parameterName, parameterValue);\n                parameterName = \"\";\n                parameterValue = \"\";\n                currentState = \"ParameterName\";\n                break;\n\n              default:\n                parameterValue += currentCharacter;\n                break;\n            }\n            break;\n\n          default:\n            throw new Error(\"Unrecognized URLQuery parse state: \" + currentState);\n        }\n      }\n      if (currentState === \"ParameterValue\") {\n        result.set(parameterName, parameterValue);\n      }\n    }\n\n    return result;\n  }\n}\n\n/**\n * A class that handles creating, modifying, and parsing URLs.\n */\nexport class URLBuilder {\n  private _scheme: string | undefined;\n  private _host: string | undefined;\n  private _port: string | undefined;\n  private _path: string | undefined;\n  private _query: URLQuery | undefined;\n\n  /**\n   * Set the scheme/protocol for this URL. If the provided scheme contains other parts of a URL\n   * (such as a host, port, path, or query), those parts will be added to this URL as well.\n   */\n  public setScheme(scheme: string | undefined): void {\n    if (!scheme) {\n      this._scheme = undefined;\n    } else {\n      this.set(scheme, \"SCHEME\");\n    }\n  }\n\n  /**\n   * Get the scheme that has been set in this URL.\n   */\n  public getScheme(): string | undefined {\n    return this._scheme;\n  }\n\n  /**\n   * Set the host for this URL. If the provided host contains other parts of a URL (such as a\n   * port, path, or query), those parts will be added to this URL as well.\n   */\n  public setHost(host: string | undefined): void {\n    if (!host) {\n      this._host = undefined;\n    } else {\n      this.set(host, \"SCHEME_OR_HOST\");\n    }\n  }\n\n  /**\n   * Get the host that has been set in this URL.\n   */\n  public getHost(): string | undefined {\n    return this._host;\n  }\n\n  /**\n   * Set the port for this URL. If the provided port contains other parts of a URL (such as a\n   * path or query), those parts will be added to this URL as well.\n   */\n  public setPort(port: number | string | undefined): void {\n    if (port === undefined || port === null || port === \"\") {\n      this._port = undefined;\n    } else {\n      this.set(port.toString(), \"PORT\");\n    }\n  }\n\n  /**\n   * Get the port that has been set in this URL.\n   */\n  public getPort(): string | undefined {\n    return this._port;\n  }\n\n  /**\n   * Set the path for this URL. If the provided path contains a query, then it will be added to\n   * this URL as well.\n   */\n  public setPath(path: string | undefined): void {\n    if (!path) {\n      this._path = undefined;\n    } else {\n      const schemeIndex = path.indexOf(\"://\");\n      if (schemeIndex !== -1) {\n        const schemeStart = path.lastIndexOf(\"/\", schemeIndex);\n        // Make sure to only grab the URL part of the path before setting the state back to SCHEME\n        // this will handle cases such as \"/a/b/c/https://microsoft.com\" => \"https://microsoft.com\"\n        this.set(schemeStart === -1 ? path : path.substr(schemeStart + 1), \"SCHEME\");\n      } else {\n        this.set(path, \"PATH\");\n      }\n    }\n  }\n\n  /**\n   * Append the provided path to this URL's existing path. If the provided path contains a query,\n   * then it will be added to this URL as well.\n   */\n  public appendPath(path: string | undefined): void {\n    if (path) {\n      let currentPath: string | undefined = this.getPath();\n      if (currentPath) {\n        if (!currentPath.endsWith(\"/\")) {\n          currentPath += \"/\";\n        }\n\n        if (path.startsWith(\"/\")) {\n          path = path.substring(1);\n        }\n\n        path = currentPath + path;\n      }\n      this.set(path, \"PATH\");\n    }\n  }\n\n  /**\n   * Get the path that has been set in this URL.\n   */\n  public getPath(): string | undefined {\n    return this._path;\n  }\n\n  /**\n   * Set the query in this URL.\n   */\n  public setQuery(query: string | undefined): void {\n    if (!query) {\n      this._query = undefined;\n    } else {\n      this._query = URLQuery.parse(query);\n    }\n  }\n\n  /**\n   * Set a query parameter with the provided name and value in this URL's query. If the provided\n   * query parameter value is undefined or empty, then the query parameter will be removed if it\n   * existed.\n   */\n  public setQueryParameter(queryParameterName: string, queryParameterValue: unknown): void {\n    if (queryParameterName) {\n      if (!this._query) {\n        this._query = new URLQuery();\n      }\n      this._query.set(queryParameterName, queryParameterValue);\n    }\n  }\n\n  /**\n   * Get the value of the query parameter with the provided query parameter name. If no query\n   * parameter exists with the provided name, then undefined will be returned.\n   */\n  public getQueryParameterValue(queryParameterName: string): string | string[] | undefined {\n    return this._query ? this._query.get(queryParameterName) : undefined;\n  }\n\n  /**\n   * Get the query in this URL.\n   */\n  public getQuery(): string | undefined {\n    return this._query ? this._query.toString() : undefined;\n  }\n\n  /**\n   * Set the parts of this URL by parsing the provided text using the provided startState.\n   */\n  private set(text: string, startState: URLTokenizerState): void {\n    const tokenizer = new URLTokenizer(text, startState);\n\n    while (tokenizer.next()) {\n      const token: URLToken | undefined = tokenizer.current();\n      let tokenPath: string | undefined;\n      if (token) {\n        switch (token.type) {\n          case \"SCHEME\":\n            this._scheme = token.text || undefined;\n            break;\n\n          case \"HOST\":\n            this._host = token.text || undefined;\n            break;\n\n          case \"PORT\":\n            this._port = token.text || undefined;\n            break;\n\n          case \"PATH\":\n            tokenPath = token.text || undefined;\n            if (!this._path || this._path === \"/\" || tokenPath !== \"/\") {\n              this._path = tokenPath;\n            }\n            break;\n\n          case \"QUERY\":\n            this._query = URLQuery.parse(token.text);\n            break;\n\n          default:\n            throw new Error(`Unrecognized URLTokenType: ${token.type}`);\n        }\n      }\n    }\n  }\n\n  /**\n   * Serializes the URL as a string.\n   * @returns the URL as a string.\n   */\n  public toString(): string {\n    let result = \"\";\n\n    if (this._scheme) {\n      result += `${this._scheme}://`;\n    }\n\n    if (this._host) {\n      result += this._host;\n    }\n\n    if (this._port) {\n      result += `:${this._port}`;\n    }\n\n    if (this._path) {\n      if (!this._path.startsWith(\"/\")) {\n        result += \"/\";\n      }\n      result += this._path;\n    }\n\n    if (this._query && this._query.any()) {\n      result += `?${this._query.toString()}`;\n    }\n\n    return result;\n  }\n\n  /**\n   * If the provided searchValue is found in this URLBuilder, then replace it with the provided\n   * replaceValue.\n   */\n  public replaceAll(searchValue: string, replaceValue: string): void {\n    if (searchValue) {\n      this.setScheme(replaceAll(this.getScheme(), searchValue, replaceValue));\n      this.setHost(replaceAll(this.getHost(), searchValue, replaceValue));\n      this.setPort(replaceAll(this.getPort(), searchValue, replaceValue));\n      this.setPath(replaceAll(this.getPath(), searchValue, replaceValue));\n      this.setQuery(replaceAll(this.getQuery(), searchValue, replaceValue));\n    }\n  }\n\n  /**\n   * Parses a given string URL into a new {@link URLBuilder}.\n   */\n  public static parse(text: string): URLBuilder {\n    const result = new URLBuilder();\n    result.set(text, \"SCHEME_OR_HOST\");\n    return result;\n  }\n}\n\ntype URLTokenizerState = \"SCHEME\" | \"SCHEME_OR_HOST\" | \"HOST\" | \"PORT\" | \"PATH\" | \"QUERY\" | \"DONE\";\n\ntype URLTokenType = \"SCHEME\" | \"HOST\" | \"PORT\" | \"PATH\" | \"QUERY\";\n\nexport class URLToken {\n  public constructor(public readonly text: string, public readonly type: URLTokenType) {}\n\n  public static scheme(text: string): URLToken {\n    return new URLToken(text, \"SCHEME\");\n  }\n\n  public static host(text: string): URLToken {\n    return new URLToken(text, \"HOST\");\n  }\n\n  public static port(text: string): URLToken {\n    return new URLToken(text, \"PORT\");\n  }\n\n  public static path(text: string): URLToken {\n    return new URLToken(text, \"PATH\");\n  }\n\n  public static query(text: string): URLToken {\n    return new URLToken(text, \"QUERY\");\n  }\n}\n\n/**\n * Get whether or not the provided character (single character string) is an alphanumeric (letter or\n * digit) character.\n */\nexport function isAlphaNumericCharacter(character: string): boolean {\n  const characterCode: number = character.charCodeAt(0);\n  return (\n    (48 /* '0' */ <= characterCode && characterCode <= 57) /* '9' */ ||\n    (65 /* 'A' */ <= characterCode && characterCode <= 90) /* 'Z' */ ||\n    (97 /* 'a' */ <= characterCode && characterCode <= 122) /* 'z' */\n  );\n}\n\n/**\n * A class that tokenizes URL strings.\n */\nexport class URLTokenizer {\n  readonly _textLength: number;\n  _currentState: URLTokenizerState;\n  _currentIndex: number;\n  _currentToken: URLToken | undefined;\n\n  public constructor(readonly _text: string, state?: URLTokenizerState) {\n    this._textLength = _text ? _text.length : 0;\n    this._currentState = state !== undefined && state !== null ? state : \"SCHEME_OR_HOST\";\n    this._currentIndex = 0;\n  }\n\n  /**\n   * Get the current URLToken this URLTokenizer is pointing at, or undefined if the URLTokenizer\n   * hasn't started or has finished tokenizing.\n   */\n  public current(): URLToken | undefined {\n    return this._currentToken;\n  }\n\n  /**\n   * Advance to the next URLToken and return whether or not a URLToken was found.\n   */\n  public next(): boolean {\n    if (!hasCurrentCharacter(this)) {\n      this._currentToken = undefined;\n    } else {\n      switch (this._currentState) {\n        case \"SCHEME\":\n          nextScheme(this);\n          break;\n\n        case \"SCHEME_OR_HOST\":\n          nextSchemeOrHost(this);\n          break;\n\n        case \"HOST\":\n          nextHost(this);\n          break;\n\n        case \"PORT\":\n          nextPort(this);\n          break;\n\n        case \"PATH\":\n          nextPath(this);\n          break;\n\n        case \"QUERY\":\n          nextQuery(this);\n          break;\n\n        default:\n          throw new Error(`Unrecognized URLTokenizerState: ${this._currentState}`);\n      }\n    }\n    return !!this._currentToken;\n  }\n}\n\n/**\n * Read the remaining characters from this Tokenizer's character stream.\n */\nfunction readRemaining(tokenizer: URLTokenizer): string {\n  let result = \"\";\n  if (tokenizer._currentIndex < tokenizer._textLength) {\n    result = tokenizer._text.substring(tokenizer._currentIndex);\n    tokenizer._currentIndex = tokenizer._textLength;\n  }\n  return result;\n}\n\n/**\n * Whether or not this URLTokenizer has a current character.\n */\nfunction hasCurrentCharacter(tokenizer: URLTokenizer): boolean {\n  return tokenizer._currentIndex < tokenizer._textLength;\n}\n\n/**\n * Get the character in the text string at the current index.\n */\nfunction getCurrentCharacter(tokenizer: URLTokenizer): string {\n  return tokenizer._text[tokenizer._currentIndex];\n}\n\n/**\n * Advance to the character in text that is \"step\" characters ahead. If no step value is provided,\n * then step will default to 1.\n */\nfunction nextCharacter(tokenizer: URLTokenizer, step?: number): void {\n  if (hasCurrentCharacter(tokenizer)) {\n    if (!step) {\n      step = 1;\n    }\n    tokenizer._currentIndex += step;\n  }\n}\n\n/**\n * Starting with the current character, peek \"charactersToPeek\" number of characters ahead in this\n * Tokenizer's stream of characters.\n */\nfunction peekCharacters(tokenizer: URLTokenizer, charactersToPeek: number): string {\n  let endIndex: number = tokenizer._currentIndex + charactersToPeek;\n  if (tokenizer._textLength < endIndex) {\n    endIndex = tokenizer._textLength;\n  }\n  return tokenizer._text.substring(tokenizer._currentIndex, endIndex);\n}\n\n/**\n * Read characters from this Tokenizer until the end of the stream or until the provided condition\n * is false when provided the current character.\n */\nfunction readWhile(tokenizer: URLTokenizer, condition: (character: string) => boolean): string {\n  let result = \"\";\n\n  while (hasCurrentCharacter(tokenizer)) {\n    const currentCharacter: string = getCurrentCharacter(tokenizer);\n    if (!condition(currentCharacter)) {\n      break;\n    } else {\n      result += currentCharacter;\n      nextCharacter(tokenizer);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Read characters from this Tokenizer until a non-alphanumeric character or the end of the\n * character stream is reached.\n */\nfunction readWhileLetterOrDigit(tokenizer: URLTokenizer): string {\n  return readWhile(tokenizer, (character: string) => isAlphaNumericCharacter(character));\n}\n\n/**\n * Read characters from this Tokenizer until one of the provided terminating characters is read or\n * the end of the character stream is reached.\n */\nfunction readUntilCharacter(tokenizer: URLTokenizer, ...terminatingCharacters: string[]): string {\n  return readWhile(\n    tokenizer,\n    (character: string) => terminatingCharacters.indexOf(character) === -1\n  );\n}\n\nfunction nextScheme(tokenizer: URLTokenizer): void {\n  const scheme: string = readWhileLetterOrDigit(tokenizer);\n  tokenizer._currentToken = URLToken.scheme(scheme);\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else {\n    tokenizer._currentState = \"HOST\";\n  }\n}\n\nfunction nextSchemeOrHost(tokenizer: URLTokenizer): void {\n  const schemeOrHost: string = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentToken = URLToken.host(schemeOrHost);\n    tokenizer._currentState = \"DONE\";\n  } else if (getCurrentCharacter(tokenizer) === \":\") {\n    if (peekCharacters(tokenizer, 3) === \"://\") {\n      tokenizer._currentToken = URLToken.scheme(schemeOrHost);\n      tokenizer._currentState = \"HOST\";\n    } else {\n      tokenizer._currentToken = URLToken.host(schemeOrHost);\n      tokenizer._currentState = \"PORT\";\n    }\n  } else {\n    tokenizer._currentToken = URLToken.host(schemeOrHost);\n    if (getCurrentCharacter(tokenizer) === \"/\") {\n      tokenizer._currentState = \"PATH\";\n    } else {\n      tokenizer._currentState = \"QUERY\";\n    }\n  }\n}\n\nfunction nextHost(tokenizer: URLTokenizer): void {\n  if (peekCharacters(tokenizer, 3) === \"://\") {\n    nextCharacter(tokenizer, 3);\n  }\n\n  const host: string = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n  tokenizer._currentToken = URLToken.host(host);\n\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else if (getCurrentCharacter(tokenizer) === \":\") {\n    tokenizer._currentState = \"PORT\";\n  } else if (getCurrentCharacter(tokenizer) === \"/\") {\n    tokenizer._currentState = \"PATH\";\n  } else {\n    tokenizer._currentState = \"QUERY\";\n  }\n}\n\nfunction nextPort(tokenizer: URLTokenizer): void {\n  if (getCurrentCharacter(tokenizer) === \":\") {\n    nextCharacter(tokenizer);\n  }\n\n  const port: string = readUntilCharacter(tokenizer, \"/\", \"?\");\n  tokenizer._currentToken = URLToken.port(port);\n\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else if (getCurrentCharacter(tokenizer) === \"/\") {\n    tokenizer._currentState = \"PATH\";\n  } else {\n    tokenizer._currentState = \"QUERY\";\n  }\n}\n\nfunction nextPath(tokenizer: URLTokenizer): void {\n  const path: string = readUntilCharacter(tokenizer, \"?\");\n  tokenizer._currentToken = URLToken.path(path);\n\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else {\n    tokenizer._currentState = \"QUERY\";\n  }\n}\n\nfunction nextQuery(tokenizer: URLTokenizer): void {\n  if (getCurrentCharacter(tokenizer) === \"?\") {\n    nextCharacter(tokenizer);\n  }\n\n  const query: string = readRemaining(tokenizer);\n  tokenizer._currentToken = URLToken.query(query);\n  tokenizer._currentState = \"DONE\";\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { URLBuilder, URLQuery } from \"../url\";\nimport { UnknownObject, isObject } from \"./utils\";\n\nexport interface SanitizerOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to\n   * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  allowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  allowedQueryParameters?: string[];\n}\n\nconst RedactedString = \"REDACTED\";\n\nconst defaultAllowedHeaderNames = [\n  \"x-ms-client-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-useragent\",\n  \"x-ms-correlation-request-id\",\n  \"x-ms-request-id\",\n  \"client-request-id\",\n  \"ms-cv\",\n  \"return-client-request-id\",\n  \"traceparent\",\n\n  \"Access-Control-Allow-Credentials\",\n  \"Access-Control-Allow-Headers\",\n  \"Access-Control-Allow-Methods\",\n  \"Access-Control-Allow-Origin\",\n  \"Access-Control-Expose-Headers\",\n  \"Access-Control-Max-Age\",\n  \"Access-Control-Request-Headers\",\n  \"Access-Control-Request-Method\",\n  \"Origin\",\n\n  \"Accept\",\n  \"Accept-Encoding\",\n  \"Cache-Control\",\n  \"Connection\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"ETag\",\n  \"Expires\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"Last-Modified\",\n  \"Pragma\",\n  \"Request-Id\",\n  \"Retry-After\",\n  \"Server\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"WWW-Authenticate\",\n];\n\nconst defaultAllowedQueryParameters: string[] = [\"api-version\"];\n\nexport class Sanitizer {\n  public allowedHeaderNames: Set<string>;\n  public allowedQueryParameters: Set<string>;\n\n  constructor({ allowedHeaderNames = [], allowedQueryParameters = [] }: SanitizerOptions = {}) {\n    allowedHeaderNames = Array.isArray(allowedHeaderNames)\n      ? defaultAllowedHeaderNames.concat(allowedHeaderNames)\n      : defaultAllowedHeaderNames;\n\n    allowedQueryParameters = Array.isArray(allowedQueryParameters)\n      ? defaultAllowedQueryParameters.concat(allowedQueryParameters)\n      : defaultAllowedQueryParameters;\n\n    this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n    this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n  }\n\n  public sanitize(obj: unknown): string {\n    const seen = new Set<unknown>();\n    return JSON.stringify(\n      obj,\n      (key: string, value: unknown) => {\n        // Ensure Errors include their interesting non-enumerable members\n        if (value instanceof Error) {\n          return {\n            ...value,\n            name: value.name,\n            message: value.message,\n          };\n        }\n\n        if (key === \"_headersMap\") {\n          return this.sanitizeHeaders(value as UnknownObject);\n        } else if (key === \"url\") {\n          return this.sanitizeUrl(value as string);\n        } else if (key === \"query\") {\n          return this.sanitizeQuery(value as UnknownObject);\n        } else if (key === \"body\") {\n          // Don't log the request body\n          return undefined;\n        } else if (key === \"response\") {\n          // Don't log response again\n          return undefined;\n        } else if (key === \"operationSpec\") {\n          // When using sendOperationRequest, the request carries a massive\n          // field with the autorest spec. No need to log it.\n          return undefined;\n        } else if (Array.isArray(value) || isObject(value)) {\n          if (seen.has(value)) {\n            return \"[Circular]\";\n          }\n          seen.add(value);\n        }\n\n        return value;\n      },\n      2\n    );\n  }\n\n  private sanitizeHeaders(value: UnknownObject): UnknownObject {\n    return this.sanitizeObject(value, this.allowedHeaderNames, (v, k) => v[k].value);\n  }\n\n  private sanitizeQuery(value: UnknownObject): UnknownObject {\n    return this.sanitizeObject(value, this.allowedQueryParameters, (v, k) => v[k]);\n  }\n\n  private sanitizeObject(\n    value: UnknownObject,\n    allowedKeys: Set<string>,\n    accessor: (value: any, key: string) => any\n  ): UnknownObject {\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n\n    const sanitized: UnknownObject = {};\n\n    for (const k of Object.keys(value)) {\n      if (allowedKeys.has(k.toLowerCase())) {\n        sanitized[k] = accessor(value, k);\n      } else {\n        sanitized[k] = RedactedString;\n      }\n    }\n\n    return sanitized;\n  }\n\n  private sanitizeUrl(value: string): string {\n    if (typeof value !== \"string\" || value === null) {\n      return value;\n    }\n\n    const urlBuilder = URLBuilder.parse(value);\n    const queryString = urlBuilder.getQuery();\n\n    if (!queryString) {\n      return value;\n    }\n\n    const query = URLQuery.parse(queryString);\n    for (const k of query.keys()) {\n      if (!this.allowedQueryParameters.has(k.toLowerCase())) {\n        query.set(k, RedactedString);\n      }\n    }\n\n    urlBuilder.setQuery(query.toString());\n    return urlBuilder.toString();\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { inspect } from \"util\";\n\nexport const custom = inspect.custom;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { Sanitizer } from \"./util/sanitizer\";\nimport { WebResourceLike } from \"./webResource\";\nimport { custom } from \"./util/inspect\";\n\nconst errorSanitizer = new Sanitizer();\n\n/**\n * An error resulting from an HTTP request to a service endpoint.\n */\nexport class RestError extends Error {\n  /**\n   * A constant string to identify errors that may arise when making an HTTP request that indicates an issue with the transport layer (e.g. the hostname of the URL cannot be resolved via DNS.)\n   */\n  static readonly REQUEST_SEND_ERROR: string = \"REQUEST_SEND_ERROR\";\n  /**\n   * A constant string to identify errors that may arise from parsing an incoming HTTP response. Usually indicates a malformed HTTP body, such as an encoded JSON payload that is incomplete.\n   */\n  static readonly PARSE_ERROR: string = \"PARSE_ERROR\";\n\n  /**\n   * The error code, if any. Can be one of the static error code properties (REQUEST_SEND_ERROR / PARSE_ERROR) or can be a string code from an underlying system call (E_NOENT).\n   */\n  code?: string;\n  /**\n   * The HTTP status code of the response, if one was returned.\n   */\n  statusCode?: number;\n  /**\n   * Outgoing request.\n   */\n  request?: WebResourceLike;\n  /**\n   * Incoming response.\n   */\n  response?: HttpOperationResponse;\n  /**\n   * Any additional details. In the case of deserialization errors, can be the processed response.\n   */\n  details?: unknown;\n  constructor(\n    message: string,\n    code?: string,\n    statusCode?: number,\n    request?: WebResourceLike,\n    response?: HttpOperationResponse\n  ) {\n    super(message);\n    this.name = \"RestError\";\n    this.code = code;\n    this.statusCode = statusCode;\n    this.request = request;\n    this.response = response;\n\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n\n  /**\n   * Logging method for util.inspect in Node\n   */\n  [custom](): string {\n    return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n  }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The different levels of logs that can be used with the HttpPipelineLogger.\n */\nexport enum HttpPipelineLogLevel {\n  /**\n   * A log level that indicates that no logs will be logged.\n   */\n  OFF,\n\n  /**\n   * An error log.\n   */\n  ERROR,\n\n  /**\n   * A warning log.\n   */\n  WARNING,\n\n  /**\n   * An information log.\n   */\n  INFO,\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { TracingContext } from \"./tracing\";\n\n/**\n * Represents a credential capable of providing an authentication token.\n */\nexport interface TokenCredential {\n  /**\n   * Gets the token provided by this credential.\n   *\n   * This method is called automatically by Azure SDK client libraries. You may call this method\n   * directly, but you must also handle token caching and token refreshing.\n   *\n   * @param scopes - The list of scopes for which the token will have access.\n   * @param options - The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;\n}\n\n/**\n * Defines options for TokenCredential.getToken.\n */\nexport interface GetTokenOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: {\n    /**\n     * The number of milliseconds a request can take before automatically being terminated.\n     */\n    timeout?: number;\n  };\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: {\n    /**\n     * Tracing Context for the current request.\n     */\n    tracingContext?: TracingContext;\n  };\n\n  /**\n   * Allows specifying a tenantId. Useful to handle challenges that provide tenant Id hints.\n   */\n  tenantId?: string;\n\n  /**\n   * Claim details to perform the Continuous Access Evaluation authentication flow\n   */\n  claims?: string;\n}\n\n/**\n * Represents an access token with an expiration time.\n */\nexport interface AccessToken {\n  /**\n   * The access token returned by the authentication service.\n   */\n  token: string;\n\n  /**\n   * The access token's expiration timestamp in milliseconds, UNIX epoch time.\n   */\n  expiresOnTimestamp: number;\n}\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential: unknown): credential is TokenCredential {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  const castCredential = credential as {\n    getToken: unknown;\n    signRequest: unknown;\n  };\n  return (\n    castCredential &&\n    typeof castCredential.getToken === \"function\" &&\n    (castCredential.signRequest === undefined || castCredential.getToken.length > 0)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { HttpPipelineLogLevel } from \"../httpPipelineLogLevel\";\nimport { HttpPipelineLogger } from \"../httpPipelineLogger\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Creates a new RequestPolicy per-request that uses the provided nextPolicy.\n */\nexport type RequestPolicyFactory = {\n  create(nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike): RequestPolicy;\n};\n\n/**\n * The underlying structure of a request policy.\n */\nexport interface RequestPolicy {\n  /**\n   * A method that retrieves an {@link HttpOperationResponse} given a {@link WebResourceLike} describing the request to be made.\n   * @param httpRequest - {@link WebResourceLike} describing the request to be made.\n   */\n  sendRequest(httpRequest: WebResourceLike): Promise<HttpOperationResponse>;\n}\n\n/**\n * The base class from which all request policies derive.\n */\nexport abstract class BaseRequestPolicy implements RequestPolicy {\n  /**\n   * The main method to implement that manipulates a request/response.\n   */\n  protected constructor(\n    /**\n     * The next policy in the pipeline. Each policy is responsible for executing the next one if the request is to continue through the pipeline.\n     */\n    readonly _nextPolicy: RequestPolicy,\n    /**\n     * The options that can be passed to a given request policy.\n     */\n    readonly _options: RequestPolicyOptionsLike\n  ) {}\n\n  /**\n   * Sends a network request based on the given web resource.\n   * @param webResource - A {@link WebResourceLike} that describes a HTTP request to be made.\n   */\n  public abstract sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse>;\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return this._options.shouldLog(logLevel);\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meat the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    this._options.log(logLevel, message);\n  }\n}\n\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nexport interface RequestPolicyOptionsLike {\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  shouldLog(logLevel: HttpPipelineLogLevel): boolean;\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meet the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  log(logLevel: HttpPipelineLogLevel, message: string): void;\n}\n\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nexport class RequestPolicyOptions {\n  constructor(private _logger?: HttpPipelineLogger) {}\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return (\n      !!this._logger &&\n      logLevel !== HttpPipelineLogLevel.OFF &&\n      logLevel <= this._logger.minimumLogLevel\n    );\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meet the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    if (this._logger && this.shouldLog(logLevel)) {\n      this._logger.log(logLevel, message);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A set of constants used internally when processing requests.\n */\nexport const Constants = {\n  /**\n   * The core-http version\n   */\n  coreHttpVersion: \"2.3.1\",\n\n  /**\n   * Specifies HTTP.\n   */\n  HTTP: \"http:\",\n\n  /**\n   * Specifies HTTPS.\n   */\n  HTTPS: \"https:\",\n\n  /**\n   * Specifies HTTP Proxy.\n   */\n  HTTP_PROXY: \"HTTP_PROXY\",\n\n  /**\n   * Specifies HTTPS Proxy.\n   */\n  HTTPS_PROXY: \"HTTPS_PROXY\",\n\n  /**\n   * Specifies NO Proxy.\n   */\n  NO_PROXY: \"NO_PROXY\",\n\n  /**\n   * Specifies ALL Proxy.\n   */\n  ALL_PROXY: \"ALL_PROXY\",\n\n  HttpConstants: {\n    /**\n     * Http Verbs\n     */\n    HttpVerbs: {\n      PUT: \"PUT\",\n      GET: \"GET\",\n      DELETE: \"DELETE\",\n      POST: \"POST\",\n      MERGE: \"MERGE\",\n      HEAD: \"HEAD\",\n      PATCH: \"PATCH\",\n    },\n\n    StatusCodes: {\n      TooManyRequests: 429,\n      ServiceUnavailable: 503,\n    },\n  },\n\n  /**\n   * Defines constants for use with HTTP headers.\n   */\n  HeaderConstants: {\n    /**\n     * The Authorization header.\n     */\n    AUTHORIZATION: \"authorization\",\n\n    AUTHORIZATION_SCHEME: \"Bearer\",\n\n    /**\n     * The Retry-After response-header field can be used with a 503 (Service\n     * Unavailable) or 349 (Too Many Requests) responses to indicate how long\n     * the service is expected to be unavailable to the requesting client.\n     */\n    RETRY_AFTER: \"Retry-After\",\n\n    /**\n     * The UserAgent header.\n     */\n    USER_AGENT: \"User-Agent\",\n  },\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { Constants } from \"../util/constants\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { ProxySettings } from \"../serviceClient\";\nimport { URLBuilder } from \"../url\";\nimport { WebResourceLike } from \"../webResource\";\nimport { getEnvironmentValue } from \"../util/utils\";\n\n/**\n * Stores the patterns specified in NO_PROXY environment variable.\n * @internal\n */\nexport const globalNoProxyList: string[] = [];\nlet noProxyListLoaded: boolean = false;\n\n/** A cache of whether a host should bypass the proxy. */\nconst globalBypassedMap: Map<string, boolean> = new Map();\n\nfunction loadEnvironmentProxyValue(): string | undefined {\n  if (!process) {\n    return undefined;\n  }\n\n  const httpsProxy = getEnvironmentValue(Constants.HTTPS_PROXY);\n  const allProxy = getEnvironmentValue(Constants.ALL_PROXY);\n  const httpProxy = getEnvironmentValue(Constants.HTTP_PROXY);\n\n  return httpsProxy || allProxy || httpProxy;\n}\n\n/**\n * Check whether the host of a given `uri` matches any pattern in the no proxy list.\n * If there's a match, any request sent to the same host shouldn't have the proxy settings set.\n * This implementation is a port of https://github.com/Azure/azure-sdk-for-net/blob/8cca811371159e527159c7eb65602477898683e2/sdk/core/Azure.Core/src/Pipeline/Internal/HttpEnvironmentProxy.cs#L210\n */\nfunction isBypassed(\n  uri: string,\n  noProxyList: string[],\n  bypassedMap?: Map<string, boolean>\n): boolean | undefined {\n  if (noProxyList.length === 0) {\n    return false;\n  }\n  const host = URLBuilder.parse(uri).getHost()!;\n  if (bypassedMap?.has(host)) {\n    return bypassedMap.get(host);\n  }\n  let isBypassedFlag = false;\n  for (const pattern of noProxyList) {\n    if (pattern[0] === \".\") {\n      // This should match either domain it self or any subdomain or host\n      // .foo.com will match foo.com it self or *.foo.com\n      if (host.endsWith(pattern)) {\n        isBypassedFlag = true;\n      } else {\n        if (host.length === pattern.length - 1 && host === pattern.slice(1)) {\n          isBypassedFlag = true;\n        }\n      }\n    } else {\n      if (host === pattern) {\n        isBypassedFlag = true;\n      }\n    }\n  }\n  bypassedMap?.set(host, isBypassedFlag);\n  return isBypassedFlag;\n}\n\n/**\n * @internal\n */\nexport function loadNoProxy(): string[] {\n  const noProxy = getEnvironmentValue(Constants.NO_PROXY);\n  noProxyListLoaded = true;\n  if (noProxy) {\n    return noProxy\n      .split(\",\")\n      .map((item) => item.trim())\n      .filter((item) => item.length);\n  }\n\n  return [];\n}\n\n/**\n * Converts a given URL of a proxy server into `ProxySettings` or attempts to retrieve `ProxySettings` from the current environment if one is not passed.\n * @param proxyUrl - URL of the proxy\n * @returns The default proxy settings, or undefined.\n */\nexport function getDefaultProxySettings(proxyUrl?: string): ProxySettings | undefined {\n  if (!proxyUrl) {\n    proxyUrl = loadEnvironmentProxyValue();\n    if (!proxyUrl) {\n      return undefined;\n    }\n  }\n\n  const { username, password, urlWithoutAuth } = extractAuthFromUrl(proxyUrl);\n  const parsedUrl = URLBuilder.parse(urlWithoutAuth);\n  const schema = parsedUrl.getScheme() ? parsedUrl.getScheme() + \"://\" : \"\";\n  return {\n    host: schema + parsedUrl.getHost(),\n    port: Number.parseInt(parsedUrl.getPort() || \"80\"),\n    username,\n    password,\n  };\n}\n\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nexport function proxyPolicy(\n  proxySettings?: ProxySettings,\n  options?: {\n    /** a list of patterns to override those loaded from NO_PROXY environment variable. */\n    customNoProxyList?: string[];\n  }\n): RequestPolicyFactory {\n  if (!proxySettings) {\n    proxySettings = getDefaultProxySettings();\n  }\n  if (!noProxyListLoaded) {\n    globalNoProxyList.push(...loadNoProxy());\n  }\n  return {\n    create: (nextPolicy: RequestPolicy, requestPolicyOptions: RequestPolicyOptions) => {\n      return new ProxyPolicy(\n        nextPolicy,\n        requestPolicyOptions,\n        proxySettings!,\n        options?.customNoProxyList\n      );\n    },\n  };\n}\n\nfunction extractAuthFromUrl(url: string): {\n  username?: string;\n  password?: string;\n  urlWithoutAuth: string;\n} {\n  const atIndex = url.indexOf(\"@\");\n  if (atIndex === -1) {\n    return { urlWithoutAuth: url };\n  }\n\n  const schemeIndex = url.indexOf(\"://\");\n  const authStart = schemeIndex !== -1 ? schemeIndex + 3 : 0;\n  const auth = url.substring(authStart, atIndex);\n  const colonIndex = auth.indexOf(\":\");\n  const hasPassword = colonIndex !== -1;\n  const username = hasPassword ? auth.substring(0, colonIndex) : auth;\n  const password = hasPassword ? auth.substring(colonIndex + 1) : undefined;\n  const urlWithoutAuth = url.substring(0, authStart) + url.substring(atIndex + 1);\n  return {\n    username,\n    password,\n    urlWithoutAuth,\n  };\n}\n\nexport class ProxyPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    public proxySettings: ProxySettings,\n    private customNoProxyList?: string[]\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (\n      !request.proxySettings &&\n      !isBypassed(\n        request.url,\n        this.customNoProxyList ?? globalNoProxyList,\n        this.customNoProxyList ? undefined : globalBypassedMap\n      )\n    ) {\n      request.proxySettings = this.proxySettings;\n    }\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins\nexport const _globalThis = typeof globalThis === 'object' ? globalThis : global;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.4.0';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../version';\n\nconst re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(\n  ownVersion: string\n): (globalVersion: string) => boolean {\n  const acceptedVersions = new Set<string>([ownVersion]);\n  const rejectedVersions = new Set<string>();\n\n  const myVersionMatch = ownVersion.match(re);\n  if (!myVersionMatch) {\n    // we cannot guarantee compatibility so we always return noop\n    return () => false;\n  }\n\n  const ownVersionParsed = {\n    major: +myVersionMatch[1],\n    minor: +myVersionMatch[2],\n    patch: +myVersionMatch[3],\n    prerelease: myVersionMatch[4],\n  };\n\n  // if ownVersion has a prerelease tag, versions must match exactly\n  if (ownVersionParsed.prerelease != null) {\n    return function isExactmatch(globalVersion: string): boolean {\n      return globalVersion === ownVersion;\n    };\n  }\n\n  function _reject(v: string) {\n    rejectedVersions.add(v);\n    return false;\n  }\n\n  function _accept(v: string) {\n    acceptedVersions.add(v);\n    return true;\n  }\n\n  return function isCompatible(globalVersion: string): boolean {\n    if (acceptedVersions.has(globalVersion)) {\n      return true;\n    }\n\n    if (rejectedVersions.has(globalVersion)) {\n      return false;\n    }\n\n    const globalVersionMatch = globalVersion.match(re);\n    if (!globalVersionMatch) {\n      // cannot parse other version\n      // we cannot guarantee compatibility so we always noop\n      return _reject(globalVersion);\n    }\n\n    const globalVersionParsed = {\n      major: +globalVersionMatch[1],\n      minor: +globalVersionMatch[2],\n      patch: +globalVersionMatch[3],\n      prerelease: globalVersionMatch[4],\n    };\n\n    // if globalVersion has a prerelease tag, versions must match exactly\n    if (globalVersionParsed.prerelease != null) {\n      return _reject(globalVersion);\n    }\n\n    // major versions must match\n    if (ownVersionParsed.major !== globalVersionParsed.major) {\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.major === 0) {\n      if (\n        ownVersionParsed.minor === globalVersionParsed.minor &&\n        ownVersionParsed.patch <= globalVersionParsed.patch\n      ) {\n        return _accept(globalVersion);\n      }\n\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n      return _accept(globalVersion);\n    }\n\n    return _reject(globalVersion);\n  };\n}\n\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport const isCompatible = _makeCompatibilityCheck(VERSION);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MeterProvider } from '../metrics/MeterProvider';\nimport { ContextManager } from '../context/types';\nimport { DiagLogger } from '../diag/types';\nimport { _globalThis } from '../platform';\nimport { TextMapPropagator } from '../propagation/TextMapPropagator';\nimport type { TracerProvider } from '../trace/tracer_provider';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\n\nconst major = VERSION.split('.')[0];\nconst GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\n  `opentelemetry.js.api.${major}`\n);\n\nconst _global = _globalThis as OTelGlobal;\n\nexport function registerGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type,\n  instance: OTelGlobalAPI[Type],\n  diag: DiagLogger,\n  allowOverride = false\n): boolean {\n  const api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = _global[\n    GLOBAL_OPENTELEMETRY_API_KEY\n  ] ?? {\n    version: VERSION,\n  });\n\n  if (!allowOverride && api[type]) {\n    // already registered an API of this type\n    const err = new Error(\n      `@opentelemetry/api: Attempted duplicate registration of API: ${type}`\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  if (api.version !== VERSION) {\n    // All registered APIs must be of the same version exactly\n    const err = new Error(\n      '@opentelemetry/api: All API registration versions must match'\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  api[type] = instance;\n  diag.debug(\n    `@opentelemetry/api: Registered a global for ${type} v${VERSION}.`\n  );\n\n  return true;\n}\n\nexport function getGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type\n): OTelGlobalAPI[Type] | undefined {\n  const globalVersion = _global[GLOBAL_OPENTELEMETRY_API_KEY]?.version;\n  if (!globalVersion || !isCompatible(globalVersion)) {\n    return;\n  }\n  return _global[GLOBAL_OPENTELEMETRY_API_KEY]?.[type];\n}\n\nexport function unregisterGlobal(type: keyof OTelGlobalAPI, diag: DiagLogger) {\n  diag.debug(\n    `@opentelemetry/api: Unregistering a global for ${type} v${VERSION}.`\n  );\n  const api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n\n  if (api) {\n    delete api[type];\n  }\n}\n\ntype OTelGlobal = {\n  [GLOBAL_OPENTELEMETRY_API_KEY]?: OTelGlobalAPI;\n};\n\ntype OTelGlobalAPI = {\n  version: string;\n\n  diag?: DiagLogger;\n  trace?: TracerProvider;\n  context?: ContextManager;\n  metrics?: MeterProvider;\n  propagation?: TextMapPropagator;\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from './types';\n\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description: string) {\n  // The specification states that for the same input, multiple calls should\n  // return different keys. Due to the nature of the JS dependency management\n  // system, this creates problems where multiple versions of some package\n  // could hold different keys for the same property.\n  //\n  // Therefore, we use Symbol.for which returns the same key for the same input.\n  return Symbol.for(description);\n}\n\nclass BaseContext implements Context {\n  private _currentContext!: Map<symbol, unknown>;\n\n  /**\n   * Construct a new context which inherits values from an optional parent context.\n   *\n   * @param parentContext a context from which to inherit values\n   */\n  constructor(parentContext?: Map<symbol, unknown>) {\n    // for minification\n    const self = this;\n\n    self._currentContext = parentContext ? new Map(parentContext) : new Map();\n\n    self.getValue = (key: symbol) => self._currentContext.get(key);\n\n    self.setValue = (key: symbol, value: unknown): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.set(key, value);\n      return context;\n    };\n\n    self.deleteValue = (key: symbol): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.delete(key);\n      return context;\n    };\n  }\n\n  /**\n   * Get a value from the context.\n   *\n   * @param key key which identifies a context value\n   */\n  public getValue!: (key: symbol) => unknown;\n\n  /**\n   * Create a new context which inherits from this context and has\n   * the given key set to the given value.\n   *\n   * @param key context key for which to set the value\n   * @param value value to set for the given key\n   */\n  public setValue!: (key: symbol, value: unknown) => Context;\n\n  /**\n   * Return a new context which inherits from this context but does\n   * not contain a value for the given key.\n   *\n   * @param key context key for which to clear a value\n   */\n  public deleteValue!: (key: symbol) => Context;\n}\n\n/** The root context is used as the default parent context when there is no active context */\nexport const ROOT_CONTEXT: Context = new BaseContext();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type DiagLogFunction = (message: string, ...args: unknown[]) => void;\n\n/**\n * Defines an internal diagnostic logger interface which is used to log internal diagnostic\n * messages, you can set the default diagnostic logger via the {@link DiagAPI} setLogger function.\n * API provided implementations include :-\n * - a No-Op {@link createNoopDiagLogger}\n * - a {@link DiagLogLevel} filtering wrapper {@link createLogLevelDiagLogger}\n * - a general Console {@link DiagConsoleLogger} version.\n */\nexport interface DiagLogger {\n  /** Log an error scenario that was not expected and caused the requested operation to fail. */\n  error: DiagLogFunction;\n\n  /**\n   * Log a warning scenario to inform the developer of an issues that should be investigated.\n   * The requested operation may or may not have succeeded or completed.\n   */\n  warn: DiagLogFunction;\n\n  /**\n   * Log a general informational message, this should not affect functionality.\n   * This is also the default logging level so this should NOT be used for logging\n   * debugging level information.\n   */\n  info: DiagLogFunction;\n\n  /**\n   * Log a general debug message that can be useful for identifying a failure.\n   * Information logged at this level may include diagnostic details that would\n   * help identify a failure scenario.\n   * For example: Logging the order of execution of async operations.\n   */\n  debug: DiagLogFunction;\n\n  /**\n   * Log a detailed (verbose) trace level logging that can be used to identify failures\n   * where debug level logging would be insufficient, this level of tracing can include\n   * input and output parameters and as such may include PII information passing through\n   * the API. As such it is recommended that this level of tracing should not be enabled\n   * in a production environment.\n   */\n  verbose: DiagLogFunction;\n}\n\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport enum DiagLogLevel {\n  /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n  NONE = 0,\n\n  /** Identifies an error scenario */\n  ERROR = 30,\n\n  /** Identifies a warning scenario */\n  WARN = 50,\n\n  /** General informational log message */\n  INFO = 60,\n\n  /** General debug log message */\n  DEBUG = 70,\n\n  /**\n   * Detailed trace level logging should only be used for development, should only be set\n   * in a development environment.\n   */\n  VERBOSE = 80,\n\n  /** Used to set the logging level to include all logging */\n  ALL = 9999,\n}\n\n/**\n * Defines options for ComponentLogger\n */\nexport interface ComponentLoggerOptions {\n  namespace: string;\n}\n\nexport interface LoggerOptions {\n  /**\n   * The {@link DiagLogLevel} used to filter logs sent to the logger.\n   *\n   * @defaultValue DiagLogLevel.INFO\n   */\n  logLevel?: DiagLogLevel;\n\n  /**\n   * Setting this value to `true` will suppress the warning message normally emitted when registering a logger when another logger is already registered.\n   */\n  suppressOverrideMessage?: boolean;\n}\n\nexport interface DiagLoggerApi {\n  /**\n   * Set the global DiagLogger and DiagLogLevel.\n   * If a global diag logger is already set, this will override it.\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param options - A {@link LoggerOptions} object. If not provided, default values will be set.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, options?: LoggerOptions): boolean;\n\n  /**\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param logLevel - The {@link DiagLogLevel} used to filter logs sent to the logger. If not provided it will default to {@link DiagLogLevel.INFO}.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, logLevel?: DiagLogLevel): boolean;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ROOT_CONTEXT } from './context';\nimport * as types from './types';\n\nexport class NoopContextManager implements types.ContextManager {\n  active(): types.Context {\n    return ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    _context: types.Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return fn.call(thisArg, ...args);\n  }\n\n  bind<T>(_context: types.Context, target: T): T {\n    return target;\n  }\n\n  enable(): this {\n    return this;\n  }\n\n  disable(): this {\n    return this;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGlobal } from '../internal/global-utils';\nimport { ComponentLoggerOptions, DiagLogger, DiagLogFunction } from './types';\n\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nexport class DiagComponentLogger implements DiagLogger {\n  private _namespace: string;\n\n  constructor(props: ComponentLoggerOptions) {\n    this._namespace = props.namespace || 'DiagComponentLogger';\n  }\n\n  public debug(...args: any[]): void {\n    return logProxy('debug', this._namespace, args);\n  }\n\n  public error(...args: any[]): void {\n    return logProxy('error', this._namespace, args);\n  }\n\n  public info(...args: any[]): void {\n    return logProxy('info', this._namespace, args);\n  }\n\n  public warn(...args: any[]): void {\n    return logProxy('warn', this._namespace, args);\n  }\n\n  public verbose(...args: any[]): void {\n    return logProxy('verbose', this._namespace, args);\n  }\n}\n\nfunction logProxy(\n  funcName: keyof DiagLogger,\n  namespace: string,\n  args: any\n): void {\n  const logger = getGlobal('diag');\n  // shortcut if logger not set\n  if (!logger) {\n    return;\n  }\n\n  args.unshift(namespace);\n  return logger[funcName](...(args as Parameters<DiagLogFunction>));\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum TraceFlags {\n  /** Represents no flag set. */\n  NONE = 0x0,\n  /** Bit to represent whether trace is sampled in trace flags. */\n  SAMPLED = 0x1 << 0,\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport {\n  ComponentLoggerOptions,\n  DiagLogFunction,\n  DiagLogger,\n  DiagLoggerApi,\n  DiagLogLevel,\n} from '../diag/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\n\nconst API_NAME = 'diag';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nexport class DiagAPI implements DiagLogger, DiagLoggerApi {\n  private static _instance?: DiagAPI;\n\n  /** Get the singleton instance of the DiagAPI API */\n  public static instance(): DiagAPI {\n    if (!this._instance) {\n      this._instance = new DiagAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Private internal constructor\n   * @private\n   */\n  private constructor() {\n    function _logProxy(funcName: keyof DiagLogger): DiagLogFunction {\n      return function (...args) {\n        const logger = getGlobal('diag');\n        // shortcut if logger not set\n        if (!logger) return;\n        return logger[funcName](...args);\n      };\n    }\n\n    // Using self local variable for minification purposes as 'this' cannot be minified\n    const self = this;\n\n    // DiagAPI specific functions\n\n    const setLogger: DiagLoggerApi['setLogger'] = (\n      logger,\n      optionsOrLogLevel = { logLevel: DiagLogLevel.INFO }\n    ) => {\n      if (logger === self) {\n        // There isn't much we can do here.\n        // Logging to the console might break the user application.\n        // Try to log to self. If a logger was previously registered it will receive the log.\n        const err = new Error(\n          'Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation'\n        );\n        self.error(err.stack ?? err.message);\n        return false;\n      }\n\n      if (typeof optionsOrLogLevel === 'number') {\n        optionsOrLogLevel = {\n          logLevel: optionsOrLogLevel,\n        };\n      }\n\n      const oldLogger = getGlobal('diag');\n      const newLogger = createLogLevelDiagLogger(\n        optionsOrLogLevel.logLevel ?? DiagLogLevel.INFO,\n        logger\n      );\n      // There already is an logger registered. We'll let it know before overwriting it.\n      if (oldLogger && !optionsOrLogLevel.suppressOverrideMessage) {\n        const stack = new Error().stack ?? '<failed to generate stacktrace>';\n        oldLogger.warn(`Current logger will be overwritten from ${stack}`);\n        newLogger.warn(\n          `Current logger will overwrite one already registered from ${stack}`\n        );\n      }\n\n      return registerGlobal('diag', newLogger, self, true);\n    };\n\n    self.setLogger = setLogger;\n\n    self.disable = () => {\n      unregisterGlobal(API_NAME, self);\n    };\n\n    self.createComponentLogger = (options: ComponentLoggerOptions) => {\n      return new DiagComponentLogger(options);\n    };\n\n    self.verbose = _logProxy('verbose');\n    self.debug = _logProxy('debug');\n    self.info = _logProxy('info');\n    self.warn = _logProxy('warn');\n    self.error = _logProxy('error');\n  }\n\n  public setLogger!: DiagLoggerApi['setLogger'];\n  /**\n   *\n   */\n  public createComponentLogger!: (\n    options: ComponentLoggerOptions\n  ) => DiagLogger;\n\n  // DiagLogger implementation\n  public verbose!: DiagLogFunction;\n  public debug!: DiagLogFunction;\n  public info!: DiagLogFunction;\n  public warn!: DiagLogFunction;\n  public error!: DiagLogFunction;\n\n  /**\n   * Unregister the global logger and return to Noop\n   */\n  public disable!: () => void;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogFunction, DiagLogger, DiagLogLevel } from '../types';\n\nexport function createLogLevelDiagLogger(\n  maxLevel: DiagLogLevel,\n  logger: DiagLogger\n): DiagLogger {\n  if (maxLevel < DiagLogLevel.NONE) {\n    maxLevel = DiagLogLevel.NONE;\n  } else if (maxLevel > DiagLogLevel.ALL) {\n    maxLevel = DiagLogLevel.ALL;\n  }\n\n  // In case the logger is null or undefined\n  logger = logger || {};\n\n  function _filterFunc(\n    funcName: keyof DiagLogger,\n    theLevel: DiagLogLevel\n  ): DiagLogFunction {\n    const theFunc = logger[funcName];\n\n    if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n      return theFunc.bind(logger);\n    }\n    return function () {};\n  }\n\n  return {\n    error: _filterFunc('error', DiagLogLevel.ERROR),\n    warn: _filterFunc('warn', DiagLogLevel.WARN),\n    info: _filterFunc('info', DiagLogLevel.INFO),\n    debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n    verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { Context, ContextManager } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'context';\nconst NOOP_CONTEXT_MANAGER = new NoopContextManager();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nexport class ContextAPI {\n  private static _instance?: ContextAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Context API */\n  public static getInstance(): ContextAPI {\n    if (!this._instance) {\n      this._instance = new ContextAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current context manager.\n   *\n   * @returns true if the context manager was successfully registered, else false\n   */\n  public setGlobalContextManager(contextManager: ContextManager): boolean {\n    return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n  }\n\n  /**\n   * Get the currently active context\n   */\n  public active(): Context {\n    return this._getContextManager().active();\n  }\n\n  /**\n   * Execute a function with an active context\n   *\n   * @param context context to be active during function execution\n   * @param fn function to execute in a context\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  public with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return this._getContextManager().with(context, fn, thisArg, ...args);\n  }\n\n  /**\n   * Bind a context to a target function or event emitter\n   *\n   * @param context context to bind to the event emitter or function. Defaults to the currently active context\n   * @param target function or event emitter to bind\n   */\n  public bind<T>(context: Context, target: T): T {\n    return this._getContextManager().bind(context, target);\n  }\n\n  private _getContextManager(): ContextManager {\n    return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n  }\n\n  /** Disable and remove the global context manager */\n  public disable() {\n    this._getContextManager().disable();\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanContext } from './span_context';\nimport { TraceFlags } from './trace_flags';\n\nexport const INVALID_SPANID = '0000000000000000';\nexport const INVALID_TRACEID = '00000000000000000000000000000000';\nexport const INVALID_SPAN_CONTEXT: SpanContext = {\n  traceId: INVALID_TRACEID,\n  spanId: INVALID_SPANID,\n  traceFlags: TraceFlags.NONE,\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '../common/Exception';\nimport { TimeInput } from '../common/Time';\nimport { SpanAttributes } from './attributes';\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { SpanStatus } from './status';\n\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nexport class NonRecordingSpan implements Span {\n  constructor(\n    private readonly _spanContext: SpanContext = INVALID_SPAN_CONTEXT\n  ) {}\n\n  // Returns a SpanContext.\n  spanContext(): SpanContext {\n    return this._spanContext;\n  }\n\n  // By default does nothing\n  setAttribute(_key: string, _value: unknown): this {\n    return this;\n  }\n\n  // By default does nothing\n  setAttributes(_attributes: SpanAttributes): this {\n    return this;\n  }\n\n  // By default does nothing\n  addEvent(_name: string, _attributes?: SpanAttributes): this {\n    return this;\n  }\n\n  // By default does nothing\n  setStatus(_status: SpanStatus): this {\n    return this;\n  }\n\n  // By default does nothing\n  updateName(_name: string): this {\n    return this;\n  }\n\n  // By default does nothing\n  end(_endTime?: TimeInput): void {}\n\n  // isRecording always returns false for NonRecordingSpan.\n  isRecording(): boolean {\n    return false;\n  }\n\n  // By default does nothing\n  recordException(_exception: Exception, _time?: TimeInput): void {}\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContextKey } from '../context/context';\nimport { Context } from '../context/types';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { ContextAPI } from '../api/context';\n\n/**\n * span key\n */\nconst SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context: Context): Span | undefined {\n  return (context.getValue(SPAN_KEY) as Span) || undefined;\n}\n\n/**\n * Gets the span from the current context, if one exists.\n */\nexport function getActiveSpan(): Span | undefined {\n  return getSpan(ContextAPI.getInstance().active());\n}\n\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context: Context, span: Span): Context {\n  return context.setValue(SPAN_KEY, span);\n}\n\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context: Context): Context {\n  return context.deleteValue(SPAN_KEY);\n}\n\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(\n  context: Context,\n  spanContext: SpanContext\n): Context {\n  return setSpan(context, new NonRecordingSpan(spanContext));\n}\n\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context: Context): SpanContext | undefined {\n  return getSpan(context)?.spanContext();\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\n\nconst VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nconst VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\n\nexport function isValidTraceId(traceId: string): boolean {\n  return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\n\nexport function isValidSpanId(spanId: string): boolean {\n  return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext: SpanContext): boolean {\n  return (\n    isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId)\n  );\n}\n\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext: SpanContext): Span {\n  return new NonRecordingSpan(spanContext);\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextAPI } from '../api/context';\nimport { Context } from '../context/types';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { isSpanContextValid } from './spancontext-utils';\nimport { SpanOptions } from './SpanOptions';\nimport { SpanContext } from './span_context';\nimport { Tracer } from './tracer';\n\nconst contextApi = ContextAPI.getInstance();\n\n/**\n * No-op implementations of {@link Tracer}.\n */\nexport class NoopTracer implements Tracer {\n  // startSpan starts a noop span.\n  startSpan(\n    name: string,\n    options?: SpanOptions,\n    context = contextApi.active()\n  ): Span {\n    const root = Boolean(options?.root);\n    if (root) {\n      return new NonRecordingSpan();\n    }\n\n    const parentFromContext = context && getSpanContext(context);\n\n    if (\n      isSpanContext(parentFromContext) &&\n      isSpanContextValid(parentFromContext)\n    ) {\n      return new NonRecordingSpan(parentFromContext);\n    } else {\n      return new NonRecordingSpan();\n    }\n  }\n\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    ctx: Context | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | SpanOptions,\n    arg3?: F | Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: SpanOptions | undefined;\n    let ctx: Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as SpanOptions | undefined;\n      ctx = arg3 as Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? contextApi.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = setSpan(parentContext, span);\n\n    return contextApi.with(contextWithSpanSet, fn, undefined, span);\n  }\n}\n\nfunction isSpanContext(spanContext: any): spanContext is SpanContext {\n  return (\n    typeof spanContext === 'object' &&\n    typeof spanContext['spanId'] === 'string' &&\n    typeof spanContext['traceId'] === 'string' &&\n    typeof spanContext['traceFlags'] === 'number'\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { NoopTracer } from './NoopTracer';\nimport { Span } from './span';\nimport { SpanOptions } from './SpanOptions';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER = new NoopTracer();\n\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nexport class ProxyTracer implements Tracer {\n  // When a real implementation is provided, this will be it\n  private _delegate?: Tracer;\n\n  constructor(\n    private _provider: TracerDelegator,\n    public readonly name: string,\n    public readonly version?: string,\n    public readonly options?: TracerOptions\n  ) {}\n\n  startSpan(name: string, options?: SpanOptions, context?: Context): Span {\n    return this._getTracer().startSpan(name, options, context);\n  }\n\n  startActiveSpan<F extends (span: Span) => unknown>(\n    _name: string,\n    _options: F | SpanOptions,\n    _context?: F | Context,\n    _fn?: F\n  ): ReturnType<F> {\n    const tracer = this._getTracer();\n    return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n  }\n\n  /**\n   * Try to get a tracer from the proxy tracer provider.\n   * If the proxy tracer provider has no delegate, return a noop tracer.\n   */\n  private _getTracer() {\n    if (this._delegate) {\n      return this._delegate;\n    }\n\n    const tracer = this._provider.getDelegateTracer(\n      this.name,\n      this.version,\n      this.options\n    );\n\n    if (!tracer) {\n      return NOOP_TRACER;\n    }\n\n    this._delegate = tracer;\n    return this._delegate;\n  }\n}\n\nexport interface TracerDelegator {\n  getDelegateTracer(\n    name: string,\n    version?: string,\n    options?: TracerOptions\n  ): Tracer | undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { context as otContext, trace as otTrace } from \"@opentelemetry/api\";\n\n/**\n * A Tracer.\n */\nexport interface Tracer {\n  /**\n   * Starts a new {@link Span}. Start the span without setting it on context.\n   *\n   * This method does NOT modify the current Context.\n   *\n   * @param name - The name of the span\n   * @param options - SpanOptions used for span creation\n   * @param context - Context to use to extract parent\n   * @returns The newly created span\n   * @example\n   *     const span = tracer.startSpan('op');\n   *     span.setAttribute('key', 'value');\n   *     span.end();\n   */\n  startSpan(name: string, options?: SpanOptions, context?: Context): Span;\n}\n\n/**\n * TraceState.\n */\nexport interface TraceState {\n  /**\n   * Create a new TraceState which inherits from this TraceState and has the\n   * given key set.\n   * The new entry will always be added in the front of the list of states.\n   *\n   * @param key - key of the TraceState entry.\n   * @param value - value of the TraceState entry.\n   */\n  set(key: string, value: string): TraceState;\n  /**\n   * Return a new TraceState which inherits from this TraceState but does not\n   * contain the given key.\n   *\n   * @param key - the key for the TraceState entry to be removed.\n   */\n  unset(key: string): TraceState;\n  /**\n   * Returns the value to which the specified key is mapped, or `undefined` if\n   * this map contains no mapping for the key.\n   *\n   * @param key - with which the specified value is to be associated.\n   * @returns the value to which the specified key is mapped, or `undefined` if\n   *     this map contains no mapping for the key.\n   */\n  get(key: string): string | undefined;\n  /**\n   * Serializes the TraceState to a `list` as defined below. The `list` is a\n   * series of `list-members` separated by commas `,`, and a list-member is a\n   * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\n   * surrounding `list-members` are ignored. There can be a maximum of 32\n   * `list-members` in a `list`.\n   *\n   * @returns the serialized string.\n   */\n  serialize(): string;\n}\n\n/**\n * Represents high resolution time.\n */\nexport declare type HrTime = [number, number];\n\n/**\n * Used to represent a Time.\n */\nexport type TimeInput = HrTime | number | Date;\n\n/**\n * The status for a span.\n */\nexport interface SpanStatus {\n  /** The status code of this message. */\n  code: SpanStatusCode;\n  /** A developer-facing error message. */\n  message?: string;\n}\n\n/**\n * The kind of span.\n */\nexport enum SpanKind {\n  /** Default value. Indicates that the span is used internally. */\n  INTERNAL = 0,\n  /**\n   * Indicates that the span covers server-side handling of an RPC or other\n   * remote request.\n   */\n  SERVER = 1,\n  /**\n   * Indicates that the span covers the client-side wrapper around an RPC or\n   * other remote request.\n   */\n  CLIENT = 2,\n  /**\n   * Indicates that the span describes producer sending a message to a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  PRODUCER = 3,\n  /**\n   * Indicates that the span describes consumer receiving a message from a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  CONSUMER = 4\n}\n\n/**\n * An Exception for a Span.\n */\nexport declare type Exception =\n  | ExceptionWithCode\n  | ExceptionWithMessage\n  | ExceptionWithName\n  | string;\n\n/**\n * An Exception with a code.\n */\nexport interface ExceptionWithCode {\n  /** The code. */\n  code: string | number;\n  /** The name. */\n  name?: string;\n  /** The message. */\n  message?: string;\n  /** The stack. */\n  stack?: string;\n}\n\n/**\n * An Exception with a message.\n */\nexport interface ExceptionWithMessage {\n  /** The code. */\n  code?: string | number;\n  /** The message. */\n  message: string;\n  /** The name. */\n  name?: string;\n  /** The stack. */\n  stack?: string;\n}\n\n/**\n * An Exception with a name.\n */\nexport interface ExceptionWithName {\n  /** The code. */\n  code?: string | number;\n  /** The message. */\n  message?: string;\n  /** The name. */\n  name: string;\n  /** The stack. */\n  stack?: string;\n}\n\n/**\n * Return the span if one exists\n *\n * @param context - context to get span from\n */\nexport function getSpan(context: Context): Span | undefined {\n  return otTrace.getSpan(context);\n}\n\n/**\n * Set the span on a context\n *\n * @param context - context to use as parent\n * @param span - span to set active\n */\nexport function setSpan(context: Context, span: Span): Context {\n  return otTrace.setSpan(context, span);\n}\n\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context - context to set active span on\n * @param spanContext - span context to be wrapped\n */\nexport function setSpanContext(context: Context, spanContext: SpanContext): Context {\n  return otTrace.setSpanContext(context, spanContext);\n}\n\n/**\n * Get the span context of the span if it exists.\n *\n * @param context - context to get values from\n */\nexport function getSpanContext(context: Context): SpanContext | undefined {\n  return otTrace.getSpanContext(context);\n}\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nexport interface ContextAPI {\n  /**\n   * Get the currently active context\n   */\n  active(): Context;\n}\n\n/**\n * Returns true of the given {@link SpanContext} is valid.\n * A valid {@link SpanContext} is one which has a valid trace ID and span ID as per the spec.\n *\n * @param context - the {@link SpanContext} to validate.\n *\n * @returns true if the {@link SpanContext} is valid, false otherwise.\n */\nexport function isSpanContextValid(context: SpanContext): boolean {\n  return otTrace.isSpanContextValid(context);\n}\n\n/**\n * Retrieves a tracer from the global tracer provider.\n */\nexport function getTracer(): Tracer;\n/**\n * Retrieves a tracer from the global tracer provider.\n */\nexport function getTracer(name: string, version?: string): Tracer;\nexport function getTracer(name?: string, version?: string): Tracer {\n  return otTrace.getTracer(name || \"azure/core-tracing\", version);\n}\n\n/** Entrypoint for context API */\nexport const context: ContextAPI = otContext;\n\n/** SpanStatusCode */\nexport enum SpanStatusCode {\n  /**\n   * The default status.\n   */\n  UNSET = 0,\n  /**\n   * The operation has been validated by an Application developer or\n   * Operator to have completed successfully.\n   */\n  OK = 1,\n  /**\n   * The operation contains an error.\n   */\n  ERROR = 2\n}\n\n/**\n * An interface that represents a span. A span represents a single operation\n * within a trace. Examples of span might include remote procedure calls or a\n * in-process function calls to sub-components. A Trace has a single, top-level\n * \"root\" Span that in turn may have zero or more child Spans, which in turn\n * may have children.\n *\n * Spans are created by the {@link Tracer.startSpan} method.\n */\nexport interface Span {\n  /**\n   * Returns the {@link SpanContext} object associated with this Span.\n   *\n   * Get an immutable, serializable identifier for this span that can be used\n   * to create new child spans. Returned SpanContext is usable even after the\n   * span ends.\n   *\n   * @returns the SpanContext object associated with this Span.\n   */\n  spanContext(): SpanContext;\n  /**\n   * Sets an attribute to the span.\n   *\n   * Sets a single Attribute with the key and value passed as arguments.\n   *\n   * @param key - the key for this attribute.\n   * @param value - the value for this attribute. Setting a value null or\n   *              undefined is invalid and will result in undefined behavior.\n   */\n  setAttribute(key: string, value: SpanAttributeValue): this;\n  /**\n   * Sets attributes to the span.\n   *\n   * @param attributes - the attributes that will be added.\n   *                   null or undefined attribute values\n   *                   are invalid and will result in undefined behavior.\n   */\n  setAttributes(attributes: SpanAttributes): this;\n  /**\n   * Adds an event to the Span.\n   *\n   * @param name - the name of the event.\n   * @param attributesOrStartTime -  the attributes that will be added; these are\n   *     associated with this event. Can be also a start time\n   *     if type is TimeInput and 3rd param is undefined\n   * @param startTime - start time of the event.\n   */\n  addEvent(\n    name: string,\n    attributesOrStartTime?: SpanAttributes | TimeInput,\n    startTime?: TimeInput\n  ): this;\n  /**\n   * Sets a status to the span. If used, this will override the default Span\n   * status. Default is {@link SpanStatusCode.UNSET}. SetStatus overrides the value\n   * of previous calls to SetStatus on the Span.\n   *\n   * @param status - the SpanStatus to set.\n   */\n  setStatus(status: SpanStatus): this;\n  /**\n   * Marks the end of Span execution.\n   *\n   * Call to End of a Span MUST not have any effects on child spans. Those may\n   * still be running and can be ended later.\n   *\n   * Do not return `this`. The Span generally should not be used after it\n   * is ended so chaining is not desired in this context.\n   *\n   * @param endTime - the time to set as Span's end time. If not provided,\n   *     use the current time as the span's end time.\n   */\n  end(endTime?: TimeInput): void;\n  /**\n   * Returns the flag whether this span will be recorded.\n   *\n   * @returns true if this Span is active and recording information like events\n   *     with the `AddEvent` operation and attributes using `setAttributes`.\n   */\n  isRecording(): boolean;\n\n  /**\n   * Sets exception as a span event\n   * @param exception - the exception the only accepted values are string or Error\n   * @param time - the time to set as Span's event time. If not provided,\n   *     use the current time.\n   */\n  recordException(exception: Exception, time?: TimeInput): void;\n\n  /**\n   * Updates the Span name.\n   *\n   * This will override the name provided via {@link Tracer.startSpan}.\n   *\n   * Upon this update, any sampling behavior based on Span name will depend on\n   * the implementation.\n   *\n   * @param name - the Span name.\n   */\n  updateName(name: string): this;\n}\n\n/**\n * Shorthand enum for common traceFlags values inside SpanContext\n */\nexport const enum TraceFlags {\n  /** No flag set. */\n  NONE = 0x0,\n  /** Caller is collecting trace information. */\n  SAMPLED = 0x1\n}\n\n/**\n * A light interface that tries to be structurally compatible with OpenTelemetry\n */\nexport interface SpanContext {\n  /**\n   * UUID of a trace.\n   */\n  traceId: string;\n  /**\n   * UUID of a Span.\n   */\n  spanId: string;\n  /**\n   * https://www.w3.org/TR/trace-context/#trace-flags\n   */\n  traceFlags: number;\n  /**\n   * Tracing-system-specific info to propagate.\n   *\n   * The tracestate field value is a `list` as defined below. The `list` is a\n   * series of `list-members` separated by commas `,`, and a list-member is a\n   * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\n   * surrounding `list-members` are ignored. There can be a maximum of 32\n   * `list-members` in a `list`.\n   * More Info: https://www.w3.org/TR/trace-context/#tracestate-field\n   *\n   * Examples:\n   *     Single tracing system (generic format):\n   *         tracestate: rojo=00f067aa0ba902b7\n   *     Multiple tracing systems (with different formatting):\n   *         tracestate: rojo=00f067aa0ba902b7,congo=t61rcWkgMzE\n   */\n  traceState?: TraceState;\n}\n\n/**\n * Used to specify a span that is linked to another.\n */\nexport interface Link {\n  /** The {@link SpanContext} of a linked span. */\n  context: SpanContext;\n\n  /** A set of {@link SpanAttributes} on the link. */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Attributes for a Span.\n */\nexport interface SpanAttributes {\n  /**\n   * Attributes for a Span.\n   */\n  [attributeKey: string]: SpanAttributeValue | undefined;\n}\n/**\n * Attribute values may be any non-nullish primitive value except an object.\n *\n * null or undefined attribute values are invalid and will result in undefined behavior.\n */\nexport declare type SpanAttributeValue =\n  | string\n  | number\n  | boolean\n  | Array<null | undefined | string>\n  | Array<null | undefined | number>\n  | Array<null | undefined | boolean>;\n\n/**\n * An interface that enables manual propagation of Spans\n */\nexport interface SpanOptions {\n  /**\n   * Attributes to set on the Span\n   */\n  attributes?: SpanAttributes;\n\n  /** {@link Link}s span to other spans */\n  links?: Link[];\n\n  /**\n   * The type of Span. Default to SpanKind.INTERNAL\n   */\n  kind?: SpanKind;\n\n  /**\n   * A manually specified start time for the created `Span` object.\n   */\n  startTime?: TimeInput;\n}\n\n/**\n * Tracing options to set on an operation.\n */\nexport interface OperationTracingOptions {\n  /**\n   * OpenTelemetry SpanOptions used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n\n  /**\n   * OpenTelemetry context to use for created Spans.\n   */\n  tracingContext?: Context;\n}\n\n/**\n * OpenTelemetry compatible interface for Context\n */\nexport interface Context {\n  /**\n   * Get a value from the context.\n   *\n   * @param key - key which identifies a context value\n   */\n  getValue(key: symbol): unknown;\n  /**\n   * Create a new context which inherits from this context and has\n   * the given key set to the given value.\n   *\n   * @param key - context key for which to set the value\n   * @param value - value to set for the given key\n   */\n  setValue(key: symbol, value: unknown): Context;\n  /**\n   * Return a new context which inherits from this context but does\n   * not contain a value for the given key.\n   *\n   * @param key - context key for which to clear a value\n   */\n  deleteValue(key: symbol): Context;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Tracer } from './tracer';\nimport { TracerProvider } from './tracer_provider';\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nexport class ProxyTracerProvider implements TracerProvider {\n  private _delegate?: TracerProvider;\n\n  /**\n   * Get a {@link ProxyTracer}\n   */\n  getTracer(name: string, version?: string, options?: TracerOptions): Tracer {\n    return (\n      this.getDelegateTracer(name, version, options) ??\n      new ProxyTracer(this, name, version, options)\n    );\n  }\n\n  getDelegate(): TracerProvider {\n    return this._delegate ?? NOOP_TRACER_PROVIDER;\n  }\n\n  /**\n   * Set the delegate tracer provider\n   */\n  setDelegate(delegate: TracerProvider) {\n    this._delegate = delegate;\n  }\n\n  getDelegateTracer(\n    name: string,\n    version?: string,\n    options?: TracerOptions\n  ): Tracer | undefined {\n    return this._delegate?.getTracer(name, version, options);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopTracer } from './NoopTracer';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\nimport { TracerProvider } from './tracer_provider';\n\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nexport class NoopTracerProvider implements TracerProvider {\n  getTracer(\n    _name?: string,\n    _version?: string,\n    _options?: TracerOptions\n  ): Tracer {\n    return new NoopTracer();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport {\n  isSpanContextValid,\n  wrapSpanContext,\n} from '../trace/spancontext-utils';\nimport { Tracer } from '../trace/tracer';\nimport { TracerProvider } from '../trace/tracer_provider';\nimport {\n  deleteSpan,\n  getActiveSpan,\n  getSpan,\n  getSpanContext,\n  setSpan,\n  setSpanContext,\n} from '../trace/context-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'trace';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nexport class TraceAPI {\n  private static _instance?: TraceAPI;\n\n  private _proxyTracerProvider = new ProxyTracerProvider();\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Trace API */\n  public static getInstance(): TraceAPI {\n    if (!this._instance) {\n      this._instance = new TraceAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global tracer.\n   *\n   * @returns true if the tracer provider was successfully registered, else false\n   */\n  public setGlobalTracerProvider(provider: TracerProvider): boolean {\n    const success = registerGlobal(\n      API_NAME,\n      this._proxyTracerProvider,\n      DiagAPI.instance()\n    );\n    if (success) {\n      this._proxyTracerProvider.setDelegate(provider);\n    }\n    return success;\n  }\n\n  /**\n   * Returns the global tracer provider.\n   */\n  public getTracerProvider(): TracerProvider {\n    return getGlobal(API_NAME) || this._proxyTracerProvider;\n  }\n\n  /**\n   * Returns a tracer from the global tracer provider.\n   */\n  public getTracer(name: string, version?: string): Tracer {\n    return this.getTracerProvider().getTracer(name, version);\n  }\n\n  /** Remove the global tracer provider */\n  public disable() {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n    this._proxyTracerProvider = new ProxyTracerProvider();\n  }\n\n  public wrapSpanContext = wrapSpanContext;\n\n  public isSpanContextValid = isSpanContextValid;\n\n  public deleteSpan = deleteSpan;\n\n  public getSpan = getSpan;\n\n  public getActiveSpan = getActiveSpan;\n\n  public getSpanContext = getSpanContext;\n\n  public setSpan = setSpan;\n\n  public setSpanContext = setSpanContext;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport const trace = TraceAPI.getInstance();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport const context = ContextAPI.getInstance();\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestOptionsBase, TransferProgressEvent } from \"./webResource\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { OperationTracingOptions } from \"@azure/core-tracing\";\n\n/**\n * The base options type for all operations.\n */\nexport interface OperationOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: OperationRequestOptions;\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n}\n\n/**\n * Options that allow configuring the handling of HTTP requests made by an SDK operation.\n */\nexport interface OperationRequestOptions {\n  /**\n   * User defined custom request headers that will be applied before the request is sent.\n   */\n  customHeaders?: { [key: string]: string };\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   */\n  timeout?: number;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback which fires upon download progress.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n}\n\n/**\n * Converts an OperationOptions to a RequestOptionsBase\n *\n * @param opts - OperationOptions object to convert to RequestOptionsBase\n */\nexport function operationOptionsToRequestOptionsBase<T extends OperationOptions>(\n  opts: T\n): RequestOptionsBase {\n  const { requestOptions, tracingOptions, ...additionalOptions } = opts;\n\n  let result: RequestOptionsBase = additionalOptions;\n\n  if (requestOptions) {\n    result = { ...result, ...requestOptions };\n  }\n\n  if (tracingOptions) {\n    result.tracingContext = tracingOptions.tracingContext;\n    // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n    result.spanOptions = (tracingOptions as any)?.spanOptions;\n  }\n\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Encodes a string in base64 format.\n * @param value - The string to encode\n */\nexport function encodeString(value: string): string {\n  return Buffer.from(value).toString(\"base64\");\n}\n\n/**\n * Encodes a byte array in base64 format.\n * @param value - The Uint8Aray to encode\n */\nexport function encodeByteArray(value: Uint8Array): string {\n  // Buffer.from accepts <ArrayBuffer> | <SharedArrayBuffer>-- the TypeScript definition is off here\n  // https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n  const bufferValue = value instanceof Buffer ? value : Buffer.from(value.buffer as ArrayBuffer);\n  return bufferValue.toString(\"base64\");\n}\n\n/**\n * Decodes a base64 string into a byte array.\n * @param value - The base64 string to decode\n */\nexport function decodeString(value: string): Uint8Array {\n  return Buffer.from(value, \"base64\");\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\n\nimport * as base64 from \"./util/base64\";\nimport * as utils from \"./util/utils\";\nimport { SerializerOptions, XML_ATTRKEY, XML_CHARKEY } from \"./util/serializer.common\";\n\n// This file contains utility code to serialize and deserialize network operations according to `OperationSpec` objects generated by AutoRest.TypeScript from OpenAPI specifications.\n\n/**\n * Used to map raw response objects to final shapes.\n * Helps packing and unpacking Dates and other encoded types that are not intrinsic to JSON.\n * Also allows pulling values from headers, as well as inserting default values and constants.\n */\nexport class Serializer {\n  constructor(\n    /**\n     * The provided model mapper.\n     */\n    public readonly modelMappers: { [key: string]: any } = {},\n    /**\n     * Whether the contents are XML or not.\n     */\n    public readonly isXML?: boolean\n  ) {}\n\n  /**\n   * Validates constraints, if any. This function will throw if the provided value does not respect those constraints.\n   * @param mapper - The definition of data models.\n   * @param value - The value.\n   * @param objectName - Name of the object. Used in the error messages.\n   * @deprecated Removing the constraints validation on client side.\n   */\n  validateConstraints(mapper: Mapper, value: unknown, objectName: string): void {\n    const failValidation = (\n      constraintName: keyof MapperConstraints,\n      constraintValue: any\n    ): Error => {\n      throw new Error(\n        `\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`\n      );\n    };\n    if (mapper.constraints && value != undefined) {\n      const valueAsNumber = value as number;\n      const {\n        ExclusiveMaximum,\n        ExclusiveMinimum,\n        InclusiveMaximum,\n        InclusiveMinimum,\n        MaxItems,\n        MaxLength,\n        MinItems,\n        MinLength,\n        MultipleOf,\n        Pattern,\n        UniqueItems,\n      } = mapper.constraints;\n      if (ExclusiveMaximum != undefined && valueAsNumber >= ExclusiveMaximum) {\n        failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n      }\n      if (ExclusiveMinimum != undefined && valueAsNumber <= ExclusiveMinimum) {\n        failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n      }\n      if (InclusiveMaximum != undefined && valueAsNumber > InclusiveMaximum) {\n        failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n      }\n      if (InclusiveMinimum != undefined && valueAsNumber < InclusiveMinimum) {\n        failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n      }\n      const valueAsArray = value as any[];\n      if (MaxItems != undefined && valueAsArray.length > MaxItems) {\n        failValidation(\"MaxItems\", MaxItems);\n      }\n      if (MaxLength != undefined && valueAsArray.length > MaxLength) {\n        failValidation(\"MaxLength\", MaxLength);\n      }\n      if (MinItems != undefined && valueAsArray.length < MinItems) {\n        failValidation(\"MinItems\", MinItems);\n      }\n      if (MinLength != undefined && valueAsArray.length < MinLength) {\n        failValidation(\"MinLength\", MinLength);\n      }\n      if (MultipleOf != undefined && valueAsNumber % MultipleOf !== 0) {\n        failValidation(\"MultipleOf\", MultipleOf);\n      }\n      if (Pattern) {\n        const pattern: RegExp = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n        if (typeof value !== \"string\" || value.match(pattern) === null) {\n          failValidation(\"Pattern\", Pattern);\n        }\n      }\n      if (\n        UniqueItems &&\n        valueAsArray.some((item: any, i: number, ar: Array<any>) => ar.indexOf(item) !== i)\n      ) {\n        failValidation(\"UniqueItems\", UniqueItems);\n      }\n    }\n  }\n\n  /**\n   * Serialize the given object based on its metadata defined in the mapper.\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object.\n   * @param object - A valid Javascript object to be serialized.\n   * @param objectName - Name of the serialized object.\n   * @param options - additional options to deserialization.\n   * @returns A valid serialized Javascript object.\n   */\n  serialize(\n    mapper: Mapper,\n    object: unknown,\n    objectName?: string,\n    options: SerializerOptions = {}\n  ): any {\n    const updatedOptions: Required<SerializerOptions> = {\n      rootName: options.rootName ?? \"\",\n      includeRoot: options.includeRoot ?? false,\n      xmlCharKey: options.xmlCharKey ?? XML_CHARKEY,\n    };\n    let payload: any = {};\n    const mapperType = mapper.type.name as string;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n    if (mapperType.match(/^Sequence$/i) !== null) {\n      payload = [];\n    }\n\n    if (mapper.isConstant) {\n      object = mapper.defaultValue;\n    }\n\n    // This table of allowed values should help explain\n    // the mapper.required and mapper.nullable properties.\n    // X means \"neither undefined or null are allowed\".\n    //           || required\n    //           || true      | false\n    //  nullable || ==========================\n    //      true || null      | undefined/null\n    //     false || X         | undefined\n    // undefined || X         | undefined/null\n\n    const { required, nullable } = mapper;\n\n    if (required && nullable && object === undefined) {\n      throw new Error(`${objectName} cannot be undefined.`);\n    }\n    if (required && !nullable && object == undefined) {\n      throw new Error(`${objectName} cannot be null or undefined.`);\n    }\n    if (!required && nullable === false && object === null) {\n      throw new Error(`${objectName} cannot be null.`);\n    }\n\n    if (object == undefined) {\n      payload = object;\n    } else {\n      if (mapperType.match(/^any$/i) !== null) {\n        payload = object;\n      } else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n        payload = serializeBasicTypes(mapperType, objectName, object);\n      } else if (mapperType.match(/^Enum$/i) !== null) {\n        const enumMapper: EnumMapper = mapper as EnumMapper;\n        payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n      } else if (\n        mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null\n      ) {\n        payload = serializeDateTypes(mapperType, object, objectName);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = serializeByteArrayType(objectName, object as Uint8Array);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = serializeBase64UrlType(objectName, object as Uint8Array);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = serializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = serializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions\n        );\n      } else if (mapperType.match(/^Composite$/i) !== null) {\n        payload = serializeCompositeType(\n          this,\n          mapper as CompositeMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions\n        );\n      }\n    }\n    return payload;\n  }\n\n  /**\n   * Deserialize the given object based on its metadata defined in the mapper.\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object.\n   * @param responseBody - A valid Javascript entity to be deserialized.\n   * @param objectName - Name of the deserialized object.\n   * @param options - Controls behavior of XML parser and builder.\n   * @returns A valid deserialized Javascript object.\n   */\n  deserialize(\n    mapper: Mapper,\n    responseBody: unknown,\n    objectName: string,\n    options: SerializerOptions = {}\n  ): any {\n    const updatedOptions: Required<SerializerOptions> = {\n      rootName: options.rootName ?? \"\",\n      includeRoot: options.includeRoot ?? false,\n      xmlCharKey: options.xmlCharKey ?? XML_CHARKEY,\n    };\n    if (responseBody == undefined) {\n      if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n        // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n        // between the list being empty versus being missing,\n        // so let's do the more user-friendly thing and return an empty list.\n        responseBody = [];\n      }\n      // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n      if (mapper.defaultValue !== undefined) {\n        responseBody = mapper.defaultValue;\n      }\n      return responseBody;\n    }\n\n    let payload: any;\n    const mapperType = mapper.type.name;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n\n    if (mapperType.match(/^Composite$/i) !== null) {\n      payload = deserializeCompositeType(\n        this,\n        mapper as CompositeMapper,\n        responseBody,\n        objectName,\n        updatedOptions\n      );\n    } else {\n      if (this.isXML) {\n        const xmlCharKey = updatedOptions.xmlCharKey;\n        const castResponseBody = responseBody as Record<string, unknown>;\n        /**\n         * If the mapper specifies this as a non-composite type value but the responseBody contains\n         * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n         * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n         */\n        if (\n          castResponseBody[XML_ATTRKEY] != undefined &&\n          castResponseBody[xmlCharKey] != undefined\n        ) {\n          responseBody = castResponseBody[xmlCharKey];\n        }\n      }\n\n      if (mapperType.match(/^Number$/i) !== null) {\n        payload = parseFloat(responseBody as string);\n        if (isNaN(payload)) {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^Boolean$/i) !== null) {\n        if (responseBody === \"true\") {\n          payload = true;\n        } else if (responseBody === \"false\") {\n          payload = false;\n        } else {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n        payload = responseBody;\n      } else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n        payload = new Date(responseBody as string);\n      } else if (mapperType.match(/^UnixTime$/i) !== null) {\n        payload = unixTimeToDate(responseBody as number);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = base64.decodeString(responseBody as string);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = base64UrlToByteArray(responseBody as string);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = deserializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          responseBody,\n          objectName,\n          updatedOptions\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = deserializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          responseBody,\n          objectName,\n          updatedOptions\n        );\n      }\n    }\n\n    if (mapper.isConstant) {\n      payload = mapper.defaultValue;\n    }\n\n    return payload;\n  }\n}\n\nfunction trimEnd(str: string, ch: string): string {\n  let len = str.length;\n  while (len - 1 >= 0 && str[len - 1] === ch) {\n    --len;\n  }\n  return str.substr(0, len);\n}\n\nfunction bufferToBase64Url(buffer: any): string | undefined {\n  if (!buffer) {\n    return undefined;\n  }\n  if (!(buffer instanceof Uint8Array)) {\n    throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n  }\n  // Uint8Array to Base64.\n  const str = base64.encodeByteArray(buffer);\n  // Base64 to Base64Url.\n  return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\n\nfunction base64UrlToByteArray(str: string): Uint8Array | undefined {\n  if (!str) {\n    return undefined;\n  }\n  if (str && typeof str.valueOf() !== \"string\") {\n    throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n  }\n  // Base64Url to Base64.\n  str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  // Base64 to Uint8Array.\n  return base64.decodeString(str);\n}\n\nfunction splitSerializeName(prop: string | undefined): string[] {\n  const classes: string[] = [];\n  let partialclass = \"\";\n  if (prop) {\n    const subwords = prop.split(\".\");\n\n    for (const item of subwords) {\n      if (item.charAt(item.length - 1) === \"\\\\\") {\n        partialclass += item.substr(0, item.length - 1) + \".\";\n      } else {\n        partialclass += item;\n        classes.push(partialclass);\n        partialclass = \"\";\n      }\n    }\n  }\n\n  return classes;\n}\n\nfunction dateToUnixTime(d: string | Date): number | undefined {\n  if (!d) {\n    return undefined;\n  }\n\n  if (typeof d.valueOf() === \"string\") {\n    d = new Date(d as string);\n  }\n  return Math.floor((d as Date).getTime() / 1000);\n}\n\nfunction unixTimeToDate(n: number): Date | undefined {\n  if (!n) {\n    return undefined;\n  }\n  return new Date(n * 1000);\n}\n\nfunction serializeBasicTypes(typeName: string, objectName: string, value: any): any {\n  if (value !== null && value !== undefined) {\n    if (typeName.match(/^Number$/i) !== null) {\n      if (typeof value !== \"number\") {\n        throw new Error(`${objectName} with value ${value} must be of type number.`);\n      }\n    } else if (typeName.match(/^String$/i) !== null) {\n      if (typeof value.valueOf() !== \"string\") {\n        throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n      }\n    } else if (typeName.match(/^Uuid$/i) !== null) {\n      if (!(typeof value.valueOf() === \"string\" && utils.isValidUuid(value))) {\n        throw new Error(\n          `${objectName} with value \"${value}\" must be of type string and a valid uuid.`\n        );\n      }\n    } else if (typeName.match(/^Boolean$/i) !== null) {\n      if (typeof value !== \"boolean\") {\n        throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n      }\n    } else if (typeName.match(/^Stream$/i) !== null) {\n      const objectType = typeof value;\n      if (\n        objectType !== \"string\" &&\n        objectType !== \"function\" &&\n        !(value instanceof ArrayBuffer) &&\n        !ArrayBuffer.isView(value) &&\n        !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob)\n      ) {\n        throw new Error(\n          `${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.`\n        );\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction serializeEnumType(objectName: string, allowedValues: Array<any>, value: any): any {\n  if (!allowedValues) {\n    throw new Error(\n      `Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`\n    );\n  }\n  const isPresent = allowedValues.some((item) => {\n    if (typeof item.valueOf() === \"string\") {\n      return item.toLowerCase() === value.toLowerCase();\n    }\n    return item === value;\n  });\n  if (!isPresent) {\n    throw new Error(\n      `${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(\n        allowedValues\n      )}.`\n    );\n  }\n  return value;\n}\n\nfunction serializeByteArrayType(objectName: string, value: Uint8Array): string {\n  let returnValue: string = \"\";\n  if (value != undefined) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    returnValue = base64.encodeByteArray(value);\n  }\n  return returnValue;\n}\n\nfunction serializeBase64UrlType(objectName: string, value: Uint8Array): string {\n  let returnValue: string = \"\";\n  if (value != undefined) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    returnValue = bufferToBase64Url(value) || \"\";\n  }\n  return returnValue;\n}\n\nfunction serializeDateTypes(typeName: string, value: any, objectName: string): any {\n  if (value != undefined) {\n    if (typeName.match(/^Date$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value =\n        value instanceof Date\n          ? value.toISOString().substring(0, 10)\n          : new Date(value).toISOString().substring(0, 10);\n    } else if (typeName.match(/^DateTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n    } else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n      }\n      value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n    } else if (typeName.match(/^UnixTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(\n          `${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n            `for it to be serialized in UnixTime/Epoch format.`\n        );\n      }\n      value = dateToUnixTime(value);\n    } else if (typeName.match(/^TimeSpan$/i) !== null) {\n      if (!utils.isDuration(value)) {\n        throw new Error(\n          `${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`\n        );\n      }\n    }\n  }\n  return value;\n}\n\nfunction serializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: Required<SerializerOptions>\n): any[] {\n  if (!Array.isArray(object)) {\n    throw new Error(`${objectName} must be of type Array.`);\n  }\n  const elementType = mapper.type.element;\n  if (!elementType || typeof elementType !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`\n    );\n  }\n  const tempArray = [];\n  for (let i = 0; i < object.length; i++) {\n    const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n\n    if (isXml && elementType.xmlNamespace) {\n      const xmlnsKey = elementType.xmlNamespacePrefix\n        ? `xmlns:${elementType.xmlNamespacePrefix}`\n        : \"xmlns\";\n      if (elementType.type.name === \"Composite\") {\n        tempArray[i] = { ...serializedValue };\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      } else {\n        tempArray[i] = {};\n        tempArray[i][options.xmlCharKey] = serializedValue;\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      }\n    } else {\n      tempArray[i] = serializedValue;\n    }\n  }\n  return tempArray;\n}\n\nfunction serializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: Required<SerializerOptions>\n): { [key: string]: any } {\n  if (typeof object !== \"object\") {\n    throw new Error(`${objectName} must be of type object.`);\n  }\n  const valueType = mapper.type.value;\n  if (!valueType || typeof valueType !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`\n    );\n  }\n  const tempDictionary: { [key: string]: any } = {};\n  for (const key of Object.keys(object)) {\n    const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n    // If the element needs an XML namespace we need to add it within the $ property\n    tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n  }\n\n  // Add the namespace to the root element if needed\n  if (isXml && mapper.xmlNamespace) {\n    const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n\n    const result = tempDictionary;\n    result[XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n    return result;\n  }\n\n  return tempDictionary;\n}\n\n/**\n * Resolves the additionalProperties property from a referenced mapper.\n * @param serializer - The serializer containing the entire set of mappers.\n * @param mapper - The composite mapper to resolve.\n * @param objectName - Name of the object being serialized.\n */\nfunction resolveAdditionalProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string\n): SequenceMapper | BaseMapper | CompositeMapper | DictionaryMapper | EnumMapper | undefined {\n  const additionalProperties = mapper.type.additionalProperties;\n\n  if (!additionalProperties && mapper.type.className) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    return modelMapper?.type.additionalProperties;\n  }\n\n  return additionalProperties;\n}\n\n/**\n * Finds the mapper referenced by `className`.\n * @param serializer - The serializer containing the entire set of mappers\n * @param mapper - The composite mapper to resolve\n * @param objectName - Name of the object being serialized\n */\nfunction resolveReferencedMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string\n): CompositeMapper | undefined {\n  const className = mapper.type.className;\n  if (!className) {\n    throw new Error(\n      `Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(\n        mapper,\n        undefined,\n        2\n      )}\".`\n    );\n  }\n\n  return serializer.modelMappers[className];\n}\n\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - The serializer containing the entire set of mappers\n * @param mapper - The composite mapper to resolve\n */\nfunction resolveModelProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string\n): { [propertyName: string]: Mapper } {\n  let modelProps = mapper.type.modelProperties;\n  if (!modelProps) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    if (!modelMapper) {\n      throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n    }\n    modelProps = modelMapper?.type.modelProperties;\n    if (!modelProps) {\n      throw new Error(\n        `modelProperties cannot be null or undefined in the ` +\n          `mapper \"${JSON.stringify(modelMapper)}\" of type \"${\n            mapper.type.className\n          }\" for object \"${objectName}\".`\n      );\n    }\n  }\n\n  return modelProps;\n}\n\nfunction serializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: Required<SerializerOptions>\n): any {\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n  }\n\n  if (object != undefined) {\n    const payload: any = {};\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    for (const key of Object.keys(modelProps)) {\n      const propertyMapper = modelProps[key];\n      if (propertyMapper.readOnly) {\n        continue;\n      }\n\n      let propName: string | undefined;\n      let parentObject: any = payload;\n      if (serializer.isXML) {\n        if (propertyMapper.xmlIsWrapped) {\n          propName = propertyMapper.xmlName;\n        } else {\n          propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n        }\n      } else {\n        const paths = splitSerializeName(propertyMapper.serializedName!);\n        propName = paths.pop();\n\n        for (const pathName of paths) {\n          const childObject = parentObject[pathName];\n          if (\n            childObject == undefined &&\n            (object[key] != undefined || propertyMapper.defaultValue !== undefined)\n          ) {\n            parentObject[pathName] = {};\n          }\n          parentObject = parentObject[pathName];\n        }\n      }\n\n      if (parentObject != undefined) {\n        if (isXml && mapper.xmlNamespace) {\n          const xmlnsKey = mapper.xmlNamespacePrefix\n            ? `xmlns:${mapper.xmlNamespacePrefix}`\n            : \"xmlns\";\n          parentObject[XML_ATTRKEY] = {\n            ...parentObject[XML_ATTRKEY],\n            [xmlnsKey]: mapper.xmlNamespace,\n          };\n        }\n        const propertyObjectName =\n          propertyMapper.serializedName !== \"\"\n            ? objectName + \".\" + propertyMapper.serializedName\n            : objectName;\n\n        let toSerialize = object[key];\n        const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n        if (\n          polymorphicDiscriminator &&\n          polymorphicDiscriminator.clientName === key &&\n          toSerialize == undefined\n        ) {\n          toSerialize = mapper.serializedName;\n        }\n\n        const serializedValue = serializer.serialize(\n          propertyMapper,\n          toSerialize,\n          propertyObjectName,\n          options\n        );\n\n        if (serializedValue !== undefined && propName != undefined) {\n          const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n          if (isXml && propertyMapper.xmlIsAttribute) {\n            // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n            // This keeps things simple while preventing name collision\n            // with names in user documents.\n            parentObject[XML_ATTRKEY] = parentObject[XML_ATTRKEY] || {};\n            parentObject[XML_ATTRKEY][propName] = serializedValue;\n          } else if (isXml && propertyMapper.xmlIsWrapped) {\n            parentObject[propName] = { [propertyMapper.xmlElementName!]: value };\n          } else {\n            parentObject[propName] = value;\n          }\n        }\n      }\n    }\n\n    const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n    if (additionalPropertiesMapper) {\n      const propNames = Object.keys(modelProps);\n      for (const clientPropName in object) {\n        const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n        if (isAdditionalProperty) {\n          payload[clientPropName] = serializer.serialize(\n            additionalPropertiesMapper,\n            object[clientPropName],\n            objectName + '[\"' + clientPropName + '\"]',\n            options\n          );\n        }\n      }\n    }\n\n    return payload;\n  }\n  return object;\n}\n\nfunction getXmlObjectValue(\n  propertyMapper: Mapper,\n  serializedValue: any,\n  isXml: boolean,\n  options: Required<SerializerOptions>\n): any {\n  if (!isXml || !propertyMapper.xmlNamespace) {\n    return serializedValue;\n  }\n\n  const xmlnsKey = propertyMapper.xmlNamespacePrefix\n    ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n    : \"xmlns\";\n  const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n\n  if ([\"Composite\"].includes(propertyMapper.type.name)) {\n    if (serializedValue[XML_ATTRKEY]) {\n      return serializedValue;\n    } else {\n      const result: any = { ...serializedValue };\n      result[XML_ATTRKEY] = xmlNamespace;\n      return result;\n    }\n  }\n  const result: any = {};\n  result[options.xmlCharKey] = serializedValue;\n  result[XML_ATTRKEY] = xmlNamespace;\n  return result;\n}\n\nfunction isSpecialXmlProperty(propertyName: string, options: Required<SerializerOptions>): boolean {\n  return [XML_ATTRKEY, options.xmlCharKey].includes(propertyName);\n}\n\nfunction deserializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  responseBody: any,\n  objectName: string,\n  options: Required<SerializerOptions>\n): any {\n  const xmlCharKey = options.xmlCharKey ?? XML_CHARKEY;\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n  }\n\n  const modelProps = resolveModelProperties(serializer, mapper, objectName);\n  let instance: { [key: string]: any } = {};\n  const handledPropertyNames: string[] = [];\n\n  for (const key of Object.keys(modelProps)) {\n    const propertyMapper = modelProps[key];\n    const paths = splitSerializeName(modelProps[key].serializedName!);\n    handledPropertyNames.push(paths[0]);\n    const { serializedName, xmlName, xmlElementName } = propertyMapper;\n    let propertyObjectName = objectName;\n    if (serializedName !== \"\" && serializedName !== undefined) {\n      propertyObjectName = objectName + \".\" + serializedName;\n    }\n\n    const headerCollectionPrefix = (propertyMapper as DictionaryMapper).headerCollectionPrefix;\n    if (headerCollectionPrefix) {\n      const dictionary: any = {};\n      for (const headerKey of Object.keys(responseBody)) {\n        if (headerKey.startsWith(headerCollectionPrefix)) {\n          dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(\n            (propertyMapper as DictionaryMapper).type.value,\n            responseBody[headerKey],\n            propertyObjectName,\n            options\n          );\n        }\n\n        handledPropertyNames.push(headerKey);\n      }\n      instance[key] = dictionary;\n    } else if (serializer.isXML) {\n      if (propertyMapper.xmlIsAttribute && responseBody[XML_ATTRKEY]) {\n        instance[key] = serializer.deserialize(\n          propertyMapper,\n          responseBody[XML_ATTRKEY][xmlName!],\n          propertyObjectName,\n          options\n        );\n      } else if (propertyMapper.xmlIsMsText) {\n        if (responseBody[xmlCharKey] !== undefined) {\n          instance[key] = responseBody[xmlCharKey];\n        } else if (typeof responseBody === \"string\") {\n          // The special case where xml parser parses \"<Name>content</Name>\" into JSON of\n          //   `{ name: \"content\"}` instead of `{ name: { \"_\": \"content\" }}`\n          instance[key] = responseBody;\n        }\n      } else {\n        const propertyName = xmlElementName || xmlName || serializedName;\n        if (propertyMapper.xmlIsWrapped) {\n          /* a list of <xmlElementName> wrapped by <xmlName>\n            For the xml example below\n              <Cors>\n                <CorsRule>...</CorsRule>\n                <CorsRule>...</CorsRule>\n              </Cors>\n            the responseBody has\n              {\n                Cors: {\n                  CorsRule: [{...}, {...}]\n                }\n              }\n            xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n          */\n          const wrapped = responseBody[xmlName!];\n          const elementList = wrapped?.[xmlElementName!] ?? [];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            elementList,\n            propertyObjectName,\n            options\n          );\n        } else {\n          const property = responseBody[propertyName!];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            property,\n            propertyObjectName,\n            options\n          );\n        }\n      }\n    } else {\n      // deserialize the property if it is present in the provided responseBody instance\n      let propertyInstance;\n      let res = responseBody;\n      // traversing the object step by step.\n      for (const item of paths) {\n        if (!res) break;\n        res = res[item];\n      }\n      propertyInstance = res;\n      const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n      // checking that the model property name (key)(ex: \"fishtype\") and the\n      // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n      // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n      // is a better approach. The generator is not consistent with escaping '\\.' in the\n      // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n      // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n      // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n      // the transformation of model property name (ex: \"fishtype\") is done consistently.\n      // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n      if (\n        polymorphicDiscriminator &&\n        key === polymorphicDiscriminator.clientName &&\n        propertyInstance == undefined\n      ) {\n        propertyInstance = mapper.serializedName;\n      }\n\n      let serializedValue;\n      // paging\n      if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n        propertyInstance = responseBody[key];\n        const arrayInstance = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options\n        );\n        // Copy over any properties that have already been added into the instance, where they do\n        // not exist on the newly de-serialized array\n        for (const [k, v] of Object.entries(instance)) {\n          if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n            arrayInstance[k] = v;\n          }\n        }\n        instance = arrayInstance;\n      } else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n        serializedValue = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options\n        );\n        instance[key] = serializedValue;\n      }\n    }\n  }\n\n  const additionalPropertiesMapper = mapper.type.additionalProperties;\n  if (additionalPropertiesMapper) {\n    const isAdditionalProperty = (responsePropName: string): boolean => {\n      for (const clientPropName in modelProps) {\n        const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n        if (paths[0] === responsePropName) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    for (const responsePropName in responseBody) {\n      if (isAdditionalProperty(responsePropName)) {\n        instance[responsePropName] = serializer.deserialize(\n          additionalPropertiesMapper,\n          responseBody[responsePropName],\n          objectName + '[\"' + responsePropName + '\"]',\n          options\n        );\n      }\n    }\n  } else if (responseBody) {\n    for (const key of Object.keys(responseBody)) {\n      if (\n        instance[key] === undefined &&\n        !handledPropertyNames.includes(key) &&\n        !isSpecialXmlProperty(key, options)\n      ) {\n        instance[key] = responseBody[key];\n      }\n    }\n  }\n\n  return instance;\n}\n\nfunction deserializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  responseBody: any,\n  objectName: string,\n  options: Required<SerializerOptions>\n): { [key: string]: any } {\n  const value = mapper.type.value;\n  if (!value || typeof value !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`\n    );\n  }\n  if (responseBody) {\n    const tempDictionary: { [key: string]: any } = {};\n    for (const key of Object.keys(responseBody)) {\n      tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n    }\n    return tempDictionary;\n  }\n  return responseBody;\n}\n\nfunction deserializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  responseBody: any,\n  objectName: string,\n  options: Required<SerializerOptions>\n): any[] {\n  const element = mapper.type.element;\n  if (!element || typeof element !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`\n    );\n  }\n  if (responseBody) {\n    if (!Array.isArray(responseBody)) {\n      // xml2js will interpret a single element array as just the element, so force it to be an array\n      responseBody = [responseBody];\n    }\n\n    const tempArray = [];\n    for (let i = 0; i < responseBody.length; i++) {\n      tempArray[i] = serializer.deserialize(\n        element,\n        responseBody[i],\n        `${objectName}[${i}]`,\n        options\n      );\n    }\n    return tempArray;\n  }\n  return responseBody;\n}\n\nfunction getPolymorphicMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  polymorphicPropertyName: \"clientName\" | \"serializedName\"\n): CompositeMapper {\n  const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n  if (polymorphicDiscriminator) {\n    const discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n    if (discriminatorName != undefined) {\n      const discriminatorValue = object[discriminatorName];\n      if (discriminatorValue != undefined) {\n        const typeName = mapper.type.uberParent || mapper.type.className;\n        const indexDiscriminator =\n          discriminatorValue === typeName\n            ? discriminatorValue\n            : typeName + \".\" + discriminatorValue;\n        const polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];\n        if (polymorphicMapper) {\n          mapper = polymorphicMapper;\n        }\n      }\n    }\n  }\n  return mapper;\n}\n\nfunction getPolymorphicDiscriminatorRecursively(\n  serializer: Serializer,\n  mapper: CompositeMapper\n): PolymorphicDiscriminator | undefined {\n  return (\n    mapper.type.polymorphicDiscriminator ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.className)\n  );\n}\n\nfunction getPolymorphicDiscriminatorSafely(serializer: Serializer, typeName?: string): any {\n  return (\n    typeName &&\n    serializer.modelMappers[typeName] &&\n    serializer.modelMappers[typeName].type.polymorphicDiscriminator\n  );\n}\n\n/**\n * Description of various value constraints such as integer ranges and string regex.\n */\nexport interface MapperConstraints {\n  /**\n   * The value should be less than or equal to the `InclusiveMaximum` value.\n   */\n  InclusiveMaximum?: number;\n  /**\n   * The value should be less than the `ExclusiveMaximum` value.\n   */\n  ExclusiveMaximum?: number;\n  /**\n   * The value should be greater than or equal to the `InclusiveMinimum` value.\n   */\n  InclusiveMinimum?: number;\n  /**\n   * The value should be greater than the `InclusiveMinimum` value.\n   */\n  ExclusiveMinimum?: number;\n  /**\n   * The length should be smaller than the `MaxLength`.\n   */\n  MaxLength?: number;\n  /**\n   * The length should be bigger than the `MinLength`.\n   */\n  MinLength?: number;\n  /**\n   * The value must match the pattern.\n   */\n  Pattern?: RegExp;\n  /**\n   * The value must contain fewer items than the MaxItems value.\n   */\n  MaxItems?: number;\n  /**\n   * The value must contain more items than the `MinItems` value.\n   */\n  MinItems?: number;\n  /**\n   * The value must contain only unique items.\n   */\n  UniqueItems?: true;\n  /**\n   * The value should be exactly divisible by the `MultipleOf` value.\n   */\n  MultipleOf?: number;\n}\n\n/**\n * Type of the mapper. Includes known mappers.\n */\nexport type MapperType =\n  | SimpleMapperType\n  | CompositeMapperType\n  | SequenceMapperType\n  | DictionaryMapperType\n  | EnumMapperType;\n\n/**\n * The type of a simple mapper.\n */\nexport interface SimpleMapperType {\n  /**\n   * Name of the type of the property.\n   */\n  name:\n    | \"Base64Url\"\n    | \"Boolean\"\n    | \"ByteArray\"\n    | \"Date\"\n    | \"DateTime\"\n    | \"DateTimeRfc1123\"\n    | \"Object\"\n    | \"Stream\"\n    | \"String\"\n    | \"TimeSpan\"\n    | \"UnixTime\"\n    | \"Uuid\"\n    | \"Number\"\n    | \"any\";\n}\n\n/**\n * Helps build a mapper that describes how to map a set of properties of an object based on other mappers.\n *\n * Only one of the following properties should be present: `className`, `modelProperties` and `additionalProperties`.\n */\nexport interface CompositeMapperType {\n  /**\n   * Name of the composite mapper type.\n   */\n  name: \"Composite\";\n\n  /**\n   * Use `className` to reference another type definition.\n   */\n  className?: string;\n\n  /**\n   * Use `modelProperties` when the reference to the other type has been resolved.\n   */\n  modelProperties?: { [propertyName: string]: Mapper };\n\n  /**\n   * Used when a model has `additionalProperties: true`. Allows the generic processing of unnamed model properties on the response object.\n   */\n  additionalProperties?: Mapper;\n\n  /**\n   * The name of the top-most parent scheme, the one that has no parents.\n   */\n  uberParent?: string;\n\n  /**\n   * A polymorphic discriminator.\n   */\n  polymorphicDiscriminator?: PolymorphicDiscriminator;\n}\n\n/**\n * Helps build a mapper that describes how to parse a sequence of mapped values.\n */\nexport interface SequenceMapperType {\n  /**\n   * Name of the sequence type mapper.\n   */\n  name: \"Sequence\";\n  /**\n   * The mapper to use to map each one of the properties of the sequence.\n   */\n  element: Mapper;\n}\n\n/**\n * Helps build a mapper that describes how to parse a dictionary of mapped values.\n */\nexport interface DictionaryMapperType {\n  /**\n   * Name of the sequence type mapper.\n   */\n  name: \"Dictionary\";\n  /**\n   * The mapper to use to map the value of each property in the dictionary.\n   */\n  value: Mapper;\n}\n\n/**\n * Helps build a mapper that describes how to parse an enum value.\n */\nexport interface EnumMapperType {\n  /**\n   * Name of the enum type mapper.\n   */\n  name: \"Enum\";\n  /**\n   * Values allowed by this mapper.\n   */\n  allowedValues: any[];\n}\n\n/**\n * The base definition of a mapper. Can be used for XML and plain JavaScript objects.\n */\nexport interface BaseMapper {\n  /**\n   * Name for the xml element\n   */\n  xmlName?: string;\n  /**\n   * Xml element namespace\n   */\n  xmlNamespace?: string;\n  /**\n   * Xml element namespace prefix\n   */\n  xmlNamespacePrefix?: string;\n  /**\n   * Determines if the current property should be serialized as an attribute of the parent xml element\n   */\n  xmlIsAttribute?: boolean;\n  /**\n   * Determines if the current property should be serialized as the inner content of the xml element\n   */\n  xmlIsMsText?: boolean;\n  /**\n   * Name for the xml elements when serializing an array\n   */\n  xmlElementName?: string;\n  /**\n   * Whether or not the current property should have a wrapping XML element\n   */\n  xmlIsWrapped?: boolean;\n  /**\n   * Whether or not the current property is readonly\n   */\n  readOnly?: boolean;\n  /**\n   * Whether or not the current property is a constant\n   */\n  isConstant?: boolean;\n  /**\n   * Whether or not the current property is required\n   */\n  required?: boolean;\n  /**\n   * Whether or not the current property allows mull as a value\n   */\n  nullable?: boolean;\n  /**\n   * The name to use when serializing\n   */\n  serializedName?: string;\n  /**\n   * Type of the mapper\n   */\n  type: MapperType;\n  /**\n   * Default value when one is not explicitly provided\n   */\n  defaultValue?: any;\n  /**\n   * Constraints to test the current value against\n   */\n  constraints?: MapperConstraints;\n}\n\n/**\n * Mappers are definitions of the data models used in the library.\n * These data models are part of the Operation or Client definitions in the responses or parameters.\n */\nexport type Mapper = BaseMapper | CompositeMapper | SequenceMapper | DictionaryMapper | EnumMapper;\n\n/**\n * Used to disambiguate discriminated type unions.\n * For example, if response can have many shapes but also includes a 'kind' field (or similar),\n * that field can be used to determine how to deserialize the response to the correct type.\n */\nexport interface PolymorphicDiscriminator {\n  /**\n   * Name of the discriminant property in the original JSON payload, e.g. `@odata.kind`.\n   */\n  serializedName: string;\n  /**\n   * Name to use on the resulting object instead of the original property name.\n   * Useful since the JSON property could be difficult to work with.\n   * For example: For a field received as `@odata.kind`, the final object could instead include a property simply named `kind`.\n   */\n  clientName: string;\n  /**\n   * It may contain any other property.\n   */\n  [key: string]: string;\n}\n\n/**\n * A mapper composed of other mappers.\n */\nexport interface CompositeMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `CompositeMapper`.\n   */\n  type: CompositeMapperType;\n}\n\n/**\n * A mapper describing arrays.\n */\nexport interface SequenceMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `SequenceMapper`.\n   */\n  type: SequenceMapperType;\n}\n\n/**\n * A mapper describing plain JavaScript objects used as key/value pairs.\n */\nexport interface DictionaryMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `DictionaryMapper`.\n   */\n  type: DictionaryMapperType;\n  /**\n   * Optionally, a prefix to add to the header collection.\n   */\n  headerCollectionPrefix?: string;\n}\n\n/**\n * A mapper describing an enum value.\n */\nexport interface EnumMapper extends BaseMapper {\n  /**\n   * The type descriptor of the `EnumMapper`.\n   */\n  type: EnumMapperType;\n}\n\n/**\n * An interface representing an URL parameter value.\n */\nexport interface UrlParameterValue {\n  /**\n   * The URL value.\n   */\n  value: string;\n  /**\n   * Whether to keep or skip URL encoding.\n   */\n  skipUrlEncoding: boolean;\n}\n\n/**\n * Utility function that serializes an object that might contain binary information into a plain object, array or a string.\n */\nexport function serializeObject(toSerialize: unknown): any {\n  const castToSerialize = toSerialize as Record<string, unknown>;\n  if (toSerialize == undefined) return undefined;\n  if (toSerialize instanceof Uint8Array) {\n    toSerialize = base64.encodeByteArray(toSerialize);\n    return toSerialize;\n  } else if (toSerialize instanceof Date) {\n    return toSerialize.toISOString();\n  } else if (Array.isArray(toSerialize)) {\n    const array = [];\n    for (let i = 0; i < toSerialize.length; i++) {\n      array.push(serializeObject(toSerialize[i]));\n    }\n    return array;\n  } else if (typeof toSerialize === \"object\") {\n    const dictionary: { [key: string]: any } = {};\n    for (const property in toSerialize) {\n      dictionary[property] = serializeObject(castToSerialize[property]);\n    }\n    return dictionary;\n  }\n  return toSerialize;\n}\n\n/**\n * Utility function to create a K:V from a list of strings\n */\nfunction strEnum<T extends string>(o: Array<T>): { [K in T]: K } {\n  const result: any = {};\n  for (const key of o) {\n    result[key] = key;\n  }\n  return result;\n}\n\n/**\n * String enum containing the string types of property mappers.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const MapperType = strEnum([\n  \"Base64Url\",\n  \"Boolean\",\n  \"ByteArray\",\n  \"Composite\",\n  \"Date\",\n  \"DateTime\",\n  \"DateTimeRfc1123\",\n  \"Dictionary\",\n  \"Enum\",\n  \"Number\",\n  \"Object\",\n  \"Sequence\",\n  \"String\",\n  \"Stream\",\n  \"TimeSpan\",\n  \"UnixTime\",\n]);\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const BlobServiceProperties: coreHttp.CompositeMapper = {\n  serializedName: \"BlobServiceProperties\",\n  xmlName: \"StorageServiceProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobServiceProperties\",\n    modelProperties: {\n      blobAnalyticsLogging: {\n        serializedName: \"Logging\",\n        xmlName: \"Logging\",\n        type: {\n          name: \"Composite\",\n          className: \"Logging\"\n        }\n      },\n      hourMetrics: {\n        serializedName: \"HourMetrics\",\n        xmlName: \"HourMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      minuteMetrics: {\n        serializedName: \"MinuteMetrics\",\n        xmlName: \"MinuteMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      cors: {\n        serializedName: \"Cors\",\n        xmlName: \"Cors\",\n        xmlIsWrapped: true,\n        xmlElementName: \"CorsRule\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CorsRule\"\n            }\n          }\n        }\n      },\n      defaultServiceVersion: {\n        serializedName: \"DefaultServiceVersion\",\n        xmlName: \"DefaultServiceVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleteRetentionPolicy: {\n        serializedName: \"DeleteRetentionPolicy\",\n        xmlName: \"DeleteRetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      },\n      staticWebsite: {\n        serializedName: \"StaticWebsite\",\n        xmlName: \"StaticWebsite\",\n        type: {\n          name: \"Composite\",\n          className: \"StaticWebsite\"\n        }\n      }\n    }\n  }\n};\n\nexport const Logging: coreHttp.CompositeMapper = {\n  serializedName: \"Logging\",\n  type: {\n    name: \"Composite\",\n    className: \"Logging\",\n    modelProperties: {\n      version: {\n        serializedName: \"Version\",\n        required: true,\n        xmlName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleteProperty: {\n        serializedName: \"Delete\",\n        required: true,\n        xmlName: \"Delete\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      read: {\n        serializedName: \"Read\",\n        required: true,\n        xmlName: \"Read\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      write: {\n        serializedName: \"Write\",\n        required: true,\n        xmlName: \"Write\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionPolicy: {\n        serializedName: \"RetentionPolicy\",\n        xmlName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const RetentionPolicy: coreHttp.CompositeMapper = {\n  serializedName: \"RetentionPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"RetentionPolicy\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      days: {\n        constraints: {\n          InclusiveMinimum: 1\n        },\n        serializedName: \"Days\",\n        xmlName: \"Days\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Metrics: coreHttp.CompositeMapper = {\n  serializedName: \"Metrics\",\n  type: {\n    name: \"Composite\",\n    className: \"Metrics\",\n    modelProperties: {\n      version: {\n        serializedName: \"Version\",\n        xmlName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      includeAPIs: {\n        serializedName: \"IncludeAPIs\",\n        xmlName: \"IncludeAPIs\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionPolicy: {\n        serializedName: \"RetentionPolicy\",\n        xmlName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const CorsRule: coreHttp.CompositeMapper = {\n  serializedName: \"CorsRule\",\n  type: {\n    name: \"Composite\",\n    className: \"CorsRule\",\n    modelProperties: {\n      allowedOrigins: {\n        serializedName: \"AllowedOrigins\",\n        required: true,\n        xmlName: \"AllowedOrigins\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedMethods: {\n        serializedName: \"AllowedMethods\",\n        required: true,\n        xmlName: \"AllowedMethods\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedHeaders: {\n        serializedName: \"AllowedHeaders\",\n        required: true,\n        xmlName: \"AllowedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exposedHeaders: {\n        serializedName: \"ExposedHeaders\",\n        required: true,\n        xmlName: \"ExposedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxAgeInSeconds: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"MaxAgeInSeconds\",\n        required: true,\n        xmlName: \"MaxAgeInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const StaticWebsite: coreHttp.CompositeMapper = {\n  serializedName: \"StaticWebsite\",\n  type: {\n    name: \"Composite\",\n    className: \"StaticWebsite\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      indexDocument: {\n        serializedName: \"IndexDocument\",\n        xmlName: \"IndexDocument\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorDocument404Path: {\n        serializedName: \"ErrorDocument404Path\",\n        xmlName: \"ErrorDocument404Path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultIndexDocumentPath: {\n        serializedName: \"DefaultIndexDocumentPath\",\n        xmlName: \"DefaultIndexDocumentPath\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageError: coreHttp.CompositeMapper = {\n  serializedName: \"StorageError\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageError\",\n    modelProperties: {\n      message: {\n        serializedName: \"Message\",\n        xmlName: \"Message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"Code\",\n        xmlName: \"Code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobServiceStatistics: coreHttp.CompositeMapper = {\n  serializedName: \"BlobServiceStatistics\",\n  xmlName: \"StorageServiceStats\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobServiceStatistics\",\n    modelProperties: {\n      geoReplication: {\n        serializedName: \"GeoReplication\",\n        xmlName: \"GeoReplication\",\n        type: {\n          name: \"Composite\",\n          className: \"GeoReplication\"\n        }\n      }\n    }\n  }\n};\n\nexport const GeoReplication: coreHttp.CompositeMapper = {\n  serializedName: \"GeoReplication\",\n  type: {\n    name: \"Composite\",\n    className: \"GeoReplication\",\n    modelProperties: {\n      status: {\n        serializedName: \"Status\",\n        required: true,\n        xmlName: \"Status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"live\", \"bootstrap\", \"unavailable\"]\n        }\n      },\n      lastSyncOn: {\n        serializedName: \"LastSyncTime\",\n        required: true,\n        xmlName: \"LastSyncTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListContainersSegmentResponse: coreHttp.CompositeMapper = {\n  serializedName: \"ListContainersSegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListContainersSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxPageSize: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      containerItems: {\n        serializedName: \"ContainerItems\",\n        required: true,\n        xmlName: \"Containers\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Container\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerItem\"\n            }\n          }\n        }\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerItem: coreHttp.CompositeMapper = {\n  serializedName: \"ContainerItem\",\n  xmlName: \"Container\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleted: {\n        serializedName: \"Deleted\",\n        xmlName: \"Deleted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      version: {\n        serializedName: \"Version\",\n        xmlName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerProperties\"\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        xmlName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerProperties: coreHttp.CompositeMapper = {\n  serializedName: \"ContainerProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerProperties\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"Last-Modified\",\n        required: true,\n        xmlName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"Etag\",\n        required: true,\n        xmlName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseStatus: {\n        serializedName: \"LeaseStatus\",\n        xmlName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"LeaseState\",\n        xmlName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseDuration: {\n        serializedName: \"LeaseDuration\",\n        xmlName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      publicAccess: {\n        serializedName: \"PublicAccess\",\n        xmlName: \"PublicAccess\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"container\", \"blob\"]\n        }\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"HasImmutabilityPolicy\",\n        xmlName: \"HasImmutabilityPolicy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hasLegalHold: {\n        serializedName: \"HasLegalHold\",\n        xmlName: \"HasLegalHold\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      defaultEncryptionScope: {\n        serializedName: \"DefaultEncryptionScope\",\n        xmlName: \"DefaultEncryptionScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      preventEncryptionScopeOverride: {\n        serializedName: \"DenyEncryptionScopeOverride\",\n        xmlName: \"DenyEncryptionScopeOverride\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      deletedOn: {\n        serializedName: \"DeletedTime\",\n        xmlName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      remainingRetentionDays: {\n        serializedName: \"RemainingRetentionDays\",\n        xmlName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isImmutableStorageWithVersioningEnabled: {\n        serializedName: \"ImmutableStorageWithVersioningEnabled\",\n        xmlName: \"ImmutableStorageWithVersioningEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyInfo: coreHttp.CompositeMapper = {\n  serializedName: \"KeyInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"KeyInfo\",\n    modelProperties: {\n      startsOn: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresOn: {\n        serializedName: \"Expiry\",\n        required: true,\n        xmlName: \"Expiry\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserDelegationKey: coreHttp.CompositeMapper = {\n  serializedName: \"UserDelegationKey\",\n  type: {\n    name: \"Composite\",\n    className: \"UserDelegationKey\",\n    modelProperties: {\n      signedObjectId: {\n        serializedName: \"SignedOid\",\n        required: true,\n        xmlName: \"SignedOid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedTenantId: {\n        serializedName: \"SignedTid\",\n        required: true,\n        xmlName: \"SignedTid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedStartsOn: {\n        serializedName: \"SignedStart\",\n        required: true,\n        xmlName: \"SignedStart\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedExpiresOn: {\n        serializedName: \"SignedExpiry\",\n        required: true,\n        xmlName: \"SignedExpiry\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedService: {\n        serializedName: \"SignedService\",\n        required: true,\n        xmlName: \"SignedService\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedVersion: {\n        serializedName: \"SignedVersion\",\n        required: true,\n        xmlName: \"SignedVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"Value\",\n        required: true,\n        xmlName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FilterBlobSegment: coreHttp.CompositeMapper = {\n  serializedName: \"FilterBlobSegment\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"FilterBlobSegment\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      where: {\n        serializedName: \"Where\",\n        required: true,\n        xmlName: \"Where\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobs: {\n        serializedName: \"Blobs\",\n        required: true,\n        xmlName: \"Blobs\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Blob\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FilterBlobItem\"\n            }\n          }\n        }\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FilterBlobItem: coreHttp.CompositeMapper = {\n  serializedName: \"FilterBlobItem\",\n  xmlName: \"Blob\",\n  type: {\n    name: \"Composite\",\n    className: \"FilterBlobItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        serializedName: \"ContainerName\",\n        required: true,\n        xmlName: \"ContainerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"Tags\",\n        xmlName: \"Tags\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobTags\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobTags: coreHttp.CompositeMapper = {\n  serializedName: \"BlobTags\",\n  xmlName: \"Tags\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobTags\",\n    modelProperties: {\n      blobTagSet: {\n        serializedName: \"BlobTagSet\",\n        required: true,\n        xmlName: \"TagSet\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Tag\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobTag\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlobTag: coreHttp.CompositeMapper = {\n  serializedName: \"BlobTag\",\n  xmlName: \"Tag\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobTag\",\n    modelProperties: {\n      key: {\n        serializedName: \"Key\",\n        required: true,\n        xmlName: \"Key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"Value\",\n        required: true,\n        xmlName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SignedIdentifier: coreHttp.CompositeMapper = {\n  serializedName: \"SignedIdentifier\",\n  xmlName: \"SignedIdentifier\",\n  type: {\n    name: \"Composite\",\n    className: \"SignedIdentifier\",\n    modelProperties: {\n      id: {\n        serializedName: \"Id\",\n        required: true,\n        xmlName: \"Id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessPolicy: {\n        serializedName: \"AccessPolicy\",\n        xmlName: \"AccessPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AccessPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const AccessPolicy: coreHttp.CompositeMapper = {\n  serializedName: \"AccessPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"AccessPolicy\",\n    modelProperties: {\n      startsOn: {\n        serializedName: \"Start\",\n        xmlName: \"Start\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresOn: {\n        serializedName: \"Expiry\",\n        xmlName: \"Expiry\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        serializedName: \"Permission\",\n        xmlName: \"Permission\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListBlobsFlatSegmentResponse: coreHttp.CompositeMapper = {\n  serializedName: \"ListBlobsFlatSegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsFlatSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        serializedName: \"ContainerName\",\n        required: true,\n        xmlName: \"ContainerName\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxPageSize: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      segment: {\n        serializedName: \"Segment\",\n        xmlName: \"Blobs\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobFlatListSegment\"\n        }\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobFlatListSegment: coreHttp.CompositeMapper = {\n  serializedName: \"BlobFlatListSegment\",\n  xmlName: \"Blobs\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobFlatListSegment\",\n    modelProperties: {\n      blobItems: {\n        serializedName: \"BlobItems\",\n        required: true,\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItemInternal\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlobItemInternal: coreHttp.CompositeMapper = {\n  serializedName: \"BlobItemInternal\",\n  xmlName: \"Blob\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobItemInternal\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        xmlName: \"Name\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobName\"\n        }\n      },\n      deleted: {\n        serializedName: \"Deleted\",\n        required: true,\n        xmlName: \"Deleted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      snapshot: {\n        serializedName: \"Snapshot\",\n        required: true,\n        xmlName: \"Snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      versionId: {\n        serializedName: \"VersionId\",\n        xmlName: \"VersionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isCurrentVersion: {\n        serializedName: \"IsCurrentVersion\",\n        xmlName: \"IsCurrentVersion\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobPropertiesInternal\"\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        xmlName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      blobTags: {\n        serializedName: \"BlobTags\",\n        xmlName: \"Tags\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobTags\"\n        }\n      },\n      objectReplicationMetadata: {\n        serializedName: \"ObjectReplicationMetadata\",\n        xmlName: \"OrMetadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      hasVersionsOnly: {\n        serializedName: \"HasVersionsOnly\",\n        xmlName: \"HasVersionsOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobName: coreHttp.CompositeMapper = {\n  serializedName: \"BlobName\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobName\",\n    modelProperties: {\n      encoded: {\n        serializedName: \"Encoded\",\n        xmlName: \"Encoded\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      content: {\n        serializedName: \"content\",\n        xmlName: \"content\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobPropertiesInternal: coreHttp.CompositeMapper = {\n  serializedName: \"BlobPropertiesInternal\",\n  xmlName: \"Properties\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobPropertiesInternal\",\n    modelProperties: {\n      createdOn: {\n        serializedName: \"Creation-Time\",\n        xmlName: \"Creation-Time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastModified: {\n        serializedName: \"Last-Modified\",\n        required: true,\n        xmlName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"Etag\",\n        required: true,\n        xmlName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        serializedName: \"Content-Length\",\n        xmlName: \"Content-Length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"Content-Type\",\n        xmlName: \"Content-Type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"Content-Encoding\",\n        xmlName: \"Content-Encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"Content-Language\",\n        xmlName: \"Content-Language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"Content-MD5\",\n        xmlName: \"Content-MD5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"Content-Disposition\",\n        xmlName: \"Content-Disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"Cache-Control\",\n        xmlName: \"Cache-Control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blobType: {\n        serializedName: \"BlobType\",\n        xmlName: \"BlobType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"LeaseStatus\",\n        xmlName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"LeaseState\",\n        xmlName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseDuration: {\n        serializedName: \"LeaseDuration\",\n        xmlName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      copyId: {\n        serializedName: \"CopyId\",\n        xmlName: \"CopyId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"CopyStatus\",\n        xmlName: \"CopyStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n        }\n      },\n      copySource: {\n        serializedName: \"CopySource\",\n        xmlName: \"CopySource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"CopyProgress\",\n        xmlName: \"CopyProgress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyCompletedOn: {\n        serializedName: \"CopyCompletionTime\",\n        xmlName: \"CopyCompletionTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"CopyStatusDescription\",\n        xmlName: \"CopyStatusDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverEncrypted: {\n        serializedName: \"ServerEncrypted\",\n        xmlName: \"ServerEncrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      incrementalCopy: {\n        serializedName: \"IncrementalCopy\",\n        xmlName: \"IncrementalCopy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      destinationSnapshot: {\n        serializedName: \"DestinationSnapshot\",\n        xmlName: \"DestinationSnapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deletedOn: {\n        serializedName: \"DeletedTime\",\n        xmlName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      remainingRetentionDays: {\n        serializedName: \"RemainingRetentionDays\",\n        xmlName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      accessTier: {\n        serializedName: \"AccessTier\",\n        xmlName: \"AccessTier\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"P4\",\n            \"P6\",\n            \"P10\",\n            \"P15\",\n            \"P20\",\n            \"P30\",\n            \"P40\",\n            \"P50\",\n            \"P60\",\n            \"P70\",\n            \"P80\",\n            \"Hot\",\n            \"Cool\",\n            \"Archive\"\n          ]\n        }\n      },\n      accessTierInferred: {\n        serializedName: \"AccessTierInferred\",\n        xmlName: \"AccessTierInferred\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      archiveStatus: {\n        serializedName: \"ArchiveStatus\",\n        xmlName: \"ArchiveStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"rehydrate-pending-to-hot\",\n            \"rehydrate-pending-to-cool\"\n          ]\n        }\n      },\n      customerProvidedKeySha256: {\n        serializedName: \"CustomerProvidedKeySha256\",\n        xmlName: \"CustomerProvidedKeySha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"EncryptionScope\",\n        xmlName: \"EncryptionScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangedOn: {\n        serializedName: \"AccessTierChangeTime\",\n        xmlName: \"AccessTierChangeTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      tagCount: {\n        serializedName: \"TagCount\",\n        xmlName: \"TagCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      expiresOn: {\n        serializedName: \"Expiry-Time\",\n        xmlName: \"Expiry-Time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isSealed: {\n        serializedName: \"Sealed\",\n        xmlName: \"Sealed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      rehydratePriority: {\n        serializedName: \"RehydratePriority\",\n        xmlName: \"RehydratePriority\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"High\", \"Standard\"]\n        }\n      },\n      lastAccessedOn: {\n        serializedName: \"LastAccessTime\",\n        xmlName: \"LastAccessTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      immutabilityPolicyExpiresOn: {\n        serializedName: \"ImmutabilityPolicyUntilDate\",\n        xmlName: \"ImmutabilityPolicyUntilDate\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"ImmutabilityPolicyMode\",\n        xmlName: \"ImmutabilityPolicyMode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"]\n        }\n      },\n      legalHold: {\n        serializedName: \"LegalHold\",\n        xmlName: \"LegalHold\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListBlobsHierarchySegmentResponse: coreHttp.CompositeMapper = {\n  serializedName: \"ListBlobsHierarchySegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsHierarchySegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        serializedName: \"ContainerName\",\n        required: true,\n        xmlName: \"ContainerName\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxPageSize: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      delimiter: {\n        serializedName: \"Delimiter\",\n        xmlName: \"Delimiter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      segment: {\n        serializedName: \"Segment\",\n        xmlName: \"Blobs\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobHierarchyListSegment\"\n        }\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobHierarchyListSegment: coreHttp.CompositeMapper = {\n  serializedName: \"BlobHierarchyListSegment\",\n  xmlName: \"Blobs\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobHierarchyListSegment\",\n    modelProperties: {\n      blobPrefixes: {\n        serializedName: \"BlobPrefixes\",\n        xmlName: \"BlobPrefixes\",\n        xmlElementName: \"BlobPrefix\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobPrefix\"\n            }\n          }\n        }\n      },\n      blobItems: {\n        serializedName: \"BlobItems\",\n        required: true,\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItemInternal\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlobPrefix: coreHttp.CompositeMapper = {\n  serializedName: \"BlobPrefix\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobPrefix\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        xmlName: \"Name\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobName\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockLookupList: coreHttp.CompositeMapper = {\n  serializedName: \"BlockLookupList\",\n  xmlName: \"BlockList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockLookupList\",\n    modelProperties: {\n      committed: {\n        serializedName: \"Committed\",\n        xmlName: \"Committed\",\n        xmlElementName: \"Committed\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      uncommitted: {\n        serializedName: \"Uncommitted\",\n        xmlName: \"Uncommitted\",\n        xmlElementName: \"Uncommitted\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      latest: {\n        serializedName: \"Latest\",\n        xmlName: \"Latest\",\n        xmlElementName: \"Latest\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlockList: coreHttp.CompositeMapper = {\n  serializedName: \"BlockList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockList\",\n    modelProperties: {\n      committedBlocks: {\n        serializedName: \"CommittedBlocks\",\n        xmlName: \"CommittedBlocks\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Block\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\"\n            }\n          }\n        }\n      },\n      uncommittedBlocks: {\n        serializedName: \"UncommittedBlocks\",\n        xmlName: \"UncommittedBlocks\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Block\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Block: coreHttp.CompositeMapper = {\n  serializedName: \"Block\",\n  type: {\n    name: \"Composite\",\n    className: \"Block\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"Size\",\n        required: true,\n        xmlName: \"Size\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageList: coreHttp.CompositeMapper = {\n  serializedName: \"PageList\",\n  type: {\n    name: \"Composite\",\n    className: \"PageList\",\n    modelProperties: {\n      pageRange: {\n        serializedName: \"PageRange\",\n        xmlName: \"PageRange\",\n        xmlElementName: \"PageRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PageRange\"\n            }\n          }\n        }\n      },\n      clearRange: {\n        serializedName: \"ClearRange\",\n        xmlName: \"ClearRange\",\n        xmlElementName: \"ClearRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClearRange\"\n            }\n          }\n        }\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageRange: coreHttp.CompositeMapper = {\n  serializedName: \"PageRange\",\n  xmlName: \"PageRange\",\n  type: {\n    name: \"Composite\",\n    className: \"PageRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        serializedName: \"End\",\n        required: true,\n        xmlName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClearRange: coreHttp.CompositeMapper = {\n  serializedName: \"ClearRange\",\n  xmlName: \"ClearRange\",\n  type: {\n    name: \"Composite\",\n    className: \"ClearRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        serializedName: \"End\",\n        required: true,\n        xmlName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryRequest: coreHttp.CompositeMapper = {\n  serializedName: \"QueryRequest\",\n  xmlName: \"QueryRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryRequest\",\n    modelProperties: {\n      queryType: {\n        serializedName: \"QueryType\",\n        required: true,\n        xmlName: \"QueryType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expression: {\n        serializedName: \"Expression\",\n        required: true,\n        xmlName: \"Expression\",\n        type: {\n          name: \"String\"\n        }\n      },\n      inputSerialization: {\n        serializedName: \"InputSerialization\",\n        xmlName: \"InputSerialization\",\n        type: {\n          name: \"Composite\",\n          className: \"QuerySerialization\"\n        }\n      },\n      outputSerialization: {\n        serializedName: \"OutputSerialization\",\n        xmlName: \"OutputSerialization\",\n        type: {\n          name: \"Composite\",\n          className: \"QuerySerialization\"\n        }\n      }\n    }\n  }\n};\n\nexport const QuerySerialization: coreHttp.CompositeMapper = {\n  serializedName: \"QuerySerialization\",\n  type: {\n    name: \"Composite\",\n    className: \"QuerySerialization\",\n    modelProperties: {\n      format: {\n        serializedName: \"Format\",\n        xmlName: \"Format\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryFormat\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryFormat: coreHttp.CompositeMapper = {\n  serializedName: \"QueryFormat\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryFormat\",\n    modelProperties: {\n      type: {\n        serializedName: \"Type\",\n        required: true,\n        xmlName: \"Type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"delimited\", \"json\", \"arrow\", \"parquet\"]\n        }\n      },\n      delimitedTextConfiguration: {\n        serializedName: \"DelimitedTextConfiguration\",\n        xmlName: \"DelimitedTextConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"DelimitedTextConfiguration\"\n        }\n      },\n      jsonTextConfiguration: {\n        serializedName: \"JsonTextConfiguration\",\n        xmlName: \"JsonTextConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"JsonTextConfiguration\"\n        }\n      },\n      arrowConfiguration: {\n        serializedName: \"ArrowConfiguration\",\n        xmlName: \"ArrowConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"ArrowConfiguration\"\n        }\n      },\n      parquetTextConfiguration: {\n        serializedName: \"ParquetTextConfiguration\",\n        xmlName: \"ParquetTextConfiguration\",\n        type: {\n          name: \"any\"\n        }\n      }\n    }\n  }\n};\n\nexport const DelimitedTextConfiguration: coreHttp.CompositeMapper = {\n  serializedName: \"DelimitedTextConfiguration\",\n  xmlName: \"DelimitedTextConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"DelimitedTextConfiguration\",\n    modelProperties: {\n      columnSeparator: {\n        serializedName: \"ColumnSeparator\",\n        xmlName: \"ColumnSeparator\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fieldQuote: {\n        serializedName: \"FieldQuote\",\n        xmlName: \"FieldQuote\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recordSeparator: {\n        serializedName: \"RecordSeparator\",\n        xmlName: \"RecordSeparator\",\n        type: {\n          name: \"String\"\n        }\n      },\n      escapeChar: {\n        serializedName: \"EscapeChar\",\n        xmlName: \"EscapeChar\",\n        type: {\n          name: \"String\"\n        }\n      },\n      headersPresent: {\n        serializedName: \"HeadersPresent\",\n        xmlName: \"HasHeaders\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const JsonTextConfiguration: coreHttp.CompositeMapper = {\n  serializedName: \"JsonTextConfiguration\",\n  xmlName: \"JsonTextConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"JsonTextConfiguration\",\n    modelProperties: {\n      recordSeparator: {\n        serializedName: \"RecordSeparator\",\n        xmlName: \"RecordSeparator\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ArrowConfiguration: coreHttp.CompositeMapper = {\n  serializedName: \"ArrowConfiguration\",\n  xmlName: \"ArrowConfiguration\",\n  type: {\n    name: \"Composite\",\n    className: \"ArrowConfiguration\",\n    modelProperties: {\n      schema: {\n        serializedName: \"Schema\",\n        required: true,\n        xmlName: \"Schema\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Field\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ArrowField\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ArrowField: coreHttp.CompositeMapper = {\n  serializedName: \"ArrowField\",\n  xmlName: \"Field\",\n  type: {\n    name: \"Composite\",\n    className: \"ArrowField\",\n    modelProperties: {\n      type: {\n        serializedName: \"Type\",\n        required: true,\n        xmlName: \"Type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"Name\",\n        xmlName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      precision: {\n        serializedName: \"Precision\",\n        xmlName: \"Precision\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      scale: {\n        serializedName: \"Scale\",\n        xmlName: \"Scale\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_setPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_setPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetStatisticsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_getStatisticsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetStatisticsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetStatisticsExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_getStatisticsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetStatisticsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceListContainersSegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_listContainersSegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListContainersSegmentHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceListContainersSegmentExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_listContainersSegmentExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListContainersSegmentExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetUserDelegationKeyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_getUserDelegationKeyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetUserDelegationKeyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetUserDelegationKeyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_getUserDelegationKeyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetUserDelegationKeyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetAccountInfoHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_getAccountInfoHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        xmlName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\"\n          ]\n        }\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        xmlName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\",\n            \"FileStorage\",\n            \"BlockBlobStorage\"\n          ]\n        }\n      },\n      isHierarchicalNamespaceEnabled: {\n        serializedName: \"x-ms-is-hns-enabled\",\n        xmlName: \"x-ms-is-hns-enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetAccountInfoExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_getAccountInfoExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetAccountInfoExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSubmitBatchHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_submitBatchHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSubmitBatchHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSubmitBatchExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_submitBatchExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSubmitBatchExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceFilterBlobsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_filterBlobsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceFilterBlobsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceFilterBlobsExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_filterBlobsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceFilterBlobsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerCreateExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        xmlName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"container\", \"blob\"]\n        }\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"x-ms-has-immutability-policy\",\n        xmlName: \"x-ms-has-immutability-policy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hasLegalHold: {\n        serializedName: \"x-ms-has-legal-hold\",\n        xmlName: \"x-ms-has-legal-hold\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      defaultEncryptionScope: {\n        serializedName: \"x-ms-default-encryption-scope\",\n        xmlName: \"x-ms-default-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      denyEncryptionScopeOverride: {\n        serializedName: \"x-ms-deny-encryption-scope-override\",\n        xmlName: \"x-ms-deny-encryption-scope-override\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isImmutableStorageWithVersioningEnabled: {\n        serializedName: \"x-ms-immutable-storage-with-versioning-enabled\",\n        xmlName: \"x-ms-immutable-storage-with-versioning-enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerDeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerDeleteExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerSetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerSetMetadataExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_setMetadataExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetMetadataExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetAccessPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_getAccessPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccessPolicyHeaders\",\n    modelProperties: {\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        xmlName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"container\", \"blob\"]\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetAccessPolicyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_getAccessPolicyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccessPolicyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerSetAccessPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_setAccessPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetAccessPolicyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerSetAccessPolicyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_setAccessPolicyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetAccessPolicyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRestoreHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_restoreHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRestoreHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRestoreExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_restoreExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRestoreExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRenameHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_renameHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenameHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRenameExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_renameExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenameExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerSubmitBatchHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_submitBatchHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSubmitBatchHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerSubmitBatchExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_submitBatchExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSubmitBatchExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerFilterBlobsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_filterBlobsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerFilterBlobsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerFilterBlobsExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_filterBlobsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerFilterBlobsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerAcquireLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_acquireLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerAcquireLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_acquireLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAcquireLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerReleaseLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_releaseLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerReleaseLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_releaseLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerReleaseLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRenewLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_renewLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenewLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRenewLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_renewLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenewLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerBreakLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_breakLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        xmlName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerBreakLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_breakLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerBreakLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerChangeLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_changeLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerChangeLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_changeLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerChangeLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerListBlobFlatSegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_listBlobFlatSegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobFlatSegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerListBlobFlatSegmentExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_listBlobFlatSegmentExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobFlatSegmentExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerListBlobHierarchySegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_listBlobHierarchySegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobHierarchySegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerListBlobHierarchySegmentExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_listBlobHierarchySegmentExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobHierarchySegmentExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetAccountInfoHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_getAccountInfoHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        xmlName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\"\n          ]\n        }\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        xmlName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\",\n            \"FileStorage\",\n            \"BlockBlobStorage\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetAccountInfoExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Container_getAccountInfoExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccountInfoExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDownloadHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_downloadHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDownloadHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      objectReplicationPolicyId: {\n        serializedName: \"x-ms-or-policy-id\",\n        xmlName: \"x-ms-or-policy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      objectReplicationRules: {\n        serializedName: \"x-ms-or\",\n        xmlName: \"x-ms-or\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-or-\"\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        xmlName: \"content-range\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        xmlName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"]\n        }\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isCurrentVersion: {\n        serializedName: \"x-ms-is-current-version\",\n        xmlName: \"x-ms-is-current-version\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentMD5: {\n        serializedName: \"x-ms-blob-content-md5\",\n        xmlName: \"x-ms-blob-content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      tagCount: {\n        serializedName: \"x-ms-tag-count\",\n        xmlName: \"x-ms-tag-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isSealed: {\n        serializedName: \"x-ms-blob-sealed\",\n        xmlName: \"x-ms-blob-sealed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      lastAccessed: {\n        serializedName: \"x-ms-last-access-time\",\n        xmlName: \"x-ms-last-access-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      immutabilityPolicyExpiresOn: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"]\n        }\n      },\n      legalHold: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDownloadExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_downloadExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDownloadExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetPropertiesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      createdOn: {\n        serializedName: \"x-ms-creation-time\",\n        xmlName: \"x-ms-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      objectReplicationPolicyId: {\n        serializedName: \"x-ms-or-policy-id\",\n        xmlName: \"x-ms-or-policy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      objectReplicationRules: {\n        serializedName: \"x-ms-or\",\n        xmlName: \"x-ms-or\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-or-\"\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        xmlName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"]\n        }\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n        }\n      },\n      isIncrementalCopy: {\n        serializedName: \"x-ms-incremental-copy\",\n        xmlName: \"x-ms-incremental-copy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      destinationSnapshot: {\n        serializedName: \"x-ms-copy-destination-snapshot\",\n        xmlName: \"x-ms-copy-destination-snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTier: {\n        serializedName: \"x-ms-access-tier\",\n        xmlName: \"x-ms-access-tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierInferred: {\n        serializedName: \"x-ms-access-tier-inferred\",\n        xmlName: \"x-ms-access-tier-inferred\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      archiveStatus: {\n        serializedName: \"x-ms-archive-status\",\n        xmlName: \"x-ms-archive-status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangedOn: {\n        serializedName: \"x-ms-access-tier-change-time\",\n        xmlName: \"x-ms-access-tier-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isCurrentVersion: {\n        serializedName: \"x-ms-is-current-version\",\n        xmlName: \"x-ms-is-current-version\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      tagCount: {\n        serializedName: \"x-ms-tag-count\",\n        xmlName: \"x-ms-tag-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      expiresOn: {\n        serializedName: \"x-ms-expiry-time\",\n        xmlName: \"x-ms-expiry-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isSealed: {\n        serializedName: \"x-ms-blob-sealed\",\n        xmlName: \"x-ms-blob-sealed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      rehydratePriority: {\n        serializedName: \"x-ms-rehydrate-priority\",\n        xmlName: \"x-ms-rehydrate-priority\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"High\", \"Standard\"]\n        }\n      },\n      lastAccessed: {\n        serializedName: \"x-ms-last-access-time\",\n        xmlName: \"x-ms-last-access-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      immutabilityPolicyExpiresOn: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"]\n        }\n      },\n      legalHold: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDeleteExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobUndeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_undeleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobUndeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobUndeleteExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_undeleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobUndeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetExpiryHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setExpiryHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetExpiryHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetExpiryExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setExpiryExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetExpiryExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetHttpHeadersHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setHttpHeadersHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetHttpHeadersHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetHttpHeadersExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setHttpHeadersExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetHttpHeadersExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetImmutabilityPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setImmutabilityPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetImmutabilityPolicyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      immutabilityPolicyExpiry: {\n        serializedName: \"x-ms-immutability-policy-until-date\",\n        xmlName: \"x-ms-immutability-policy-until-date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      immutabilityPolicyMode: {\n        serializedName: \"x-ms-immutability-policy-mode\",\n        xmlName: \"x-ms-immutability-policy-mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"]\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetImmutabilityPolicyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setImmutabilityPolicyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetImmutabilityPolicyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDeleteImmutabilityPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_deleteImmutabilityPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteImmutabilityPolicyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDeleteImmutabilityPolicyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_deleteImmutabilityPolicyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteImmutabilityPolicyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetLegalHoldHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setLegalHoldHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetLegalHoldHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      legalHold: {\n        serializedName: \"x-ms-legal-hold\",\n        xmlName: \"x-ms-legal-hold\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetLegalHoldExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setLegalHoldExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetLegalHoldExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetMetadataExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setMetadataExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetMetadataExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobAcquireLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_acquireLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobAcquireLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_acquireLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAcquireLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobReleaseLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_releaseLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobReleaseLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_releaseLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobReleaseLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobRenewLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_renewLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobRenewLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobRenewLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_renewLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobRenewLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobChangeLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_changeLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobChangeLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_changeLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobChangeLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobBreakLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_breakLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        xmlName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobBreakLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_breakLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobBreakLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobCreateSnapshotHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_createSnapshotHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCreateSnapshotHeaders\",\n    modelProperties: {\n      snapshot: {\n        serializedName: \"x-ms-snapshot\",\n        xmlName: \"x-ms-snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobCreateSnapshotExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_createSnapshotExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCreateSnapshotExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobStartCopyFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_startCopyFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobStartCopyFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobStartCopyFromURLExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_startCopyFromURLExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobStartCopyFromURLExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobCopyFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_copyFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCopyFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        defaultValue: \"success\",\n        isConstant: true,\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobCopyFromURLExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_copyFromURLExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCopyFromURLExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobAbortCopyFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_abortCopyFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAbortCopyFromURLHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobAbortCopyFromURLExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_abortCopyFromURLExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAbortCopyFromURLExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetTierHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setTierHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTierHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetTierExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setTierExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTierExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetAccountInfoHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_getAccountInfoHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        xmlName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\"\n          ]\n        }\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        xmlName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\",\n            \"FileStorage\",\n            \"BlockBlobStorage\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetAccountInfoExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_getAccountInfoExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetAccountInfoExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobQueryHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_queryHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobQueryHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        xmlName: \"content-range\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        xmlName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"BlockBlob\", \"PageBlob\", \"AppendBlob\"]\n        }\n      },\n      copyCompletionTime: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentMD5: {\n        serializedName: \"x-ms-blob-content-md5\",\n        xmlName: \"x-ms-blob-content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobQueryExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_queryExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobQueryExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetTagsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_getTagsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetTagsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetTagsExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_getTagsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetTagsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetTagsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setTagsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTagsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetTagsExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Blob_setTagsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTagsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobCreateExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUploadPagesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUploadPagesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobClearPagesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_clearPagesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobClearPagesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobClearPagesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_clearPagesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobClearPagesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUploadPagesFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUploadPagesFromURLExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_uploadPagesFromURLExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesFromURLExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobGetPageRangesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_getPageRangesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobGetPageRangesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_getPageRangesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobGetPageRangesDiffHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_getPageRangesDiffHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesDiffHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobGetPageRangesDiffExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_getPageRangesDiffExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesDiffExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobResizeHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_resizeHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobResizeHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobResizeExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_resizeExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobResizeExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUpdateSequenceNumberHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_updateSequenceNumberHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUpdateSequenceNumberHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        xmlName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUpdateSequenceNumberExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_updateSequenceNumberExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUpdateSequenceNumberExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobCopyIncrementalHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_copyIncrementalHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCopyIncrementalHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobCopyIncrementalExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"PageBlob_copyIncrementalExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCopyIncrementalExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"AppendBlob_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobCreateExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"AppendBlob_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobAppendBlockHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"AppendBlob_appendBlockHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        xmlName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobAppendBlockExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"AppendBlob_appendBlockExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobAppendBlockFromUrlHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"AppendBlob_appendBlockFromUrlHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockFromUrlHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        xmlName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        xmlName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobAppendBlockFromUrlExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"AppendBlob_appendBlockFromUrlExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockFromUrlExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobSealHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"AppendBlob_sealHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobSealHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isSealed: {\n        serializedName: \"x-ms-blob-sealed\",\n        xmlName: \"x-ms-blob-sealed\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobSealExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"AppendBlob_sealExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobSealExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobUploadHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"BlockBlob_uploadHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobUploadHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobUploadExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"BlockBlob_uploadExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobUploadExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobPutBlobFromUrlHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"BlockBlob_putBlobFromUrlHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobPutBlobFromUrlHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobPutBlobFromUrlExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"BlockBlob_putBlobFromUrlExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobPutBlobFromUrlExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobStageBlockHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobStageBlockExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobStageBlockFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockFromURLHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobStageBlockFromURLExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"BlockBlob_stageBlockFromURLExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockFromURLExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobCommitBlockListHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"BlockBlob_commitBlockListHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobCommitBlockListHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      versionId: {\n        serializedName: \"x-ms-version-id\",\n        xmlName: \"x-ms-version-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        xmlName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        xmlName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobCommitBlockListExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"BlockBlob_commitBlockListExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobCommitBlockListExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobGetBlockListHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"BlockBlob_getBlockListHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobGetBlockListHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        xmlName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobGetBlockListExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"BlockBlob_getBlockListExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobGetBlockListExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nexport enum QueryCollectionFormat {\n  /**\n   * CSV: Each pair of segments joined by a single comma.\n   */\n  Csv = \",\",\n  /**\n   * SSV: Each pair of segments joined by a single space character.\n   */\n  Ssv = \" \",\n  /**\n   * TSV: Each pair of segments joined by a single tab character.\n   */\n  Tsv = \"\\t\",\n  /**\n   * Pipes: Each pair of segments joined by a single pipe character.\n   */\n  Pipes = \"|\",\n  /**\n   * Denotes this is an array of values that should be passed to the server in multiple key/value pairs, e.g. `?queryParam=value1&queryParam=value2`\n   */\n  Multi = \"Multi\",\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n  QueryCollectionFormat\n} from \"@azure/core-http\";\nimport {\n  BlobServiceProperties as BlobServicePropertiesMapper,\n  KeyInfo as KeyInfoMapper,\n  QueryRequest as QueryRequestMapper,\n  BlobTags as BlobTagsMapper,\n  BlockLookupList as BlockLookupListMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blobServiceProperties: OperationParameter = {\n  parameterPath: \"blobServiceProperties\",\n  mapper: BlobServicePropertiesMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const url: OperationURLParameter = {\n  parameterPath: \"url\",\n  mapper: {\n    serializedName: \"url\",\n    required: true,\n    xmlName: \"url\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const restype: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"service\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"properties\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const timeoutInSeconds: OperationQueryParameter = {\n  parameterPath: [\"options\", \"timeoutInSeconds\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 0\n    },\n    serializedName: \"timeout\",\n    xmlName: \"timeout\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const version: OperationParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    defaultValue: \"2021-10-04\",\n    isConstant: true,\n    serializedName: \"x-ms-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const requestId: OperationParameter = {\n  parameterPath: [\"options\", \"requestId\"],\n  mapper: {\n    serializedName: \"x-ms-client-request-id\",\n    xmlName: \"x-ms-client-request-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const accept1: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp1: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"stats\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp2: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"list\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const prefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prefix\"],\n  mapper: {\n    serializedName: \"prefix\",\n    xmlName: \"prefix\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const marker: OperationQueryParameter = {\n  parameterPath: [\"options\", \"marker\"],\n  mapper: {\n    serializedName: \"marker\",\n    xmlName: \"marker\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const maxPageSize: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxPageSize\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    serializedName: \"maxresults\",\n    xmlName: \"maxresults\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const include: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    xmlName: \"include\",\n    xmlElementName: \"ListContainersIncludeType\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"metadata\", \"deleted\", \"system\"]\n        }\n      }\n    }\n  },\n  collectionFormat: QueryCollectionFormat.Csv\n};\n\nexport const keyInfo: OperationParameter = {\n  parameterPath: \"keyInfo\",\n  mapper: KeyInfoMapper\n};\n\nexport const comp3: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"userdelegationkey\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const restype1: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"account\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: {\n    serializedName: \"body\",\n    required: true,\n    xmlName: \"body\",\n    type: {\n      name: \"Stream\"\n    }\n  }\n};\n\nexport const comp4: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"batch\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentLength: OperationParameter = {\n  parameterPath: \"contentLength\",\n  mapper: {\n    serializedName: \"Content-Length\",\n    required: true,\n    xmlName: \"Content-Length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const multipartContentType: OperationParameter = {\n  parameterPath: \"multipartContentType\",\n  mapper: {\n    serializedName: \"Content-Type\",\n    required: true,\n    xmlName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp5: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"blobs\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const where: OperationQueryParameter = {\n  parameterPath: [\"options\", \"where\"],\n  mapper: {\n    serializedName: \"where\",\n    xmlName: \"where\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const restype2: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"container\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const metadata: OperationParameter = {\n  parameterPath: [\"options\", \"metadata\"],\n  mapper: {\n    serializedName: \"x-ms-meta\",\n    xmlName: \"x-ms-meta\",\n    type: {\n      name: \"Dictionary\",\n      value: { type: { name: \"String\" } }\n    },\n    headerCollectionPrefix: \"x-ms-meta-\"\n  }\n};\n\nexport const access: OperationParameter = {\n  parameterPath: [\"options\", \"access\"],\n  mapper: {\n    serializedName: \"x-ms-blob-public-access\",\n    xmlName: \"x-ms-blob-public-access\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"container\", \"blob\"]\n    }\n  }\n};\n\nexport const defaultEncryptionScope: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"containerEncryptionScope\",\n    \"defaultEncryptionScope\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-default-encryption-scope\",\n    xmlName: \"x-ms-default-encryption-scope\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const preventEncryptionScopeOverride: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"containerEncryptionScope\",\n    \"preventEncryptionScopeOverride\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-deny-encryption-scope-override\",\n    xmlName: \"x-ms-deny-encryption-scope-override\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const leaseId: OperationParameter = {\n  parameterPath: [\"options\", \"leaseAccessConditions\", \"leaseId\"],\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    xmlName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ifModifiedSince: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifModifiedSince\"],\n  mapper: {\n    serializedName: \"If-Modified-Since\",\n    xmlName: \"If-Modified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\n\nexport const ifUnmodifiedSince: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifUnmodifiedSince\"],\n  mapper: {\n    serializedName: \"If-Unmodified-Since\",\n    xmlName: \"If-Unmodified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\n\nexport const comp6: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"metadata\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp7: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"acl\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const containerAcl: OperationParameter = {\n  parameterPath: [\"options\", \"containerAcl\"],\n  mapper: {\n    serializedName: \"containerAcl\",\n    xmlName: \"SignedIdentifiers\",\n    xmlIsWrapped: true,\n    xmlElementName: \"SignedIdentifier\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Composite\",\n          className: \"SignedIdentifier\"\n        }\n      }\n    }\n  }\n};\n\nexport const comp8: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"undelete\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deletedContainerName: OperationParameter = {\n  parameterPath: [\"options\", \"deletedContainerName\"],\n  mapper: {\n    serializedName: \"x-ms-deleted-container-name\",\n    xmlName: \"x-ms-deleted-container-name\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deletedContainerVersion: OperationParameter = {\n  parameterPath: [\"options\", \"deletedContainerVersion\"],\n  mapper: {\n    serializedName: \"x-ms-deleted-container-version\",\n    xmlName: \"x-ms-deleted-container-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp9: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"rename\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sourceContainerName: OperationParameter = {\n  parameterPath: \"sourceContainerName\",\n  mapper: {\n    serializedName: \"x-ms-source-container-name\",\n    required: true,\n    xmlName: \"x-ms-source-container-name\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sourceLeaseId: OperationParameter = {\n  parameterPath: [\"options\", \"sourceLeaseId\"],\n  mapper: {\n    serializedName: \"x-ms-source-lease-id\",\n    xmlName: \"x-ms-source-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp10: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"lease\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"acquire\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const duration: OperationParameter = {\n  parameterPath: [\"options\", \"duration\"],\n  mapper: {\n    serializedName: \"x-ms-lease-duration\",\n    xmlName: \"x-ms-lease-duration\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const proposedLeaseId: OperationParameter = {\n  parameterPath: [\"options\", \"proposedLeaseId\"],\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    xmlName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action1: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"release\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const leaseId1: OperationParameter = {\n  parameterPath: \"leaseId\",\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    required: true,\n    xmlName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action2: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"renew\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action3: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"break\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const breakPeriod: OperationParameter = {\n  parameterPath: [\"options\", \"breakPeriod\"],\n  mapper: {\n    serializedName: \"x-ms-lease-break-period\",\n    xmlName: \"x-ms-lease-break-period\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const action4: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"change\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const proposedLeaseId1: OperationParameter = {\n  parameterPath: \"proposedLeaseId\",\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    required: true,\n    xmlName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const include1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    xmlName: \"include\",\n    xmlElementName: \"ListBlobsIncludeItem\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"copy\",\n            \"deleted\",\n            \"metadata\",\n            \"snapshots\",\n            \"uncommittedblobs\",\n            \"versions\",\n            \"tags\",\n            \"immutabilitypolicy\",\n            \"legalhold\",\n            \"deletedwithversions\"\n          ]\n        }\n      }\n    }\n  },\n  collectionFormat: QueryCollectionFormat.Csv\n};\n\nexport const delimiter: OperationQueryParameter = {\n  parameterPath: \"delimiter\",\n  mapper: {\n    serializedName: \"delimiter\",\n    required: true,\n    xmlName: \"delimiter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const snapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"snapshot\"],\n  mapper: {\n    serializedName: \"snapshot\",\n    xmlName: \"snapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const versionId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"versionId\"],\n  mapper: {\n    serializedName: \"versionid\",\n    xmlName: \"versionid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const range: OperationParameter = {\n  parameterPath: [\"options\", \"range\"],\n  mapper: {\n    serializedName: \"x-ms-range\",\n    xmlName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const rangeGetContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"rangeGetContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-md5\",\n    xmlName: \"x-ms-range-get-content-md5\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const rangeGetContentCRC64: OperationParameter = {\n  parameterPath: [\"options\", \"rangeGetContentCRC64\"],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-crc64\",\n    xmlName: \"x-ms-range-get-content-crc64\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const encryptionKey: OperationParameter = {\n  parameterPath: [\"options\", \"cpkInfo\", \"encryptionKey\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-key\",\n    xmlName: \"x-ms-encryption-key\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const encryptionKeySha256: OperationParameter = {\n  parameterPath: [\"options\", \"cpkInfo\", \"encryptionKeySha256\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-key-sha256\",\n    xmlName: \"x-ms-encryption-key-sha256\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const encryptionAlgorithm: OperationParameter = {\n  parameterPath: [\"options\", \"cpkInfo\", \"encryptionAlgorithm\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-algorithm\",\n    xmlName: \"x-ms-encryption-algorithm\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    xmlName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ifNoneMatch: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifNoneMatch\"],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    xmlName: \"If-None-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ifTags: OperationParameter = {\n  parameterPath: [\"options\", \"modifiedAccessConditions\", \"ifTags\"],\n  mapper: {\n    serializedName: \"x-ms-if-tags\",\n    xmlName: \"x-ms-if-tags\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deleteSnapshots: OperationParameter = {\n  parameterPath: [\"options\", \"deleteSnapshots\"],\n  mapper: {\n    serializedName: \"x-ms-delete-snapshots\",\n    xmlName: \"x-ms-delete-snapshots\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"include\", \"only\"]\n    }\n  }\n};\n\nexport const blobDeleteType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"blobDeleteType\"],\n  mapper: {\n    serializedName: \"deletetype\",\n    xmlName: \"deletetype\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp11: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"expiry\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expiryOptions: OperationParameter = {\n  parameterPath: \"expiryOptions\",\n  mapper: {\n    serializedName: \"x-ms-expiry-option\",\n    required: true,\n    xmlName: \"x-ms-expiry-option\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expiresOn: OperationParameter = {\n  parameterPath: [\"options\", \"expiresOn\"],\n  mapper: {\n    serializedName: \"x-ms-expiry-time\",\n    xmlName: \"x-ms-expiry-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blobCacheControl: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobCacheControl\"],\n  mapper: {\n    serializedName: \"x-ms-blob-cache-control\",\n    xmlName: \"x-ms-blob-cache-control\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blobContentType: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentType\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-type\",\n    xmlName: \"x-ms-blob-content-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blobContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-md5\",\n    xmlName: \"x-ms-blob-content-md5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const blobContentEncoding: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentEncoding\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-encoding\",\n    xmlName: \"x-ms-blob-content-encoding\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blobContentLanguage: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentLanguage\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-language\",\n    xmlName: \"x-ms-blob-content-language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blobContentDisposition: OperationParameter = {\n  parameterPath: [\"options\", \"blobHttpHeaders\", \"blobContentDisposition\"],\n  mapper: {\n    serializedName: \"x-ms-blob-content-disposition\",\n    xmlName: \"x-ms-blob-content-disposition\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp12: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"immutabilityPolicies\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const immutabilityPolicyExpiry: OperationParameter = {\n  parameterPath: [\"options\", \"immutabilityPolicyExpiry\"],\n  mapper: {\n    serializedName: \"x-ms-immutability-policy-until-date\",\n    xmlName: \"x-ms-immutability-policy-until-date\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\n\nexport const immutabilityPolicyMode: OperationParameter = {\n  parameterPath: [\"options\", \"immutabilityPolicyMode\"],\n  mapper: {\n    serializedName: \"x-ms-immutability-policy-mode\",\n    xmlName: \"x-ms-immutability-policy-mode\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"Mutable\", \"Unlocked\", \"Locked\"]\n    }\n  }\n};\n\nexport const comp13: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"legalhold\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const legalHold: OperationParameter = {\n  parameterPath: \"legalHold\",\n  mapper: {\n    serializedName: \"x-ms-legal-hold\",\n    required: true,\n    xmlName: \"x-ms-legal-hold\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const encryptionScope: OperationParameter = {\n  parameterPath: [\"options\", \"encryptionScope\"],\n  mapper: {\n    serializedName: \"x-ms-encryption-scope\",\n    xmlName: \"x-ms-encryption-scope\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp14: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"snapshot\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const tier: OperationParameter = {\n  parameterPath: [\"options\", \"tier\"],\n  mapper: {\n    serializedName: \"x-ms-access-tier\",\n    xmlName: \"x-ms-access-tier\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"P4\",\n        \"P6\",\n        \"P10\",\n        \"P15\",\n        \"P20\",\n        \"P30\",\n        \"P40\",\n        \"P50\",\n        \"P60\",\n        \"P70\",\n        \"P80\",\n        \"Hot\",\n        \"Cool\",\n        \"Archive\"\n      ]\n    }\n  }\n};\n\nexport const rehydratePriority: OperationParameter = {\n  parameterPath: [\"options\", \"rehydratePriority\"],\n  mapper: {\n    serializedName: \"x-ms-rehydrate-priority\",\n    xmlName: \"x-ms-rehydrate-priority\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"High\", \"Standard\"]\n    }\n  }\n};\n\nexport const sourceIfModifiedSince: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfModifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-modified-since\",\n    xmlName: \"x-ms-source-if-modified-since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\n\nexport const sourceIfUnmodifiedSince: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfUnmodifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-unmodified-since\",\n    xmlName: \"x-ms-source-if-unmodified-since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\n\nexport const sourceIfMatch: OperationParameter = {\n  parameterPath: [\"options\", \"sourceModifiedAccessConditions\", \"sourceIfMatch\"],\n  mapper: {\n    serializedName: \"x-ms-source-if-match\",\n    xmlName: \"x-ms-source-if-match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sourceIfNoneMatch: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfNoneMatch\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-none-match\",\n    xmlName: \"x-ms-source-if-none-match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sourceIfTags: OperationParameter = {\n  parameterPath: [\"options\", \"sourceModifiedAccessConditions\", \"sourceIfTags\"],\n  mapper: {\n    serializedName: \"x-ms-source-if-tags\",\n    xmlName: \"x-ms-source-if-tags\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const copySource: OperationParameter = {\n  parameterPath: \"copySource\",\n  mapper: {\n    serializedName: \"x-ms-copy-source\",\n    required: true,\n    xmlName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blobTagsString: OperationParameter = {\n  parameterPath: [\"options\", \"blobTagsString\"],\n  mapper: {\n    serializedName: \"x-ms-tags\",\n    xmlName: \"x-ms-tags\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sealBlob: OperationParameter = {\n  parameterPath: [\"options\", \"sealBlob\"],\n  mapper: {\n    serializedName: \"x-ms-seal-blob\",\n    xmlName: \"x-ms-seal-blob\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const legalHold1: OperationParameter = {\n  parameterPath: [\"options\", \"legalHold\"],\n  mapper: {\n    serializedName: \"x-ms-legal-hold\",\n    xmlName: \"x-ms-legal-hold\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const xMsRequiresSync: OperationParameter = {\n  parameterPath: \"xMsRequiresSync\",\n  mapper: {\n    defaultValue: \"true\",\n    isConstant: true,\n    serializedName: \"x-ms-requires-sync\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sourceContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"sourceContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-source-content-md5\",\n    xmlName: \"x-ms-source-content-md5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const copySourceAuthorization: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceAuthorization\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-authorization\",\n    xmlName: \"x-ms-copy-source-authorization\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const copySourceTags: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceTags\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-tag-option\",\n    xmlName: \"x-ms-copy-source-tag-option\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"REPLACE\", \"COPY\"]\n    }\n  }\n};\n\nexport const comp15: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"copy\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const copyActionAbortConstant: OperationParameter = {\n  parameterPath: \"copyActionAbortConstant\",\n  mapper: {\n    defaultValue: \"abort\",\n    isConstant: true,\n    serializedName: \"x-ms-copy-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const copyId: OperationQueryParameter = {\n  parameterPath: \"copyId\",\n  mapper: {\n    serializedName: \"copyid\",\n    required: true,\n    xmlName: \"copyid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp16: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"tier\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const tier1: OperationParameter = {\n  parameterPath: \"tier\",\n  mapper: {\n    serializedName: \"x-ms-access-tier\",\n    required: true,\n    xmlName: \"x-ms-access-tier\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"P4\",\n        \"P6\",\n        \"P10\",\n        \"P15\",\n        \"P20\",\n        \"P30\",\n        \"P40\",\n        \"P50\",\n        \"P60\",\n        \"P70\",\n        \"P80\",\n        \"Hot\",\n        \"Cool\",\n        \"Archive\"\n      ]\n    }\n  }\n};\n\nexport const queryRequest: OperationParameter = {\n  parameterPath: [\"options\", \"queryRequest\"],\n  mapper: QueryRequestMapper\n};\n\nexport const comp17: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"query\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp18: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"tags\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const tags: OperationParameter = {\n  parameterPath: [\"options\", \"tags\"],\n  mapper: BlobTagsMapper\n};\n\nexport const transactionalContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"transactionalContentMD5\"],\n  mapper: {\n    serializedName: \"Content-MD5\",\n    xmlName: \"Content-MD5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const transactionalContentCrc64: OperationParameter = {\n  parameterPath: [\"options\", \"transactionalContentCrc64\"],\n  mapper: {\n    serializedName: \"x-ms-content-crc64\",\n    xmlName: \"x-ms-content-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const blobType: OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    defaultValue: \"PageBlob\",\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blobContentLength: OperationParameter = {\n  parameterPath: \"blobContentLength\",\n  mapper: {\n    serializedName: \"x-ms-blob-content-length\",\n    required: true,\n    xmlName: \"x-ms-blob-content-length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const blobSequenceNumber: OperationParameter = {\n  parameterPath: [\"options\", \"blobSequenceNumber\"],\n  mapper: {\n    serializedName: \"x-ms-blob-sequence-number\",\n    xmlName: \"x-ms-blob-sequence-number\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const contentType1: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/octet-stream\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: {\n    serializedName: \"body\",\n    required: true,\n    xmlName: \"body\",\n    type: {\n      name: \"Stream\"\n    }\n  }\n};\n\nexport const accept2: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp19: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"page\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const pageWrite: OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    defaultValue: \"update\",\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ifSequenceNumberLessThanOrEqualTo: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThanOrEqualTo\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-le\",\n    xmlName: \"x-ms-if-sequence-number-le\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const ifSequenceNumberLessThan: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThan\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-lt\",\n    xmlName: \"x-ms-if-sequence-number-lt\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const ifSequenceNumberEqualTo: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberEqualTo\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-eq\",\n    xmlName: \"x-ms-if-sequence-number-eq\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const pageWrite1: OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    defaultValue: \"clear\",\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sourceUrl: OperationParameter = {\n  parameterPath: \"sourceUrl\",\n  mapper: {\n    serializedName: \"x-ms-copy-source\",\n    required: true,\n    xmlName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sourceRange: OperationParameter = {\n  parameterPath: \"sourceRange\",\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    required: true,\n    xmlName: \"x-ms-source-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sourceContentCrc64: OperationParameter = {\n  parameterPath: [\"options\", \"sourceContentCrc64\"],\n  mapper: {\n    serializedName: \"x-ms-source-content-crc64\",\n    xmlName: \"x-ms-source-content-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const range1: OperationParameter = {\n  parameterPath: \"range\",\n  mapper: {\n    serializedName: \"x-ms-range\",\n    required: true,\n    xmlName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp20: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"pagelist\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const prevsnapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prevsnapshot\"],\n  mapper: {\n    serializedName: \"prevsnapshot\",\n    xmlName: \"prevsnapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const prevSnapshotUrl: OperationParameter = {\n  parameterPath: [\"options\", \"prevSnapshotUrl\"],\n  mapper: {\n    serializedName: \"x-ms-previous-snapshot-url\",\n    xmlName: \"x-ms-previous-snapshot-url\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sequenceNumberAction: OperationParameter = {\n  parameterPath: \"sequenceNumberAction\",\n  mapper: {\n    serializedName: \"x-ms-sequence-number-action\",\n    required: true,\n    xmlName: \"x-ms-sequence-number-action\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"max\", \"update\", \"increment\"]\n    }\n  }\n};\n\nexport const comp21: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"incrementalcopy\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blobType1: OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    defaultValue: \"AppendBlob\",\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp22: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"appendblock\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const maxSize: OperationParameter = {\n  parameterPath: [\"options\", \"appendPositionAccessConditions\", \"maxSize\"],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-maxsize\",\n    xmlName: \"x-ms-blob-condition-maxsize\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const appendPosition: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"appendPositionAccessConditions\",\n    \"appendPosition\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-appendpos\",\n    xmlName: \"x-ms-blob-condition-appendpos\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const sourceRange1: OperationParameter = {\n  parameterPath: [\"options\", \"sourceRange\"],\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    xmlName: \"x-ms-source-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp23: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"seal\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blobType2: OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    defaultValue: \"BlockBlob\",\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const copySourceBlobProperties: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceBlobProperties\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-blob-properties\",\n    xmlName: \"x-ms-copy-source-blob-properties\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const comp24: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"block\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blockId: OperationQueryParameter = {\n  parameterPath: \"blockId\",\n  mapper: {\n    serializedName: \"blockid\",\n    required: true,\n    xmlName: \"blockid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blocks: OperationParameter = {\n  parameterPath: \"blocks\",\n  mapper: BlockLookupListMapper\n};\n\nexport const comp25: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"blocklist\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const listType: OperationQueryParameter = {\n  parameterPath: \"listType\",\n  mapper: {\n    defaultValue: \"committed\",\n    serializedName: \"blocklisttype\",\n    required: true,\n    xmlName: \"blocklisttype\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"committed\", \"uncommitted\", \"all\"]\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  BlobServiceProperties,\n  ServiceSetPropertiesOptionalParams,\n  ServiceSetPropertiesResponse,\n  ServiceGetPropertiesOptionalParams,\n  ServiceGetPropertiesResponse,\n  ServiceGetStatisticsOptionalParams,\n  ServiceGetStatisticsResponse,\n  ServiceListContainersSegmentOptionalParams,\n  ServiceListContainersSegmentResponse,\n  KeyInfo,\n  ServiceGetUserDelegationKeyOptionalParams,\n  ServiceGetUserDelegationKeyResponse,\n  ServiceGetAccountInfoResponse,\n  ServiceSubmitBatchOptionalParams,\n  ServiceSubmitBatchResponse,\n  ServiceFilterBlobsOptionalParams,\n  ServiceFilterBlobsResponse\n} from \"../models\";\n\n/** Class representing a Service. */\nexport class Service {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class Service class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Sets properties for a storage account's Blob service endpoint, including properties for Storage\n   * Analytics and CORS (Cross-Origin Resource Sharing) rules\n   * @param blobServiceProperties The StorageService properties.\n   * @param options The options parameters.\n   */\n  setProperties(\n    blobServiceProperties: BlobServiceProperties,\n    options?: ServiceSetPropertiesOptionalParams\n  ): Promise<ServiceSetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      blobServiceProperties,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setPropertiesOperationSpec\n    ) as Promise<ServiceSetPropertiesResponse>;\n  }\n\n  /**\n   * gets the properties of a storage account's Blob service, including properties for Storage Analytics\n   * and CORS (Cross-Origin Resource Sharing) rules.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: ServiceGetPropertiesOptionalParams\n  ): Promise<ServiceGetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPropertiesOperationSpec\n    ) as Promise<ServiceGetPropertiesResponse>;\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only available on the\n   * secondary location endpoint when read-access geo-redundant replication is enabled for the storage\n   * account.\n   * @param options The options parameters.\n   */\n  getStatistics(\n    options?: ServiceGetStatisticsOptionalParams\n  ): Promise<ServiceGetStatisticsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getStatisticsOperationSpec\n    ) as Promise<ServiceGetStatisticsResponse>;\n  }\n\n  /**\n   * The List Containers Segment operation returns a list of the containers under the specified account\n   * @param options The options parameters.\n   */\n  listContainersSegment(\n    options?: ServiceListContainersSegmentOptionalParams\n  ): Promise<ServiceListContainersSegmentResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listContainersSegmentOperationSpec\n    ) as Promise<ServiceListContainersSegmentResponse>;\n  }\n\n  /**\n   * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n   * bearer token authentication.\n   * @param keyInfo Key information\n   * @param options The options parameters.\n   */\n  getUserDelegationKey(\n    keyInfo: KeyInfo,\n    options?: ServiceGetUserDelegationKeyOptionalParams\n  ): Promise<ServiceGetUserDelegationKeyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      keyInfo,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getUserDelegationKeyOperationSpec\n    ) as Promise<ServiceGetUserDelegationKeyResponse>;\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param options The options parameters.\n   */\n  getAccountInfo(\n    options?: coreHttp.OperationOptions\n  ): Promise<ServiceGetAccountInfoResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getAccountInfoOperationSpec\n    ) as Promise<ServiceGetAccountInfoResponse>;\n  }\n\n  /**\n   * The Batch operation allows multiple API calls to be embedded into a single HTTP request.\n   * @param contentLength The length of the request.\n   * @param multipartContentType Required. The value of this header must be multipart/mixed with a batch\n   *                             boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  submitBatch(\n    contentLength: number,\n    multipartContentType: string,\n    body: coreHttp.HttpRequestBody,\n    options?: ServiceSubmitBatchOptionalParams\n  ): Promise<ServiceSubmitBatchResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      contentLength,\n      multipartContentType,\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      submitBatchOperationSpec\n    ) as Promise<ServiceSubmitBatchResponse>;\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs across all containers whose tags match a\n   * given search expression.  Filter blobs searches across all containers within a storage account but\n   * can be scoped within the expression to a single container.\n   * @param options The options parameters.\n   */\n  filterBlobs(\n    options?: ServiceFilterBlobsOptionalParams\n  ): Promise<ServiceFilterBlobsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      filterBlobsOperationSpec\n    ) as Promise<ServiceFilterBlobsResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\n\nconst setPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ServiceSetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSetPropertiesExceptionHeaders\n    }\n  },\n  requestBody: Parameters.blobServiceProperties,\n  queryParameters: [\n    Parameters.restype,\n    Parameters.comp,\n    Parameters.timeoutInSeconds\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceProperties,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.restype,\n    Parameters.comp,\n    Parameters.timeoutInSeconds\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getStatisticsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceStatistics,\n      headersMapper: Mappers.ServiceGetStatisticsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetStatisticsExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.restype,\n    Parameters.timeoutInSeconds,\n    Parameters.comp1\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst listContainersSegmentOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListContainersSegmentResponse,\n      headersMapper: Mappers.ServiceListContainersSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceListContainersSegmentExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp2,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.include\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getUserDelegationKeyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserDelegationKey,\n      headersMapper: Mappers.ServiceGetUserDelegationKeyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetUserDelegationKeyExceptionHeaders\n    }\n  },\n  requestBody: Parameters.keyInfo,\n  queryParameters: [\n    Parameters.restype,\n    Parameters.timeoutInSeconds,\n    Parameters.comp3\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\nconst getAccountInfoOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ServiceGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetAccountInfoExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.comp, Parameters.restype1],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst submitBatchOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\"\n      },\n      headersMapper: Mappers.ServiceSubmitBatchHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSubmitBatchExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp4],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.multipartContentType\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\nconst filterBlobsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FilterBlobSegment,\n      headersMapper: Mappers.ServiceFilterBlobsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceFilterBlobsExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.comp5,\n    Parameters.where\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  ContainerCreateOptionalParams,\n  ContainerCreateResponse,\n  ContainerGetPropertiesOptionalParams,\n  ContainerGetPropertiesResponse,\n  ContainerDeleteOptionalParams,\n  ContainerDeleteResponse,\n  ContainerSetMetadataOptionalParams,\n  ContainerSetMetadataResponse,\n  ContainerGetAccessPolicyOptionalParams,\n  ContainerGetAccessPolicyResponse,\n  ContainerSetAccessPolicyOptionalParams,\n  ContainerSetAccessPolicyResponse,\n  ContainerRestoreOptionalParams,\n  ContainerRestoreResponse,\n  ContainerRenameOptionalParams,\n  ContainerRenameResponse,\n  ContainerSubmitBatchOptionalParams,\n  ContainerSubmitBatchResponse,\n  ContainerFilterBlobsOptionalParams,\n  ContainerFilterBlobsResponse,\n  ContainerAcquireLeaseOptionalParams,\n  ContainerAcquireLeaseResponse,\n  ContainerReleaseLeaseOptionalParams,\n  ContainerReleaseLeaseResponse,\n  ContainerRenewLeaseOptionalParams,\n  ContainerRenewLeaseResponse,\n  ContainerBreakLeaseOptionalParams,\n  ContainerBreakLeaseResponse,\n  ContainerChangeLeaseOptionalParams,\n  ContainerChangeLeaseResponse,\n  ContainerListBlobFlatSegmentOptionalParams,\n  ContainerListBlobFlatSegmentResponse,\n  ContainerListBlobHierarchySegmentOptionalParams,\n  ContainerListBlobHierarchySegmentResponse,\n  ContainerGetAccountInfoResponse\n} from \"../models\";\n\n/** Class representing a Container. */\nexport class Container {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class Container class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * creates a new container under the specified account. If the container with the same name already\n   * exists, the operation fails\n   * @param options The options parameters.\n   */\n  create(\n    options?: ContainerCreateOptionalParams\n  ): Promise<ContainerCreateResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createOperationSpec\n    ) as Promise<ContainerCreateResponse>;\n  }\n\n  /**\n   * returns all user-defined metadata and system properties for the specified container. The data\n   * returned does not include the container's list of blobs\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: ContainerGetPropertiesOptionalParams\n  ): Promise<ContainerGetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPropertiesOperationSpec\n    ) as Promise<ContainerGetPropertiesResponse>;\n  }\n\n  /**\n   * operation marks the specified container for deletion. The container and any blobs contained within\n   * it are later deleted during garbage collection\n   * @param options The options parameters.\n   */\n  delete(\n    options?: ContainerDeleteOptionalParams\n  ): Promise<ContainerDeleteResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteOperationSpec\n    ) as Promise<ContainerDeleteResponse>;\n  }\n\n  /**\n   * operation sets one or more user-defined name-value pairs for the specified container.\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: ContainerSetMetadataOptionalParams\n  ): Promise<ContainerSetMetadataResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setMetadataOperationSpec\n    ) as Promise<ContainerSetMetadataResponse>;\n  }\n\n  /**\n   * gets the permissions for the specified container. The permissions indicate whether container data\n   * may be accessed publicly.\n   * @param options The options parameters.\n   */\n  getAccessPolicy(\n    options?: ContainerGetAccessPolicyOptionalParams\n  ): Promise<ContainerGetAccessPolicyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getAccessPolicyOperationSpec\n    ) as Promise<ContainerGetAccessPolicyResponse>;\n  }\n\n  /**\n   * sets the permissions for the specified container. The permissions indicate whether blobs in a\n   * container may be accessed publicly.\n   * @param options The options parameters.\n   */\n  setAccessPolicy(\n    options?: ContainerSetAccessPolicyOptionalParams\n  ): Promise<ContainerSetAccessPolicyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setAccessPolicyOperationSpec\n    ) as Promise<ContainerSetAccessPolicyResponse>;\n  }\n\n  /**\n   * Restores a previously-deleted container.\n   * @param options The options parameters.\n   */\n  restore(\n    options?: ContainerRestoreOptionalParams\n  ): Promise<ContainerRestoreResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      restoreOperationSpec\n    ) as Promise<ContainerRestoreResponse>;\n  }\n\n  /**\n   * Renames an existing container.\n   * @param sourceContainerName Required.  Specifies the name of the container to rename.\n   * @param options The options parameters.\n   */\n  rename(\n    sourceContainerName: string,\n    options?: ContainerRenameOptionalParams\n  ): Promise<ContainerRenameResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      sourceContainerName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      renameOperationSpec\n    ) as Promise<ContainerRenameResponse>;\n  }\n\n  /**\n   * The Batch operation allows multiple API calls to be embedded into a single HTTP request.\n   * @param contentLength The length of the request.\n   * @param multipartContentType Required. The value of this header must be multipart/mixed with a batch\n   *                             boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  submitBatch(\n    contentLength: number,\n    multipartContentType: string,\n    body: coreHttp.HttpRequestBody,\n    options?: ContainerSubmitBatchOptionalParams\n  ): Promise<ContainerSubmitBatchResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      contentLength,\n      multipartContentType,\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      submitBatchOperationSpec\n    ) as Promise<ContainerSubmitBatchResponse>;\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs in a container whose tags match a given\n   * search expression.  Filter blobs searches within the given container.\n   * @param options The options parameters.\n   */\n  filterBlobs(\n    options?: ContainerFilterBlobsOptionalParams\n  ): Promise<ContainerFilterBlobsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      filterBlobsOperationSpec\n    ) as Promise<ContainerFilterBlobsResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param options The options parameters.\n   */\n  acquireLease(\n    options?: ContainerAcquireLeaseOptionalParams\n  ): Promise<ContainerAcquireLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      acquireLeaseOperationSpec\n    ) as Promise<ContainerAcquireLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  releaseLease(\n    leaseId: string,\n    options?: ContainerReleaseLeaseOptionalParams\n  ): Promise<ContainerReleaseLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      releaseLeaseOperationSpec\n    ) as Promise<ContainerReleaseLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  renewLease(\n    leaseId: string,\n    options?: ContainerRenewLeaseOptionalParams\n  ): Promise<ContainerRenewLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      renewLeaseOperationSpec\n    ) as Promise<ContainerRenewLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param options The options parameters.\n   */\n  breakLease(\n    options?: ContainerBreakLeaseOptionalParams\n  ): Promise<ContainerBreakLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      breakLeaseOperationSpec\n    ) as Promise<ContainerBreakLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration can\n   * be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   *                        (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   *                        (String) for a list of valid GUID string formats.\n   * @param options The options parameters.\n   */\n  changeLease(\n    leaseId: string,\n    proposedLeaseId: string,\n    options?: ContainerChangeLeaseOptionalParams\n  ): Promise<ContainerChangeLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      proposedLeaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      changeLeaseOperationSpec\n    ) as Promise<ContainerChangeLeaseResponse>;\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param options The options parameters.\n   */\n  listBlobFlatSegment(\n    options?: ContainerListBlobFlatSegmentOptionalParams\n  ): Promise<ContainerListBlobFlatSegmentResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listBlobFlatSegmentOperationSpec\n    ) as Promise<ContainerListBlobFlatSegmentResponse>;\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   *                  element in the response body that acts as a placeholder for all blobs whose names begin with the\n   *                  same substring up to the appearance of the delimiter character. The delimiter may be a single\n   *                  character or a string.\n   * @param options The options parameters.\n   */\n  listBlobHierarchySegment(\n    delimiter: string,\n    options?: ContainerListBlobHierarchySegmentOptionalParams\n  ): Promise<ContainerListBlobHierarchySegmentResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      delimiter,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listBlobHierarchySegmentOperationSpec\n    ) as Promise<ContainerListBlobHierarchySegmentResponse>;\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param options The options parameters.\n   */\n  getAccountInfo(\n    options?: coreHttp.OperationOptions\n  ): Promise<ContainerGetAccountInfoResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getAccountInfoOperationSpec\n    ) as Promise<ContainerGetAccountInfoResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerCreateExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.access,\n    Parameters.defaultEncryptionScope,\n    Parameters.preventEncryptionScopeOverride\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerDeleteExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSetMetadataExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp6\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"SignedIdentifier\" }\n          }\n        },\n        serializedName: \"SignedIdentifiers\",\n        xmlName: \"SignedIdentifiers\",\n        xmlIsWrapped: true,\n        xmlElementName: \"SignedIdentifier\"\n      },\n      headersMapper: Mappers.ContainerGetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetAccessPolicyExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp7\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSetAccessPolicyExceptionHeaders\n    }\n  },\n  requestBody: Parameters.containerAcl,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp7\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.access,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\nconst restoreOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerRestoreHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRestoreExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp8\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.deletedContainerName,\n    Parameters.deletedContainerVersion\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst renameOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerRenameHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRenameExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp9\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.sourceContainerName,\n    Parameters.sourceLeaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst submitBatchOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\"\n      },\n      headersMapper: Mappers.ContainerSubmitBatchHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSubmitBatchExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp4,\n    Parameters.restype2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.multipartContentType\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\nconst filterBlobsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FilterBlobSegment,\n      headersMapper: Mappers.ContainerFilterBlobsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerFilterBlobsExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.comp5,\n    Parameters.where,\n    Parameters.restype2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst acquireLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerAcquireLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action,\n    Parameters.duration,\n    Parameters.proposedLeaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst releaseLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerReleaseLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action1,\n    Parameters.leaseId1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst renewLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerRenewLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRenewLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action2\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst breakLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerBreakLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action3,\n    Parameters.breakPeriod\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst changeLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerChangeLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp10\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action4,\n    Parameters.proposedLeaseId1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst listBlobFlatSegmentOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsFlatSegmentResponse,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp2,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.restype2,\n    Parameters.include1\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst listBlobHierarchySegmentOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsHierarchySegmentResponse,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp2,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.restype2,\n    Parameters.include1,\n    Parameters.delimiter\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getAccountInfoOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetAccountInfoExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.comp, Parameters.restype1],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  OperationTracingOptions,\n  Span,\n  SpanOptions,\n  SpanKind,\n  setSpan,\n  context as otContext,\n  getTracer\n} from \"./interfaces\";\nimport { trace, INVALID_SPAN_CONTEXT } from \"@opentelemetry/api\";\n\n/**\n * Arguments for `createSpanFunction` that allow you to specify the\n * prefix for each created span as well as the `az.namespace` attribute.\n *\n * @hidden\n */\nexport interface CreateSpanFunctionArgs {\n  /**\n   * Package name prefix.\n   *\n   * NOTE: if this is empty no prefix will be applied to created Span names.\n   */\n  packagePrefix: string;\n  /**\n   * Service namespace\n   *\n   * NOTE: if this is empty no `az.namespace` attribute will be added to created Spans.\n   */\n  namespace: string;\n}\n\nexport function isTracingDisabled(): boolean {\n  if (typeof process === \"undefined\") {\n    // not supported in browser for now without polyfills\n    return false;\n  }\n\n  const azureTracingDisabledValue = process.env.AZURE_TRACING_DISABLED?.toLowerCase();\n\n  if (azureTracingDisabledValue === \"false\" || azureTracingDisabledValue === \"0\") {\n    return false;\n  }\n\n  return Boolean(azureTracingDisabledValue);\n}\n\n/**\n * Creates a function that can be used to create spans using the global tracer.\n *\n * Usage:\n *\n * ```typescript\n * // once\n * const createSpan = createSpanFunction({ packagePrefix: \"Azure.Data.AppConfiguration\", namespace: \"Microsoft.AppConfiguration\" });\n *\n * // in each operation\n * const span = createSpan(\"deleteConfigurationSetting\", operationOptions);\n *    // code...\n * span.end();\n * ```\n *\n * @hidden\n * @param args - allows configuration of the prefix for each span as well as the az.namespace field.\n */\nexport function createSpanFunction(args: CreateSpanFunctionArgs) {\n  return function<T extends { tracingOptions?: OperationTracingOptions }>(\n    operationName: string,\n    operationOptions: T | undefined\n  ): { span: Span; updatedOptions: T } {\n    const tracer = getTracer();\n    const tracingOptions = operationOptions?.tracingOptions || {};\n    const spanOptions: SpanOptions = {\n      kind: SpanKind.INTERNAL,\n      ...tracingOptions.spanOptions\n    };\n\n    const spanName = args.packagePrefix ? `${args.packagePrefix}.${operationName}` : operationName;\n\n    let span: Span;\n    if (isTracingDisabled()) {\n      span = trace.wrapSpanContext(INVALID_SPAN_CONTEXT);\n    } else {\n      span = tracer.startSpan(spanName, spanOptions, tracingOptions.tracingContext);\n    }\n\n    if (args.namespace) {\n      span.setAttribute(\"az.namespace\", args.namespace);\n    }\n\n    let newSpanOptions = tracingOptions.spanOptions || {};\n\n    if (span.isRecording() && args.namespace) {\n      newSpanOptions = {\n        ...tracingOptions.spanOptions,\n        attributes: {\n          ...spanOptions.attributes,\n          \"az.namespace\": args.namespace\n        }\n      };\n    }\n\n    const newTracingOptions: Required<OperationTracingOptions> = {\n      ...tracingOptions,\n      spanOptions: newSpanOptions,\n      tracingContext: setSpan(tracingOptions.tracingContext || otContext.active(), span)\n    };\n\n    const newOperationOptions = {\n      ...operationOptions,\n      tracingOptions: newTracingOptions\n    } as T & { tracingOptions: Required<OperationTracingOptions> };\n\n    return {\n      span,\n      updatedOptions: newOperationOptions\n    };\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SpanContext, TraceFlags } from \"../interfaces\";\n\nconst VERSION = \"00\";\n\n/**\n * Generates a `SpanContext` given a `traceparent` header value.\n * @param traceParent - Serialized span context data as a `traceparent` header value.\n * @returns The `SpanContext` generated from the `traceparent` value.\n */\nexport function extractSpanContextFromTraceParentHeader(\n  traceParentHeader: string\n): SpanContext | undefined {\n  const parts = traceParentHeader.split(\"-\");\n\n  if (parts.length !== 4) {\n    return;\n  }\n\n  const [version, traceId, spanId, traceOptions] = parts;\n\n  if (version !== VERSION) {\n    return;\n  }\n\n  const traceFlags = parseInt(traceOptions, 16);\n\n  const spanContext: SpanContext = {\n    spanId,\n    traceId,\n    traceFlags\n  };\n\n  return spanContext;\n}\n\n/**\n * Generates a `traceparent` value given a span context.\n * @param spanContext - Contains context for a specific span.\n * @returns The `spanContext` represented as a `traceparent` value.\n */\nexport function getTraceParentHeader(spanContext: SpanContext): string | undefined {\n  const missingFields: string[] = [];\n  if (!spanContext.traceId) {\n    missingFields.push(\"traceId\");\n  }\n  if (!spanContext.spanId) {\n    missingFields.push(\"spanId\");\n  }\n\n  if (missingFields.length) {\n    return;\n  }\n\n  const flags = spanContext.traceFlags || TraceFlags.NONE;\n  const hexFlags = flags.toString(16);\n  const traceFlags = hexFlags.length === 1 ? `0${hexFlags}` : hexFlags;\n\n  // https://www.w3.org/TR/trace-context/#traceparent-header-field-values\n  return `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-${traceFlags}`;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { log } from \"./log\";\n\n/**\n * A simple mechanism for enabling logging.\n * Intended to mimic the publicly available `debug` package.\n */\nexport interface Debug {\n  /**\n   * Creates a new logger with the given namespace.\n   */\n  (namespace: string): Debugger;\n  /**\n   * The default log method (defaults to console)\n   */\n  log: (...args: any[]) => void;\n  /**\n   * Enables a particular set of namespaces.\n   * To enable multiple separate them with commas, e.g. \"info,debug\".\n   * Supports wildcards, e.g. \"azure:*\"\n   * Supports skip syntax, e.g. \"azure:*,-azure:storage:*\" will enable\n   * everything under azure except for things under azure:storage.\n   */\n  enable: (namespaces: string) => void;\n  /**\n   * Checks if a particular namespace is enabled.\n   */\n  enabled: (namespace: string) => boolean;\n  /**\n   * Disables all logging, returns what was previously enabled.\n   */\n  disable: () => string;\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\nconst debugEnvVariable =\n  (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\n\nlet enabledString: string | undefined;\nlet enabledNamespaces: RegExp[] = [];\nlet skippedNamespaces: RegExp[] = [];\nconst debuggers: Debugger[] = [];\n\nif (debugEnvVariable) {\n  enable(debugEnvVariable);\n}\n\nconst debugObj: Debug = Object.assign(\n  (namespace: string): Debugger => {\n    return createDebugger(namespace);\n  },\n  {\n    enable,\n    enabled,\n    disable,\n    log\n  }\n);\n\nfunction enable(namespaces: string): void {\n  enabledString = namespaces;\n  enabledNamespaces = [];\n  skippedNamespaces = [];\n  const wildcard = /\\*/g;\n  const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n  for (const ns of namespaceList) {\n    if (ns.startsWith(\"-\")) {\n      skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n    } else {\n      enabledNamespaces.push(new RegExp(`^${ns}$`));\n    }\n  }\n  for (const instance of debuggers) {\n    instance.enabled = enabled(instance.namespace);\n  }\n}\n\nfunction enabled(namespace: string): boolean {\n  if (namespace.endsWith(\"*\")) {\n    return true;\n  }\n\n  for (const skipped of skippedNamespaces) {\n    if (skipped.test(namespace)) {\n      return false;\n    }\n  }\n  for (const enabledNamespace of enabledNamespaces) {\n    if (enabledNamespace.test(namespace)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction disable(): string {\n  const result = enabledString || \"\";\n  enable(\"\");\n  return result;\n}\n\nfunction createDebugger(namespace: string): Debugger {\n  const newDebugger: Debugger = Object.assign(debug, {\n    enabled: enabled(namespace),\n    destroy,\n    log: debugObj.log,\n    namespace,\n    extend\n  });\n\n  function debug(...args: any[]): void {\n    if (!newDebugger.enabled) {\n      return;\n    }\n    if (args.length > 0) {\n      args[0] = `${namespace} ${args[0]}`;\n    }\n    newDebugger.log(...args);\n  }\n\n  debuggers.push(newDebugger);\n\n  return newDebugger;\n}\n\nfunction destroy(this: Debugger): boolean {\n  const index = debuggers.indexOf(this);\n  if (index >= 0) {\n    debuggers.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n\nfunction extend(this: Debugger, namespace: string): Debugger {\n  const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n  newDebugger.log = this.log;\n  return newDebugger;\n}\n\nexport default debugObj;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport util from \"util\";\nimport { EOL } from \"os\";\n\nexport function log(message: unknown, ...args: any[]): void {\n  process.stderr.write(`${util.format(message, ...args)}${EOL}`);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport debug, { Debugger } from \"./debug\";\nexport { Debugger } from \"./debug\";\n\nconst registeredLoggers = new Set<AzureDebugger>();\nconst logLevelFromEnv =\n  (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\n\nlet azureLogLevel: AzureLogLevel | undefined;\n\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger: AzureClientLogger = debug(\"azure\");\nAzureLogger.log = (...args) => {\n  debug.log(...args);\n};\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type AzureLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\n\ntype AzureDebugger = Debugger & { level: AzureLogLevel };\n\n/**\n * An AzureClientLogger is a function that can log to an appropriate severity level.\n */\nexport type AzureClientLogger = Debugger;\n\nif (logLevelFromEnv) {\n  // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n  if (isAzureLogLevel(logLevelFromEnv)) {\n    setLogLevel(logLevelFromEnv);\n  } else {\n    console.error(\n      `AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\n        \", \"\n      )}.`\n    );\n  }\n}\n\n/**\n * Immediately enables logging at the specified log level.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level?: AzureLogLevel): void {\n  if (level && !isAzureLogLevel(level)) {\n    throw new Error(\n      `Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`\n    );\n  }\n  azureLogLevel = level;\n\n  const enabledNamespaces = [];\n  for (const logger of registeredLoggers) {\n    if (shouldEnable(logger)) {\n      enabledNamespaces.push(logger.namespace);\n    }\n  }\n\n  debug.enable(enabledNamespaces.join(\",\"));\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel(): AzureLogLevel | undefined {\n  return azureLogLevel;\n}\n\nconst levelMap = {\n  verbose: 400,\n  info: 300,\n  warning: 200,\n  error: 100\n};\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface AzureLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed trbouleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace: string): AzureLogger {\n  const clientRootLogger: AzureClientLogger = AzureLogger.extend(namespace);\n  patchLogMethod(AzureLogger, clientRootLogger);\n  return {\n    error: createLogger(clientRootLogger, \"error\"),\n    warning: createLogger(clientRootLogger, \"warning\"),\n    info: createLogger(clientRootLogger, \"info\"),\n    verbose: createLogger(clientRootLogger, \"verbose\")\n  };\n}\n\nfunction patchLogMethod(parent: AzureClientLogger, child: AzureClientLogger | AzureDebugger): void {\n  child.log = (...args) => {\n    parent.log(...args);\n  };\n}\n\nfunction createLogger(parent: AzureClientLogger, level: AzureLogLevel): AzureDebugger {\n  const logger: AzureDebugger = Object.assign(parent.extend(level), {\n    level\n  });\n\n  patchLogMethod(parent, logger);\n\n  if (shouldEnable(logger)) {\n    const enabledNamespaces = debug.disable();\n    debug.enable(enabledNamespaces + \",\" + logger.namespace);\n  }\n\n  registeredLoggers.add(logger);\n\n  return logger;\n}\n\nfunction shouldEnable(logger: AzureDebugger): boolean {\n  if (azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction isAzureLogLevel(logLevel: string): logLevel is AzureLogLevel {\n  return AZURE_LOG_LEVELS.includes(logLevel as any);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-http\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport {\n  Span,\n  SpanKind,\n  SpanStatusCode,\n  createSpanFunction,\n  getTraceParentHeader,\n  isSpanContextValid,\n} from \"@azure/core-tracing\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport { logger } from \"../log\";\n\nconst createSpan = createSpanFunction({\n  packagePrefix: \"\",\n  namespace: \"\",\n});\n\n/**\n * Options to customize the tracing policy.\n */\nexport interface TracingPolicyOptions {\n  /**\n   * User agent used to better identify the outgoing requests traced by the tracing policy.\n   */\n  userAgent?: string;\n}\n\n/**\n * Creates a policy that wraps outgoing requests with a tracing span.\n * @param tracingOptions - Tracing options.\n * @returns An instance of the {@link TracingPolicy} class.\n */\nexport function tracingPolicy(tracingOptions: TracingPolicyOptions = {}): RequestPolicyFactory {\n  return {\n    create(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n      return new TracingPolicy(nextPolicy, options, tracingOptions);\n    },\n  };\n}\n\n/**\n * A policy that wraps outgoing requests with a tracing span.\n */\nexport class TracingPolicy extends BaseRequestPolicy {\n  private userAgent?: string;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    tracingOptions: TracingPolicyOptions\n  ) {\n    super(nextPolicy, options);\n    this.userAgent = tracingOptions.userAgent;\n  }\n\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!request.tracingContext) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    const span = this.tryCreateSpan(request);\n\n    if (!span) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    try {\n      const response = await this._nextPolicy.sendRequest(request);\n      this.tryProcessResponse(span, response);\n      return response;\n    } catch (err: any) {\n      this.tryProcessError(span, err);\n      throw err;\n    }\n  }\n\n  tryCreateSpan(request: WebResourceLike): Span | undefined {\n    try {\n      // Passing spanOptions as part of tracingOptions to maintain compatibility @azure/core-tracing@preview.13 and earlier.\n      // We can pass this as a separate parameter once we upgrade to the latest core-tracing.\n      const { span } = createSpan(`HTTP ${request.method}`, {\n        tracingOptions: {\n          spanOptions: {\n            ...(request as any).spanOptions,\n            kind: SpanKind.CLIENT,\n          },\n          tracingContext: request.tracingContext,\n        },\n      });\n\n      // If the span is not recording, don't do any more work.\n      if (!span.isRecording()) {\n        span.end();\n        return undefined;\n      }\n\n      const namespaceFromContext = request.tracingContext?.getValue(Symbol.for(\"az.namespace\"));\n\n      if (typeof namespaceFromContext === \"string\") {\n        span.setAttribute(\"az.namespace\", namespaceFromContext);\n      }\n\n      span.setAttributes({\n        \"http.method\": request.method,\n        \"http.url\": request.url,\n        requestId: request.requestId,\n      });\n\n      if (this.userAgent) {\n        span.setAttribute(\"http.user_agent\", this.userAgent);\n      }\n\n      // set headers\n      const spanContext = span.spanContext();\n      const traceParentHeader = getTraceParentHeader(spanContext);\n      if (traceParentHeader && isSpanContextValid(spanContext)) {\n        request.headers.set(\"traceparent\", traceParentHeader);\n        const traceState = spanContext.traceState && spanContext.traceState.serialize();\n        // if tracestate is set, traceparent MUST be set, so only set tracestate after traceparent\n        if (traceState) {\n          request.headers.set(\"tracestate\", traceState);\n        }\n      }\n      return span;\n    } catch (error: any) {\n      logger.warning(`Skipping creating a tracing span due to an error: ${error.message}`);\n      return undefined;\n    }\n  }\n\n  private tryProcessError(span: Span, err: any): void {\n    try {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: err.message,\n      });\n\n      if (err.statusCode) {\n        span.setAttribute(\"http.status_code\", err.statusCode);\n      }\n      span.end();\n    } catch (error: any) {\n      logger.warning(`Skipping tracing span processing due to an error: ${error.message}`);\n    }\n  }\n\n  private tryProcessResponse(span: Span, response: HttpOperationResponse): void {\n    try {\n      span.setAttribute(\"http.status_code\", response.status);\n      const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n      if (serviceRequestId) {\n        span.setAttribute(\"serviceRequestId\", serviceRequestId);\n      }\n      span.setStatus({\n        code: SpanStatusCode.OK,\n      });\n      span.end();\n    } catch (error: any) {\n      logger.warning(`Skipping tracing span processing due to an error: ${error.message}`);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Options for how HTTP connections should be maintained for future\n * requests.\n */\nexport interface KeepAliveOptions {\n  /**\n   * When true, connections will be kept alive for multiple requests.\n   * Defaults to true.\n   */\n  enable: boolean;\n}\n\n/**\n * By default, HTTP connections are maintained for future requests.\n */\nexport const DefaultKeepAliveOptions: KeepAliveOptions = {\n  enable: true,\n};\n\n/**\n * Creates a policy that controls whether HTTP connections are maintained on future requests.\n * @param keepAliveOptions - Keep alive options. By default, HTTP connections are maintained for future requests.\n * @returns An instance of the {@link KeepAlivePolicy}\n */\nexport function keepAlivePolicy(keepAliveOptions?: KeepAliveOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n    },\n  };\n}\n\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\nexport class KeepAlivePolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param keepAliveOptions -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private readonly keepAliveOptions: KeepAliveOptions\n  ) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   * @returns\n   */\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    request.keepAlive = this.keepAliveOptions.enable;\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Creates a policy that assigns a unique request id to outgoing requests.\n * @param requestIdHeaderName - The name of the header to use when assigning the unique id to the request.\n */\nexport function generateClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\"\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    },\n  };\n}\n\nexport class GenerateClientRequestIdPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private _requestIdHeaderName: string\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!request.headers.contains(this._requestIdHeaderName)) {\n      request.headers.set(this._requestIdHeaderName, request.requestId);\n    }\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as xml2js from \"xml2js\";\nimport { SerializerOptions, XML_ATTRKEY, XML_CHARKEY } from \"./serializer.common\";\n\n// Note: The reason we re-define all of the xml2js default settings (version 2.0) here is because the default settings object exposed\n// by the xm2js library is mutable. See https://github.com/Leonidas-from-XIV/node-xml2js/issues/536\n// By creating a new copy of the settings each time we instantiate the parser,\n// we are safeguarding against the possibility of the default settings being mutated elsewhere unintentionally.\nconst xml2jsDefaultOptionsV2: xml2js.OptionsV2 = {\n  explicitCharkey: false,\n  trim: false,\n  normalize: false,\n  normalizeTags: false,\n  attrkey: XML_ATTRKEY,\n  explicitArray: true,\n  ignoreAttrs: false,\n  mergeAttrs: false,\n  explicitRoot: true,\n  validator: undefined,\n  xmlns: false,\n  explicitChildren: false,\n  preserveChildrenOrder: false,\n  childkey: \"$$\",\n  charsAsChildren: false,\n  includeWhiteChars: false,\n  async: false,\n  strict: true,\n  attrNameProcessors: undefined,\n  attrValueProcessors: undefined,\n  tagNameProcessors: undefined,\n  valueProcessors: undefined,\n  rootName: \"root\",\n  xmldec: {\n    version: \"1.0\",\n    encoding: \"UTF-8\",\n    standalone: true,\n  },\n  doctype: undefined,\n  renderOpts: {\n    pretty: true,\n    indent: \"  \",\n    newline: \"\\n\",\n  },\n  headless: false,\n  chunkSize: 10000,\n  emptyTag: \"\",\n  cdata: false,\n};\n\n// The xml2js settings for general XML parsing operations.\nconst xml2jsParserSettings: any = Object.assign({}, xml2jsDefaultOptionsV2);\nxml2jsParserSettings.explicitArray = false;\n\n// The xml2js settings for general XML building operations.\nconst xml2jsBuilderSettings: any = Object.assign({}, xml2jsDefaultOptionsV2);\nxml2jsBuilderSettings.explicitArray = false;\nxml2jsBuilderSettings.renderOpts = {\n  pretty: false,\n};\n\n/**\n * Converts given JSON object to XML string\n * @param obj - JSON object to be converted into XML string\n * @param opts - Options that govern the parsing of given JSON object\n */\nexport function stringifyXML(obj: unknown, opts: SerializerOptions = {}): string {\n  xml2jsBuilderSettings.rootName = opts.rootName;\n  xml2jsBuilderSettings.charkey = opts.xmlCharKey ?? XML_CHARKEY;\n  const builder = new xml2js.Builder(xml2jsBuilderSettings);\n  return builder.buildObject(obj);\n}\n\n/**\n * Converts given XML string into JSON\n * @param str - String containing the XML content to be parsed into JSON\n * @param opts - Options that govern the parsing of given xml string\n */\nexport function parseXML(str: string, opts: SerializerOptions = {}): Promise<any> {\n  xml2jsParserSettings.explicitRoot = !!opts.includeRoot;\n  xml2jsParserSettings.charkey = opts.xmlCharKey ?? XML_CHARKEY;\n  const xmlParser = new xml2js.Parser(xml2jsParserSettings);\n  return new Promise((resolve, reject) => {\n    if (!str) {\n      reject(new Error(\"Document is empty\"));\n    } else {\n      xmlParser.parseString(str, (err: any, res: any) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(res);\n        }\n      });\n    }\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { SerializerOptions, XML_CHARKEY } from \"../util/serializer.common\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { MapperType } from \"../serializer\";\nimport { OperationResponse } from \"../operationResponse\";\nimport { OperationSpec } from \"../operationSpec\";\nimport { RestError } from \"../restError\";\nimport { WebResourceLike } from \"../webResource\";\nimport { parseXML } from \"../util/xml\";\n\n/**\n * Options to configure API response deserialization.\n */\nexport interface DeserializationOptions {\n  /**\n   * Configures the expected content types for the deserialization of\n   * JSON and XML response bodies.\n   */\n  expectedContentTypes: DeserializationContentTypes;\n}\n\n/**\n * The content-types that will indicate that an operation response should be deserialized in a\n * particular way.\n */\nexport interface DeserializationContentTypes {\n  /**\n   * The content-types that indicate that an operation response should be deserialized as JSON.\n   * Defaults to [ \"application/json\", \"text/json\" ].\n   */\n  json?: string[];\n\n  /**\n   * The content-types that indicate that an operation response should be deserialized as XML.\n   * Defaults to [ \"application/xml\", \"application/atom+xml\" ].\n   */\n  xml?: string[];\n}\n\n/**\n * Create a new serialization RequestPolicyCreator that will serialized HTTP request bodies as they\n * pass through the HTTP pipeline.\n */\nexport function deserializationPolicy(\n  deserializationContentTypes?: DeserializationContentTypes,\n  parsingOptions?: SerializerOptions\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new DeserializationPolicy(\n        nextPolicy,\n        options,\n        deserializationContentTypes,\n        parsingOptions\n      );\n    },\n  };\n}\n\nexport const defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nexport const defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n\nexport const DefaultDeserializationOptions: DeserializationOptions = {\n  expectedContentTypes: {\n    json: defaultJsonContentTypes,\n    xml: defaultXmlContentTypes,\n  },\n};\n\n/**\n * A RequestPolicy that will deserialize HTTP response bodies and headers as they pass through the\n * HTTP pipeline.\n */\nexport class DeserializationPolicy extends BaseRequestPolicy {\n  public readonly jsonContentTypes: string[];\n  public readonly xmlContentTypes: string[];\n  public readonly xmlCharKey: string;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    requestPolicyOptions: RequestPolicyOptions,\n    deserializationContentTypes?: DeserializationContentTypes,\n    parsingOptions: SerializerOptions = {}\n  ) {\n    super(nextPolicy, requestPolicyOptions);\n\n    this.jsonContentTypes =\n      (deserializationContentTypes && deserializationContentTypes.json) || defaultJsonContentTypes;\n    this.xmlContentTypes =\n      (deserializationContentTypes && deserializationContentTypes.xml) || defaultXmlContentTypes;\n    this.xmlCharKey = parsingOptions.xmlCharKey ?? XML_CHARKEY;\n  }\n\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(request).then((response: HttpOperationResponse) =>\n      deserializeResponseBody(this.jsonContentTypes, this.xmlContentTypes, response, {\n        xmlCharKey: this.xmlCharKey,\n      })\n    );\n  }\n}\n\nfunction getOperationResponse(\n  parsedResponse: HttpOperationResponse\n): undefined | OperationResponse {\n  let result: OperationResponse | undefined;\n  const request: WebResourceLike = parsedResponse.request;\n  const operationSpec: OperationSpec | undefined = request.operationSpec;\n  if (operationSpec) {\n    const operationResponseGetter:\n      | undefined\n      | ((\n          operationSpec: OperationSpec,\n          response: HttpOperationResponse\n        ) => undefined | OperationResponse) = request.operationResponseGetter;\n    if (!operationResponseGetter) {\n      result = operationSpec.responses[parsedResponse.status];\n    } else {\n      result = operationResponseGetter(operationSpec, parsedResponse);\n    }\n  }\n  return result;\n}\n\nfunction shouldDeserializeResponse(parsedResponse: HttpOperationResponse): boolean {\n  const shouldDeserialize: undefined | boolean | ((response: HttpOperationResponse) => boolean) =\n    parsedResponse.request.shouldDeserialize;\n  let result: boolean;\n  if (shouldDeserialize === undefined) {\n    result = true;\n  } else if (typeof shouldDeserialize === \"boolean\") {\n    result = shouldDeserialize;\n  } else {\n    result = shouldDeserialize(parsedResponse);\n  }\n  return result;\n}\n\n/**\n * Given a particular set of content types to parse as either JSON or XML, consumes the HTTP response to produce the result object defined by the request's {@link OperationSpec}.\n * @param jsonContentTypes - Response content types to parse the body as JSON.\n * @param xmlContentTypes  - Response content types to parse the body as XML.\n * @param response - HTTP Response from the pipeline.\n * @param options  - Options to the serializer, mostly for configuring the XML parser if needed.\n * @returns A parsed {@link HttpOperationResponse} object that can be returned by the {@link ServiceClient}.\n */\nexport function deserializeResponseBody(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  response: HttpOperationResponse,\n  options: SerializerOptions = {}\n): Promise<HttpOperationResponse> {\n  const updatedOptions: Required<SerializerOptions> = {\n    rootName: options.rootName ?? \"\",\n    includeRoot: options.includeRoot ?? false,\n    xmlCharKey: options.xmlCharKey ?? XML_CHARKEY,\n  };\n  return parse(jsonContentTypes, xmlContentTypes, response, updatedOptions).then(\n    (parsedResponse) => {\n      if (!shouldDeserializeResponse(parsedResponse)) {\n        return parsedResponse;\n      }\n\n      const operationSpec = parsedResponse.request.operationSpec;\n      if (!operationSpec || !operationSpec.responses) {\n        return parsedResponse;\n      }\n\n      const responseSpec = getOperationResponse(parsedResponse);\n\n      const { error, shouldReturnResponse } = handleErrorResponse(\n        parsedResponse,\n        operationSpec,\n        responseSpec\n      );\n      if (error) {\n        throw error;\n      } else if (shouldReturnResponse) {\n        return parsedResponse;\n      }\n\n      // An operation response spec does exist for current status code, so\n      // use it to deserialize the response.\n      if (responseSpec) {\n        if (responseSpec.bodyMapper) {\n          let valueToDeserialize: any = parsedResponse.parsedBody;\n          if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperType.Sequence) {\n            valueToDeserialize =\n              typeof valueToDeserialize === \"object\"\n                ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName!]\n                : [];\n          }\n          try {\n            parsedResponse.parsedBody = operationSpec.serializer.deserialize(\n              responseSpec.bodyMapper,\n              valueToDeserialize,\n              \"operationRes.parsedBody\",\n              options\n            );\n          } catch (innerError: any) {\n            const restError = new RestError(\n              `Error ${innerError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`,\n              undefined,\n              parsedResponse.status,\n              parsedResponse.request,\n              parsedResponse\n            );\n            throw restError;\n          }\n        } else if (operationSpec.httpMethod === \"HEAD\") {\n          // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n          parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n        }\n\n        if (responseSpec.headersMapper) {\n          parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(\n            responseSpec.headersMapper,\n            parsedResponse.headers.toJson(),\n            \"operationRes.parsedHeaders\",\n            options\n          );\n        }\n      }\n\n      return parsedResponse;\n    }\n  );\n}\n\nfunction isOperationSpecEmpty(operationSpec: OperationSpec): boolean {\n  const expectedStatusCodes = Object.keys(operationSpec.responses);\n  return (\n    expectedStatusCodes.length === 0 ||\n    (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\")\n  );\n}\n\nfunction handleErrorResponse(\n  parsedResponse: HttpOperationResponse,\n  operationSpec: OperationSpec,\n  responseSpec: OperationResponse | undefined\n): { error: RestError | null; shouldReturnResponse: boolean } {\n  const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n  const isExpectedStatusCode: boolean = isOperationSpecEmpty(operationSpec)\n    ? isSuccessByStatus\n    : !!responseSpec;\n\n  if (isExpectedStatusCode) {\n    if (responseSpec) {\n      if (!responseSpec.isError) {\n        return { error: null, shouldReturnResponse: false };\n      }\n    } else {\n      return { error: null, shouldReturnResponse: false };\n    }\n  }\n\n  const errorResponseSpec = responseSpec ?? operationSpec.responses.default;\n  const streaming =\n    parsedResponse.request.streamResponseStatusCodes?.has(parsedResponse.status) ||\n    parsedResponse.request.streamResponseBody;\n  const initialErrorMessage = streaming\n    ? `Unexpected status code: ${parsedResponse.status}`\n    : (parsedResponse.bodyAsText as string);\n\n  const error = new RestError(\n    initialErrorMessage,\n    undefined,\n    parsedResponse.status,\n    parsedResponse.request,\n    parsedResponse\n  );\n\n  // If the item failed but there's no error spec or default spec to deserialize the error,\n  // we should fail so we just throw the parsed response\n  if (!errorResponseSpec) {\n    throw error;\n  }\n\n  const defaultBodyMapper = errorResponseSpec.bodyMapper;\n  const defaultHeadersMapper = errorResponseSpec.headersMapper;\n\n  try {\n    // If error response has a body, try to deserialize it using default body mapper.\n    // Then try to extract error code & message from it\n    if (parsedResponse.parsedBody) {\n      const parsedBody = parsedResponse.parsedBody;\n      let parsedError;\n      if (defaultBodyMapper) {\n        let valueToDeserialize: any = parsedBody;\n        if (operationSpec.isXML && defaultBodyMapper.type.name === MapperType.Sequence) {\n          valueToDeserialize =\n            typeof parsedBody === \"object\" ? parsedBody[defaultBodyMapper.xmlElementName!] : [];\n        }\n        parsedError = operationSpec.serializer.deserialize(\n          defaultBodyMapper,\n          valueToDeserialize,\n          \"error.response.parsedBody\"\n        );\n      }\n\n      const internalError: any = parsedBody.error || parsedError || parsedBody;\n      error.code = internalError.code;\n      if (internalError.message) {\n        error.message = internalError.message;\n      }\n\n      if (defaultBodyMapper) {\n        error.response!.parsedBody = parsedError;\n      }\n    }\n\n    // If error response has headers, try to deserialize it using default header mapper\n    if (parsedResponse.headers && defaultHeadersMapper) {\n      error.response!.parsedHeaders = operationSpec.serializer.deserialize(\n        defaultHeadersMapper,\n        parsedResponse.headers.toJson(),\n        \"operationRes.parsedHeaders\"\n      );\n    }\n  } catch (defaultError: any) {\n    error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n  }\n\n  return { error, shouldReturnResponse: false };\n}\n\nfunction parse(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  operationResponse: HttpOperationResponse,\n  opts: Required<SerializerOptions>\n): Promise<HttpOperationResponse> {\n  const errorHandler = (err: Error & { code: string }): Promise<never> => {\n    const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n    const errCode = err.code || RestError.PARSE_ERROR;\n    const e = new RestError(\n      msg,\n      errCode,\n      operationResponse.status,\n      operationResponse.request,\n      operationResponse\n    );\n    return Promise.reject(e);\n  };\n\n  const streaming =\n    operationResponse.request.streamResponseStatusCodes?.has(operationResponse.status) ||\n    operationResponse.request.streamResponseBody;\n  if (!streaming && operationResponse.bodyAsText) {\n    const text = operationResponse.bodyAsText;\n    const contentType: string = operationResponse.headers.get(\"Content-Type\") || \"\";\n    const contentComponents: string[] = !contentType\n      ? []\n      : contentType.split(\";\").map((component) => component.toLowerCase());\n    if (\n      contentComponents.length === 0 ||\n      contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)\n    ) {\n      return new Promise<HttpOperationResponse>((resolve) => {\n        operationResponse.parsedBody = JSON.parse(text);\n        resolve(operationResponse);\n      }).catch(errorHandler);\n    } else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n      return parseXML(text, opts)\n        .then((body) => {\n          operationResponse.parsedBody = body;\n          return operationResponse;\n        })\n        .catch(errorHandler);\n    }\n  }\n\n  return Promise.resolve(operationResponse);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { Debugger } from \"@azure/logger\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { Sanitizer } from \"../util/sanitizer\";\nimport { WebResourceLike } from \"../webResource\";\nimport { logger as coreLogger } from \"../log\";\n\n/**\n * Options to pass to the {@link logPolicy}.\n * By default only a set list of headers are logged, though this can be configured. Request and response bodies are never logged.\n */\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to:\n   * x-ms-client-request-id, x-ms-return-client-request-id, x-ms-useragent, x-ms-correlation-request-id,\n   * x-ms-request-id, client-request-id, ms-cv, return-client-request-id, traceparent, Access-Control-Allow-Credentials,\n   * Access-Control-Allow-Headers, Access-Control-Allow-Methods, Access-Control-Allow-Origin, Access-Control-Expose-Headers,\n   * Access-Control-Max-Age, Access-Control-Request-Headers, Access-Control-Request-Method, Origin, Accept, Accept-Encoding,\n   * Cache-Control, Connection, Content-Length, Content-Type, Date, ETag, Expires, If-Match, If-Modified-Since, If-None-Match,\n   * If-Unmodified-Since, Last-Modified, Pragma, Request-Id, Retry-After, Server, Transfer-Encoding, and User-Agent.\n   *\n   * Any headers specified in this field will be added to that list.\n   * Any other values will be written to logs as \"REDACTED\".\n   */\n  allowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  allowedQueryParameters?: string[];\n\n  /**\n   * The Debugger (logger) instance to use for writing pipeline logs.\n   */\n  logger?: Debugger;\n}\n\n/**\n * Creates a policy that logs information about the outgoing request and the incoming responses.\n * @param loggingOptions - Logging options.\n * @returns An instance of the {@link LogPolicy}\n */\nexport function logPolicy(loggingOptions: LogPolicyOptions = {}): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new LogPolicy(nextPolicy, options, loggingOptions);\n    },\n  };\n}\n\n/**\n * A policy that logs information about the outgoing request and the incoming responses.\n */\nexport class LogPolicy extends BaseRequestPolicy {\n  logger: Debugger;\n  sanitizer: Sanitizer;\n\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to\n   * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   * @deprecated Pass these into the constructor instead.\n   */\n  public get allowedHeaderNames(): Set<string> {\n    return this.sanitizer.allowedHeaderNames;\n  }\n\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to\n   * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   * @deprecated Pass these into the constructor instead.\n   */\n  public set allowedHeaderNames(allowedHeaderNames: Set<string>) {\n    this.sanitizer.allowedHeaderNames = allowedHeaderNames;\n  }\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   * @deprecated Pass these into the constructor instead.\n   */\n  public get allowedQueryParameters(): Set<string> {\n    return this.sanitizer.allowedQueryParameters;\n  }\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   * @deprecated Pass these into the constructor instead.\n   */\n  public set allowedQueryParameters(allowedQueryParameters: Set<string>) {\n    this.sanitizer.allowedQueryParameters = allowedQueryParameters;\n  }\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    {\n      logger = coreLogger.info,\n      allowedHeaderNames = [],\n      allowedQueryParameters = [],\n    }: LogPolicyOptions = {}\n  ) {\n    super(nextPolicy, options);\n    this.logger = logger;\n    this.sanitizer = new Sanitizer({ allowedHeaderNames, allowedQueryParameters });\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!this.logger.enabled) return this._nextPolicy.sendRequest(request);\n\n    this.logRequest(request);\n    return this._nextPolicy.sendRequest(request).then((response) => this.logResponse(response));\n  }\n\n  private logRequest(request: WebResourceLike): void {\n    this.logger(`Request: ${this.sanitizer.sanitize(request)}`);\n  }\n\n  private logResponse(response: HttpOperationResponse): HttpOperationResponse {\n    this.logger(`Response status code: ${response.status}`);\n    this.logger(`Headers: ${this.sanitizer.sanitize(response.headers)}`);\n    return response;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResource } from \"../webResource\";\n\n/**\n * Returns a request policy factory that can be used to create an instance of\n * {@link DisableResponseDecompressionPolicy}.\n */\nexport function disableResponseDecompressionPolicy(): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new DisableResponseDecompressionPolicy(nextPolicy, options);\n    },\n  };\n}\n\n/**\n * A policy to disable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nexport class DisableResponseDecompressionPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of DisableResponseDecompressionPolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The parent constructor is protected.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   * @returns\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    request.decompressResponse = false;\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName: string): string {\n  return headerName.toLowerCase();\n}\n\n/**\n * An individual header within a HttpHeaders collection.\n */\nexport interface HttpHeader {\n  /**\n   * The name of the header.\n   */\n  name: string;\n\n  /**\n   * The value of the header.\n   */\n  value: string;\n}\n\n/**\n * A HttpHeaders collection represented as a simple JSON object.\n */\nexport type RawHttpHeaders = { [headerName: string]: string };\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport interface HttpHeadersLike {\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName - The name of the header to set. This value is case-insensitive.\n   * @param headerValue - The value of the header to set.\n   */\n  set(headerName: string, headerValue: string | number): void;\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName - The name of the header.\n   */\n  get(headerName: string): string | undefined;\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  contains(headerName: string): boolean;\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName - The name of the header to remove.\n   */\n  remove(headerName: string): boolean;\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  rawHeaders(): RawHttpHeaders;\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  headersArray(): HttpHeader[];\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  headerNames(): string[];\n  /**\n   * Get the header values that are contained in this collection.\n   */\n  headerValues(): string[];\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  clone(): HttpHeadersLike;\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   * The result is the same as `rawHeaders()`.\n   */\n  toJson(options?: { preserveCase?: boolean }): RawHttpHeaders;\n}\n\nexport function isHttpHeadersLike(object?: unknown): object is HttpHeadersLike {\n  if (object && typeof object === \"object\") {\n    const castObject = object as {\n      rawHeaders: unknown;\n      clone: unknown;\n      get: unknown;\n      set: unknown;\n      contains: unknown;\n      remove: unknown;\n      headersArray: unknown;\n      headerValues: unknown;\n      headerNames: unknown;\n      toJson: unknown;\n    };\n    if (\n      typeof castObject.rawHeaders === \"function\" &&\n      typeof castObject.clone === \"function\" &&\n      typeof castObject.get === \"function\" &&\n      typeof castObject.set === \"function\" &&\n      typeof castObject.contains === \"function\" &&\n      typeof castObject.remove === \"function\" &&\n      typeof castObject.headersArray === \"function\" &&\n      typeof castObject.headerValues === \"function\" &&\n      typeof castObject.headerNames === \"function\" &&\n      typeof castObject.toJson === \"function\"\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport class HttpHeaders implements HttpHeadersLike {\n  private readonly _headersMap: { [headerKey: string]: HttpHeader };\n\n  constructor(rawHeaders?: RawHttpHeaders) {\n    this._headersMap = {};\n    if (rawHeaders) {\n      for (const headerName in rawHeaders) {\n        this.set(headerName, rawHeaders[headerName]);\n      }\n    }\n  }\n\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName - The name of the header to set. This value is case-insensitive.\n   * @param headerValue - The value of the header to set.\n   */\n  public set(headerName: string, headerValue: string | number): void {\n    this._headersMap[getHeaderKey(headerName)] = {\n      name: headerName,\n      value: headerValue.toString(),\n    };\n  }\n\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName - The name of the header.\n   */\n  public get(headerName: string): string | undefined {\n    const header: HttpHeader = this._headersMap[getHeaderKey(headerName)];\n    return !header ? undefined : header.value;\n  }\n\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  public contains(headerName: string): boolean {\n    return !!this._headersMap[getHeaderKey(headerName)];\n  }\n\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName - The name of the header to remove.\n   */\n  public remove(headerName: string): boolean {\n    const result: boolean = this.contains(headerName);\n    delete this._headersMap[getHeaderKey(headerName)];\n    return result;\n  }\n\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  public rawHeaders(): RawHttpHeaders {\n    return this.toJson({ preserveCase: true });\n  }\n\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  public headersArray(): HttpHeader[] {\n    const headers: HttpHeader[] = [];\n    for (const headerKey in this._headersMap) {\n      headers.push(this._headersMap[headerKey]);\n    }\n    return headers;\n  }\n\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  public headerNames(): string[] {\n    const headerNames: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerNames.push(headers[i].name);\n    }\n    return headerNames;\n  }\n\n  /**\n   * Get the header values that are contained in this collection.\n   */\n  public headerValues(): string[] {\n    const headerValues: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerValues.push(headers[i].value);\n    }\n    return headerValues;\n  }\n\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   */\n  public toJson(options: { preserveCase?: boolean } = {}): RawHttpHeaders {\n    const result: RawHttpHeaders = {};\n    if (options.preserveCase) {\n      for (const headerKey in this._headersMap) {\n        const header: HttpHeader = this._headersMap[headerKey];\n        result[header.name] = header.value;\n      }\n    } else {\n      for (const headerKey in this._headersMap) {\n        const header: HttpHeader = this._headersMap[headerKey];\n        result[getHeaderKey(header.name)] = header.value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Get the string representation of this HTTP header collection.\n   */\n  public toString(): string {\n    return JSON.stringify(this.toJson({ preserveCase: true }));\n  }\n\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  public clone(): HttpHeaders {\n    const resultPreservingCasing: RawHttpHeaders = {};\n    for (const headerKey in this._headersMap) {\n      const header: HttpHeader = this._headersMap[headerKey];\n      resultPreservingCasing[header.name] = header.value;\n    }\n    return new HttpHeaders(resultPreservingCasing);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Context, SpanOptions } from \"@azure/core-tracing\";\nimport { HttpHeaders, HttpHeadersLike, isHttpHeadersLike } from \"./httpHeaders\";\nimport { Mapper, Serializer } from \"./serializer\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { OperationResponse } from \"./operationResponse\";\nimport { OperationSpec } from \"./operationSpec\";\nimport { ProxySettings } from \"./serviceClient\";\nimport { SerializerOptions } from \"./util/serializer.common\";\nimport { generateUuid } from \"./util/utils\";\n\n/**\n * List of supported HTTP methods.\n */\nexport type HttpMethods =\n  | \"GET\"\n  | \"PUT\"\n  | \"POST\"\n  | \"DELETE\"\n  | \"PATCH\"\n  | \"HEAD\"\n  | \"OPTIONS\"\n  | \"TRACE\";\n\n/**\n * Possible HTTP request body types\n */\nexport type HttpRequestBody =\n  | Blob\n  | string\n  | ArrayBuffer\n  | ArrayBufferView\n  | (() => NodeJS.ReadableStream);\n\n/**\n * Fired in response to upload or download progress.\n */\nexport type TransferProgressEvent = {\n  /**\n   * The number of bytes loaded so far.\n   */\n  loadedBytes: number;\n};\n\n/**\n * A description of a HTTP request to be made to a remote server.\n */\nexport interface WebResourceLike {\n  /**\n   * The URL being accessed by the request.\n   */\n  url: string;\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method: HttpMethods;\n  /**\n   * The HTTP body contents of the request.\n   */\n  body?: any;\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers: HttpHeadersLike;\n  /**\n   * Whether or not the body of the HttpOperationResponse should be treated as a stream.\n   * @deprecated Use streamResponseStatusCodes property instead.\n   */\n  streamResponseBody?: boolean;\n  /**\n   * A list of response status codes whose corresponding HttpOperationResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n  /**\n   * A function that returns the proper OperationResponse for the given OperationSpec and\n   * HttpOperationResponse combination. If this is undefined, then a simple status code lookup will\n   * be used.\n   */\n  operationResponseGetter?: (\n    operationSpec: OperationSpec,\n    response: HttpOperationResponse\n  ) => undefined | OperationResponse;\n  /**\n   * Form data, used to build the request body.\n   */\n  formData?: any;\n  /**\n   * A query string represented as an object.\n   */\n  query?: { [key: string]: any };\n  /**\n   * Used to parse the response.\n   */\n  operationSpec?: OperationSpec;\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   */\n  withCredentials: boolean;\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   */\n  timeout: number;\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n  /**\n   * If the connection should be reused.\n   */\n  keepAlive?: boolean;\n  /**\n   * Whether or not to decompress response according to Accept-Encoding header (node-fetch only)\n   */\n  decompressResponse?: boolean;\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId: string;\n\n  /**\n   * Signal of an abort controller. Can be used to abort both sending a network request and waiting for a response.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Tracing: Context used when creating spans.\n   */\n  tracingContext?: Context;\n\n  /**\n   * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n   * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n   * mentioned properties are not defined.\n   */\n  validateRequestProperties(): void;\n\n  /**\n   * Sets options on the request.\n   */\n  prepare(options: RequestPrepareOptions): WebResourceLike;\n  /**\n   * Clone this request object.\n   */\n  clone(): WebResourceLike;\n}\n\nexport function isWebResourceLike(object: unknown): object is WebResourceLike {\n  if (object && typeof object === \"object\") {\n    const castObject = object as {\n      url: unknown;\n      method: unknown;\n      headers: unknown;\n      validateRequestProperties: unknown;\n      prepare: unknown;\n      clone: unknown;\n    };\n    if (\n      typeof castObject.url === \"string\" &&\n      typeof castObject.method === \"string\" &&\n      typeof castObject.headers === \"object\" &&\n      isHttpHeadersLike(castObject.headers) &&\n      typeof castObject.validateRequestProperties === \"function\" &&\n      typeof castObject.prepare === \"function\" &&\n      typeof castObject.clone === \"function\"\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Creates a new WebResource object.\n *\n * This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\n * properties to initiate a request.\n */\nexport class WebResource implements WebResourceLike {\n  /**\n   * URL of the outgoing request.\n   */\n  url: string;\n  /**\n   * HTTP method to use.\n   */\n  method: HttpMethods;\n  /**\n   * Request body.\n   */\n  body?: any;\n  /**\n   * HTTP headers.\n   */\n  headers: HttpHeadersLike;\n  /**\n   * Whether or not the body of the HttpOperationResponse should be treated as a stream.\n   * @deprecated Use streamResponseStatusCodes property instead.\n   */\n  streamResponseBody?: boolean;\n  /**\n   * A list of status codes whose corresponding HttpOperationResponse body should be treated as a stream.\n   */\n  streamResponseStatusCodes?: Set<number>;\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n  /**\n   * A function that returns the proper OperationResponse for the given OperationSpec and\n   * HttpOperationResponse combination. If this is undefined, then a simple status code lookup will\n   * be used.\n   */\n  operationResponseGetter?: (\n    operationSpec: OperationSpec,\n    response: HttpOperationResponse\n  ) => undefined | OperationResponse;\n  /**\n   * Form data, used to build the request body.\n   */\n  formData?: any;\n  /**\n   * Query added to the URL.\n   */\n  query?: { [key: string]: any };\n  /**\n   * Specification of the HTTP request.\n   */\n  operationSpec?: OperationSpec;\n  /**\n   * Whether to send credentials (via cookies, authorization headers, or TLS client certificates) when making a request in the browser to a cross-site destination.\n   */\n  withCredentials: boolean;\n  /**\n   * How long to wait in milliseconds before aborting the request.\n   */\n  timeout: number;\n  /**\n   * What proxy to use, if necessary.\n   */\n  proxySettings?: ProxySettings;\n  /**\n   * Whether to keep the HTTP connections alive throughout requests.\n   */\n  keepAlive?: boolean;\n  /**\n   * Whether or not to decompress response according to Accept-Encoding header (node-fetch only)\n   */\n  decompressResponse?: boolean;\n  /**\n   * Unique identifier of the outgoing request.\n   */\n  requestId: string;\n\n  /**\n   * Signal of an abort controller. Can be used to abort both sending a network request and waiting for a response.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback which fires upon download progress.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Tracing: Options used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n\n  /**\n   * Tracing: Context used when creating Spans.\n   */\n  tracingContext?: Context;\n\n  constructor(\n    url?: string,\n    method?: HttpMethods,\n    body?: unknown,\n    query?: { [key: string]: any },\n    headers?: { [key: string]: any } | HttpHeadersLike,\n    streamResponseBody?: boolean,\n    withCredentials?: boolean,\n    abortSignal?: AbortSignalLike,\n    timeout?: number,\n    onUploadProgress?: (progress: TransferProgressEvent) => void,\n    onDownloadProgress?: (progress: TransferProgressEvent) => void,\n    proxySettings?: ProxySettings,\n    keepAlive?: boolean,\n    decompressResponse?: boolean,\n    streamResponseStatusCodes?: Set<number>\n  ) {\n    this.streamResponseBody = streamResponseBody;\n    this.streamResponseStatusCodes = streamResponseStatusCodes;\n    this.url = url || \"\";\n    this.method = method || \"GET\";\n    this.headers = isHttpHeadersLike(headers) ? headers : new HttpHeaders(headers);\n    this.body = body;\n    this.query = query;\n    this.formData = undefined;\n    this.withCredentials = withCredentials || false;\n    this.abortSignal = abortSignal;\n    this.timeout = timeout || 0;\n    this.onUploadProgress = onUploadProgress;\n    this.onDownloadProgress = onDownloadProgress;\n    this.proxySettings = proxySettings;\n    this.keepAlive = keepAlive;\n    this.decompressResponse = decompressResponse;\n    this.requestId = this.headers.get(\"x-ms-client-request-id\") || generateUuid();\n  }\n\n  /**\n   * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n   * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n   * mentioned properties are not defined.\n   */\n  validateRequestProperties(): void {\n    if (!this.method) {\n      throw new Error(\"WebResource.method is required.\");\n    }\n    if (!this.url) {\n      throw new Error(\"WebResource.url is required.\");\n    }\n  }\n\n  /**\n   * Prepares the request.\n   * @param options - Options to provide for preparing the request.\n   * @returns Returns the prepared WebResource (HTTP Request) object that needs to be given to the request pipeline.\n   */\n  prepare(options: RequestPrepareOptions): WebResource {\n    if (!options) {\n      throw new Error(\"options object is required\");\n    }\n\n    if (\n      options.method === undefined ||\n      options.method === null ||\n      typeof options.method.valueOf() !== \"string\"\n    ) {\n      throw new Error(\"options.method must be a string.\");\n    }\n\n    if (options.url && options.pathTemplate) {\n      throw new Error(\n        \"options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.\"\n      );\n    }\n\n    if (\n      (options.pathTemplate === undefined ||\n        options.pathTemplate === null ||\n        typeof options.pathTemplate.valueOf() !== \"string\") &&\n      (options.url === undefined ||\n        options.url === null ||\n        typeof options.url.valueOf() !== \"string\")\n    ) {\n      throw new Error(\"Please provide exactly one of options.pathTemplate or options.url.\");\n    }\n\n    // set the url if it is provided.\n    if (options.url) {\n      if (typeof options.url !== \"string\") {\n        throw new Error('options.url must be of type \"string\".');\n      }\n      this.url = options.url;\n    }\n\n    // set the method\n    if (options.method) {\n      const validMethods = [\"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\", \"PATCH\", \"TRACE\"];\n      if (validMethods.indexOf(options.method.toUpperCase()) === -1) {\n        throw new Error(\n          'The provided method \"' +\n            options.method +\n            '\" is invalid. Supported HTTP methods are: ' +\n            JSON.stringify(validMethods)\n        );\n      }\n    }\n    this.method = options.method.toUpperCase() as HttpMethods;\n\n    // construct the url if path template is provided\n    if (options.pathTemplate) {\n      const { pathTemplate, pathParameters } = options;\n      if (typeof pathTemplate !== \"string\") {\n        throw new Error('options.pathTemplate must be of type \"string\".');\n      }\n      if (!options.baseUrl) {\n        options.baseUrl = \"https://management.azure.com\";\n      }\n      const baseUrl = options.baseUrl;\n      let url =\n        baseUrl +\n        (baseUrl.endsWith(\"/\") ? \"\" : \"/\") +\n        (pathTemplate.startsWith(\"/\") ? pathTemplate.slice(1) : pathTemplate);\n      const segments = url.match(/({[\\w-]*\\s*[\\w-]*})/gi);\n      if (segments && segments.length) {\n        if (!pathParameters) {\n          throw new Error(\n            `pathTemplate: ${pathTemplate} has been provided. Hence, options.pathParameters must also be provided.`\n          );\n        }\n        segments.forEach(function (item) {\n          const pathParamName = item.slice(1, -1);\n          const pathParam = (pathParameters as { [key: string]: any })[pathParamName];\n          if (\n            pathParam === null ||\n            pathParam === undefined ||\n            !(typeof pathParam === \"string\" || typeof pathParam === \"object\")\n          ) {\n            const stringifiedPathParameters = JSON.stringify(pathParameters, undefined, 2);\n            throw new Error(\n              `pathTemplate: ${pathTemplate} contains the path parameter ${pathParamName}` +\n                ` however, it is not present in parameters: ${stringifiedPathParameters}.` +\n                `The value of the path parameter can either be a \"string\" of the form { ${pathParamName}: \"some sample value\" } or ` +\n                `it can be an \"object\" of the form { \"${pathParamName}\": { value: \"some sample value\", skipUrlEncoding: true } }.`\n            );\n          }\n\n          if (typeof pathParam.valueOf() === \"string\") {\n            url = url.replace(item, encodeURIComponent(pathParam));\n          }\n\n          if (typeof pathParam.valueOf() === \"object\") {\n            if (!pathParam.value) {\n              throw new Error(\n                `options.pathParameters[${pathParamName}] is of type \"object\" but it does not contain a \"value\" property.`\n              );\n            }\n            if (pathParam.skipUrlEncoding) {\n              url = url.replace(item, pathParam.value);\n            } else {\n              url = url.replace(item, encodeURIComponent(pathParam.value));\n            }\n          }\n        });\n      }\n      this.url = url;\n    }\n\n    // append query parameters to the url if they are provided. They can be provided with pathTemplate or url option.\n    if (options.queryParameters) {\n      const queryParameters = options.queryParameters;\n      if (typeof queryParameters !== \"object\") {\n        throw new Error(\n          `options.queryParameters must be of type object. It should be a JSON object ` +\n            `of \"query-parameter-name\" as the key and the \"query-parameter-value\" as the value. ` +\n            `The \"query-parameter-value\" may be fo type \"string\" or an \"object\" of the form { value: \"query-parameter-value\", skipUrlEncoding: true }.`\n        );\n      }\n      // append question mark if it is not present in the url\n      if (this.url && this.url.indexOf(\"?\") === -1) {\n        this.url += \"?\";\n      }\n      // construct queryString\n      const queryParams = [];\n      // We need to populate this.query as a dictionary if the request is being used for Sway's validateRequest().\n      this.query = {};\n      for (const queryParamName in queryParameters) {\n        const queryParam: any = queryParameters[queryParamName];\n        if (queryParam) {\n          if (typeof queryParam === \"string\") {\n            queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam));\n            this.query[queryParamName] = encodeURIComponent(queryParam);\n          } else if (typeof queryParam === \"object\") {\n            if (!queryParam.value) {\n              throw new Error(\n                `options.queryParameters[${queryParamName}] is of type \"object\" but it does not contain a \"value\" property.`\n              );\n            }\n            if (queryParam.skipUrlEncoding) {\n              queryParams.push(queryParamName + \"=\" + queryParam.value);\n              this.query[queryParamName] = queryParam.value;\n            } else {\n              queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam.value));\n              this.query[queryParamName] = encodeURIComponent(queryParam.value);\n            }\n          }\n        }\n      } // end-of-for\n      // append the queryString\n      this.url += queryParams.join(\"&\");\n    }\n\n    // add headers to the request if they are provided\n    if (options.headers) {\n      const headers = options.headers;\n      for (const headerName of Object.keys(options.headers)) {\n        this.headers.set(headerName, headers[headerName]);\n      }\n    }\n    // ensure accept-language is set correctly\n    if (!this.headers.get(\"accept-language\")) {\n      this.headers.set(\"accept-language\", \"en-US\");\n    }\n    // ensure the request-id is set correctly\n    if (!this.headers.get(\"x-ms-client-request-id\") && !options.disableClientRequestId) {\n      this.headers.set(\"x-ms-client-request-id\", this.requestId);\n    }\n\n    // default\n    if (!this.headers.get(\"Content-Type\")) {\n      this.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n    }\n\n    // set the request body. request.js automatically sets the Content-Length request header, so we need not set it explicitly\n    this.body = options.body;\n    if (options.body !== undefined && options.body !== null) {\n      // body as a stream special case. set the body as-is and check for some special request headers specific to sending a stream.\n      if (options.bodyIsStream) {\n        if (!this.headers.get(\"Transfer-Encoding\")) {\n          this.headers.set(\"Transfer-Encoding\", \"chunked\");\n        }\n        if (this.headers.get(\"Content-Type\") !== \"application/octet-stream\") {\n          this.headers.set(\"Content-Type\", \"application/octet-stream\");\n        }\n      } else {\n        if (options.serializationMapper) {\n          this.body = new Serializer(options.mappers).serialize(\n            options.serializationMapper,\n            options.body,\n            \"requestBody\"\n          );\n        }\n        if (!options.disableJsonStringifyOnBody) {\n          this.body = JSON.stringify(options.body);\n        }\n      }\n    }\n\n    if (options.spanOptions) {\n      this.spanOptions = options.spanOptions;\n    }\n\n    if (options.tracingContext) {\n      this.tracingContext = options.tracingContext;\n    }\n\n    this.abortSignal = options.abortSignal;\n    this.onDownloadProgress = options.onDownloadProgress;\n    this.onUploadProgress = options.onUploadProgress;\n\n    return this;\n  }\n\n  /**\n   * Clone this WebResource HTTP request object.\n   * @returns The clone of this WebResource HTTP request object.\n   */\n  clone(): WebResource {\n    const result = new WebResource(\n      this.url,\n      this.method,\n      this.body,\n      this.query,\n      this.headers && this.headers.clone(),\n      this.streamResponseBody,\n      this.withCredentials,\n      this.abortSignal,\n      this.timeout,\n      this.onUploadProgress,\n      this.onDownloadProgress,\n      this.proxySettings,\n      this.keepAlive,\n      this.decompressResponse,\n      this.streamResponseStatusCodes\n    );\n\n    if (this.formData) {\n      result.formData = this.formData;\n    }\n\n    if (this.operationSpec) {\n      result.operationSpec = this.operationSpec;\n    }\n\n    if (this.shouldDeserialize) {\n      result.shouldDeserialize = this.shouldDeserialize;\n    }\n\n    if (this.operationResponseGetter) {\n      result.operationResponseGetter = this.operationResponseGetter;\n    }\n\n    return result;\n  }\n}\n\n/**\n * Options to prepare an outgoing HTTP request.\n */\nexport interface RequestPrepareOptions {\n  /**\n   * The HTTP request method. Valid values are \"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\",\n   * or \"PATCH\".\n   */\n  method: HttpMethods;\n  /**\n   * The request url. It may or may not have query parameters in it. Either provide the \"url\" or\n   * provide the \"pathTemplate\" in the options object. Both the options are mutually exclusive.\n   */\n  url?: string;\n  /**\n   * A dictionary of query parameters to be appended to the url, where\n   * the \"key\" is the \"query-parameter-name\" and the \"value\" is the \"query-parameter-value\".\n   * The \"query-parameter-value\" can be of type \"string\" or it can be of type \"object\".\n   * The \"object\" format should be used when you want to skip url encoding. While using the object format,\n   * the object must have a property named value which provides the \"query-parameter-value\".\n   * Example:\n   *    - query-parameter-value in \"object\" format: `{ \"query-parameter-name\": { value: \"query-parameter-value\", skipUrlEncoding: true } }`\n   *    - query-parameter-value in \"string\" format: `{ \"query-parameter-name\": \"query-parameter-value\"}`.\n   * Note: \"If options.url already has some query parameters, then the value provided in options.queryParameters will be appended to the url.\n   */\n  queryParameters?: { [key: string]: any | ParameterValue };\n  /**\n   * The path template of the request url. Either provide the \"url\" or provide the \"pathTemplate\" in\n   * the options object. Both the options are mutually exclusive.\n   * Example: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}`\n   */\n  pathTemplate?: string;\n  /**\n   * The base url of the request. Default value is: \"https://management.azure.com\". This is\n   * applicable only with pathTemplate. If you are providing options.url then it is expected that\n   * you provide the complete url.\n   */\n  baseUrl?: string;\n  /**\n   * A dictionary of path parameters that need to be replaced with actual values in the pathTemplate.\n   * Here the key is the \"path-parameter-name\" and the value is the \"path-parameter-value\".\n   * The \"path-parameter-value\" can be of type \"string\"  or it can be of type \"object\".\n   * The \"object\" format should be used when you want to skip url encoding. While using the object format,\n   * the object must have a property named value which provides the \"path-parameter-value\".\n   * Example:\n   *    - path-parameter-value in \"object\" format: `{ \"path-parameter-name\": { value: \"path-parameter-value\", skipUrlEncoding: true } }`\n   *    - path-parameter-value in \"string\" format: `{ \"path-parameter-name\": \"path-parameter-value\" }`.\n   */\n  pathParameters?: { [key: string]: any | ParameterValue };\n  /**\n   * Form data, used to build the request body.\n   */\n  formData?: { [key: string]: any };\n  /**\n   * A dictionary of request headers that need to be applied to the request.\n   * Here the key is the \"header-name\" and the value is the \"header-value\". The header-value MUST be of type string.\n   *  - ContentType must be provided with the key name as \"Content-Type\". Default value \"application/json; charset=utf-8\".\n   *  - \"Transfer-Encoding\" is set to \"chunked\" by default if \"options.bodyIsStream\" is set to true.\n   *  - \"Content-Type\" is set to \"application/octet-stream\" by default if \"options.bodyIsStream\" is set to true.\n   *  - \"accept-language\" by default is set to \"en-US\"\n   *  - \"x-ms-client-request-id\" by default is set to a new Guid. To not generate a guid for the request, please set options.disableClientRequestId to true\n   */\n  headers?: { [key: string]: any };\n  /**\n   * When set to true, instructs the client to not set \"x-ms-client-request-id\" header to a new Guid().\n   */\n  disableClientRequestId?: boolean;\n  /**\n   * The request body. It can be of any type. This value will be serialized if it is not a stream.\n   */\n  body?: any;\n  /**\n   * Provides information on how to serialize the request body.\n   */\n  serializationMapper?: Mapper;\n  /**\n   * A dictionary of mappers that may be used while [de]serialization.\n   */\n  mappers?: { [x: string]: any };\n  /**\n   * Provides information on how to deserialize the response body.\n   */\n  deserializationMapper?: Record<string, unknown>;\n  /**\n   * Indicates whether this method should JSON.stringify() the request body. Default value: false.\n   */\n  disableJsonStringifyOnBody?: boolean;\n  /**\n   * Indicates whether the request body is a stream (useful for file upload scenarios).\n   */\n  bodyIsStream?: boolean;\n  /**\n   * Signal of an abort controller. Can be used to abort both sending a network request and waiting for a response.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Allows keeping track of the progress of uploading the outgoing request.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Allows keeping track of the progress of downloading the incoming response.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Tracing: Options used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n  /**\n   * Tracing: Context used when creating spans.\n   */\n  tracingContext?: Context;\n}\n\n/**\n * The Parameter value provided for path or query parameters in RequestPrepareOptions\n */\nexport interface ParameterValue {\n  /**\n   * Value of the parameter.\n   */\n  value: any;\n  /**\n   * Disables URL encoding if set to true.\n   */\n  skipUrlEncoding: boolean;\n  /**\n   * Parameter values may contain any other property.\n   */\n  [key: string]: any;\n}\n\n/**\n * Describes the base structure of the options object that will be used in every operation.\n */\nexport interface RequestOptionsBase {\n  /**\n   * will be applied before the request is sent.\n   */\n  customHeaders?: { [key: string]: string };\n\n  /**\n   * Signal of an abort controller. Can be used to abort both sending a network request and waiting for a response.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   */\n  timeout?: number;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback which fires upon download progress.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n\n  /**\n   * Tracing: Context used when creating spans.\n   */\n  tracingContext?: Context;\n\n  /**\n   * May contain other properties.\n   */\n  [key: string]: any;\n\n  /**\n   * Options to override XML parsing/building behavior.\n   */\n  serializerOptions?: SerializerOptions;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The `@azure/logger` configuration for this package.\n */\nexport const logger = createClientLogger(\"storage-blob\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"12.12.0\";\nexport const SERVICE_VERSION: string = \"2021-10-04\";\n\nexport const BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES: number = 256 * 1024 * 1024; // 256MB\nexport const BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES: number = 4000 * 1024 * 1024; // 4000MB\nexport const BLOCK_BLOB_MAX_BLOCKS: number = 50000;\nexport const DEFAULT_BLOCK_BUFFER_SIZE_BYTES: number = 8 * 1024 * 1024; // 8MB\nexport const DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES: number = 4 * 1024 * 1024; // 4MB\nexport const DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS: number = 5;\n\nexport const REQUEST_TIMEOUT: number = 100 * 1000; // In ms\n/**\n * The OAuth scope to use with Azure Storage.\n */\nexport const StorageOAuthScopes: string | string[] = \"https://storage.azure.com/.default\";\n\nexport const URLConstants = {\n  Parameters: {\n    FORCE_BROWSER_NO_CACHE: \"_\",\n    SIGNATURE: \"sig\",\n    SNAPSHOT: \"snapshot\",\n    VERSIONID: \"versionid\",\n    TIMEOUT: \"timeout\",\n  },\n};\n\nexport const HTTPURLConnection = {\n  HTTP_ACCEPTED: 202,\n  HTTP_CONFLICT: 409,\n  HTTP_NOT_FOUND: 404,\n  HTTP_PRECON_FAILED: 412,\n  HTTP_RANGE_NOT_SATISFIABLE: 416,\n};\n\nexport const HeaderConstants = {\n  AUTHORIZATION: \"Authorization\",\n  AUTHORIZATION_SCHEME: \"Bearer\",\n  CONTENT_ENCODING: \"Content-Encoding\",\n  CONTENT_ID: \"Content-ID\",\n  CONTENT_LANGUAGE: \"Content-Language\",\n  CONTENT_LENGTH: \"Content-Length\",\n  CONTENT_MD5: \"Content-Md5\",\n  CONTENT_TRANSFER_ENCODING: \"Content-Transfer-Encoding\",\n  CONTENT_TYPE: \"Content-Type\",\n  COOKIE: \"Cookie\",\n  DATE: \"date\",\n  IF_MATCH: \"if-match\",\n  IF_MODIFIED_SINCE: \"if-modified-since\",\n  IF_NONE_MATCH: \"if-none-match\",\n  IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n  PREFIX_FOR_STORAGE: \"x-ms-\",\n  RANGE: \"Range\",\n  USER_AGENT: \"User-Agent\",\n  X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n  X_MS_COPY_SOURCE: \"x-ms-copy-source\",\n  X_MS_DATE: \"x-ms-date\",\n  X_MS_ERROR_CODE: \"x-ms-error-code\",\n  X_MS_VERSION: \"x-ms-version\",\n};\n\nexport const ETagNone = \"\";\nexport const ETagAny = \"*\";\n\nexport const SIZE_1_MB = 1 * 1024 * 1024;\nexport const BATCH_MAX_REQUEST = 256;\nexport const BATCH_MAX_PAYLOAD_IN_BYTES = 4 * SIZE_1_MB;\nexport const HTTP_LINE_ENDING = \"\\r\\n\";\nexport const HTTP_VERSION_1_1 = \"HTTP/1.1\";\n\nexport const EncryptionAlgorithmAES25 = \"AES256\";\n\nexport const DevelopmentConnectionString = `DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;`;\n\nexport const StorageBlobLoggingAllowedHeaderNames = [\n  \"Access-Control-Allow-Origin\",\n  \"Cache-Control\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"Request-Id\",\n  \"traceparent\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"x-ms-client-request-id\",\n  \"x-ms-date\",\n  \"x-ms-error-code\",\n  \"x-ms-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-version\",\n  \"Accept-Ranges\",\n  \"Content-Disposition\",\n  \"Content-Encoding\",\n  \"Content-Language\",\n  \"Content-MD5\",\n  \"Content-Range\",\n  \"ETag\",\n  \"Last-Modified\",\n  \"Server\",\n  \"Vary\",\n  \"x-ms-content-crc64\",\n  \"x-ms-copy-action\",\n  \"x-ms-copy-completion-time\",\n  \"x-ms-copy-id\",\n  \"x-ms-copy-progress\",\n  \"x-ms-copy-status\",\n  \"x-ms-has-immutability-policy\",\n  \"x-ms-has-legal-hold\",\n  \"x-ms-lease-state\",\n  \"x-ms-lease-status\",\n  \"x-ms-range\",\n  \"x-ms-request-server-encrypted\",\n  \"x-ms-server-encrypted\",\n  \"x-ms-snapshot\",\n  \"x-ms-source-range\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"x-ms-access-tier\",\n  \"x-ms-access-tier-change-time\",\n  \"x-ms-access-tier-inferred\",\n  \"x-ms-account-kind\",\n  \"x-ms-archive-status\",\n  \"x-ms-blob-append-offset\",\n  \"x-ms-blob-cache-control\",\n  \"x-ms-blob-committed-block-count\",\n  \"x-ms-blob-condition-appendpos\",\n  \"x-ms-blob-condition-maxsize\",\n  \"x-ms-blob-content-disposition\",\n  \"x-ms-blob-content-encoding\",\n  \"x-ms-blob-content-language\",\n  \"x-ms-blob-content-length\",\n  \"x-ms-blob-content-md5\",\n  \"x-ms-blob-content-type\",\n  \"x-ms-blob-public-access\",\n  \"x-ms-blob-sequence-number\",\n  \"x-ms-blob-type\",\n  \"x-ms-copy-destination-snapshot\",\n  \"x-ms-creation-time\",\n  \"x-ms-default-encryption-scope\",\n  \"x-ms-delete-snapshots\",\n  \"x-ms-delete-type-permanent\",\n  \"x-ms-deny-encryption-scope-override\",\n  \"x-ms-encryption-algorithm\",\n  \"x-ms-if-sequence-number-eq\",\n  \"x-ms-if-sequence-number-le\",\n  \"x-ms-if-sequence-number-lt\",\n  \"x-ms-incremental-copy\",\n  \"x-ms-lease-action\",\n  \"x-ms-lease-break-period\",\n  \"x-ms-lease-duration\",\n  \"x-ms-lease-id\",\n  \"x-ms-lease-time\",\n  \"x-ms-page-write\",\n  \"x-ms-proposed-lease-id\",\n  \"x-ms-range-get-content-md5\",\n  \"x-ms-rehydrate-priority\",\n  \"x-ms-sequence-number-action\",\n  \"x-ms-sku-name\",\n  \"x-ms-source-content-md5\",\n  \"x-ms-source-if-match\",\n  \"x-ms-source-if-modified-since\",\n  \"x-ms-source-if-none-match\",\n  \"x-ms-source-if-unmodified-since\",\n  \"x-ms-tag-count\",\n  \"x-ms-encryption-key-sha256\",\n  \"x-ms-if-tags\",\n  \"x-ms-source-if-tags\",\n];\n\nexport const StorageBlobLoggingAllowedQueryParameters = [\n  \"comp\",\n  \"maxresults\",\n  \"rscc\",\n  \"rscd\",\n  \"rsce\",\n  \"rscl\",\n  \"rsct\",\n  \"se\",\n  \"si\",\n  \"sip\",\n  \"sp\",\n  \"spr\",\n  \"sr\",\n  \"srt\",\n  \"ss\",\n  \"st\",\n  \"sv\",\n  \"include\",\n  \"marker\",\n  \"prefix\",\n  \"copyid\",\n  \"restype\",\n  \"blockid\",\n  \"blocklisttype\",\n  \"delimiter\",\n  \"prevsnapshot\",\n  \"ske\",\n  \"skoid\",\n  \"sks\",\n  \"skt\",\n  \"sktid\",\n  \"skv\",\n  \"snapshot\",\n];\n\nexport const BlobUsesCustomerSpecifiedEncryptionMsg = \"BlobUsesCustomerSpecifiedEncryption\";\nexport const BlobDoesNotUseCustomerSpecifiedEncryption =\n  \"BlobDoesNotUseCustomerSpecifiedEncryption\";\n\n/// List of ports used for path style addressing.\n/// Path style addressing means that storage account is put in URI's Path segment in instead of in host.\nexport const PathStylePorts = [\n  \"10000\",\n  \"10001\",\n  \"10002\",\n  \"10003\",\n  \"10004\",\n  \"10100\",\n  \"10101\",\n  \"10102\",\n  \"10103\",\n  \"10104\",\n  \"11000\",\n  \"11001\",\n  \"11002\",\n  \"11003\",\n  \"11004\",\n  \"11100\",\n  \"11101\",\n  \"11102\",\n  \"11103\",\n  \"11104\",\n];\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { HttpHeaders, isNode, URLBuilder, TokenCredential } from \"@azure/core-http\";\n\nimport {\n  BlobQueryArrowConfiguration,\n  BlobQueryCsvTextConfiguration,\n  BlobQueryJsonTextConfiguration,\n  BlobQueryParquetConfiguration,\n} from \"../Clients\";\nimport {\n  QuerySerialization,\n  BlobTags,\n  BlobName,\n  ListBlobsFlatSegmentResponse,\n  ListBlobsHierarchySegmentResponse,\n  BlobItemInternal,\n  BlobPrefix,\n  BlobType,\n  LeaseStatusType,\n  LeaseStateType,\n  LeaseDurationType,\n  CopyStatusType,\n  AccessTier,\n  ArchiveStatus,\n  RehydratePriority,\n  BlobImmutabilityPolicyMode,\n  BlobTag,\n  PageRange,\n  ClearRange,\n  BlobPropertiesInternal,\n} from \"../generated/src/models\";\nimport {\n  DevelopmentConnectionString,\n  HeaderConstants,\n  PathStylePorts,\n  URLConstants,\n} from \"./constants\";\nimport {\n  Tags,\n  ObjectReplicationPolicy,\n  ObjectReplicationRule,\n  ObjectReplicationStatus,\n  HttpAuthorization,\n} from \"../models\";\nimport {\n  ListBlobsFlatSegmentResponseModel,\n  BlobItemInternal as BlobItemInternalModel,\n  ListBlobsHierarchySegmentResponseModel,\n  BlobPrefix as BlobPrefixModel,\n  PageBlobGetPageRangesDiffResponseModel,\n  PageRangeInfo,\n} from \"../generatedModels\";\n\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JS SDKs\n *\n * When customers pass a URL string into XxxClient classes constructor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XxxClient constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" instead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `containerClient.getBlobClient(blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @param url -\n */\nexport function escapeURLPath(url: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path || \"/\";\n\n  path = escape(path);\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\nexport interface ConnectionString {\n  kind: \"AccountConnString\" | \"SASConnString\";\n  url: string;\n  accountName: string;\n  accountKey?: any;\n  accountSas?: string;\n  proxyUri?: string; // Development Connection String may contain proxyUri\n}\n\nfunction getProxyUriFromDevConnString(connectionString: string): string {\n  // Development Connection String\n  // https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string#connect-to-the-emulator-account-using-the-well-known-account-name-and-key\n  let proxyUri = \"\";\n  if (connectionString.search(\"DevelopmentStorageProxyUri=\") !== -1) {\n    // CONNECTION_STRING=UseDevelopmentStorage=true;DevelopmentStorageProxyUri=http://myProxyUri\n    const matchCredentials = connectionString.split(\";\");\n    for (const element of matchCredentials) {\n      if (element.trim().startsWith(\"DevelopmentStorageProxyUri=\")) {\n        proxyUri = element.trim().match(\"DevelopmentStorageProxyUri=(.*)\")![1];\n      }\n    }\n  }\n  return proxyUri;\n}\n\nexport function getValueInConnString(\n  connectionString: string,\n  argument:\n    | \"BlobEndpoint\"\n    | \"AccountName\"\n    | \"AccountKey\"\n    | \"DefaultEndpointsProtocol\"\n    | \"EndpointSuffix\"\n    | \"SharedAccessSignature\"\n): string {\n  const elements = connectionString.split(\";\");\n  for (const element of elements) {\n    if (element.trim().startsWith(argument)) {\n      return element.trim().match(argument + \"=(.*)\")![1];\n    }\n  }\n  return \"\";\n}\n\n/**\n * Extracts the parts of an Azure Storage account connection string.\n *\n * @param connectionString - Connection string.\n * @returns String key value pairs of the storage account's url and credentials.\n */\nexport function extractConnectionStringParts(connectionString: string): ConnectionString {\n  let proxyUri = \"\";\n\n  if (connectionString.startsWith(\"UseDevelopmentStorage=true\")) {\n    // Development connection string\n    proxyUri = getProxyUriFromDevConnString(connectionString);\n    connectionString = DevelopmentConnectionString;\n  }\n\n  // Matching BlobEndpoint in the Account connection string\n  let blobEndpoint = getValueInConnString(connectionString, \"BlobEndpoint\");\n  // Slicing off '/' at the end if exists\n  // (The methods that use `extractConnectionStringParts` expect the url to not have `/` at the end)\n  blobEndpoint = blobEndpoint.endsWith(\"/\") ? blobEndpoint.slice(0, -1) : blobEndpoint;\n\n  if (\n    connectionString.search(\"DefaultEndpointsProtocol=\") !== -1 &&\n    connectionString.search(\"AccountKey=\") !== -1\n  ) {\n    // Account connection string\n\n    let defaultEndpointsProtocol = \"\";\n    let accountName = \"\";\n    let accountKey = Buffer.from(\"accountKey\", \"base64\");\n    let endpointSuffix = \"\";\n\n    // Get account name and key\n    accountName = getValueInConnString(connectionString, \"AccountName\");\n    accountKey = Buffer.from(getValueInConnString(connectionString, \"AccountKey\"), \"base64\");\n\n    if (!blobEndpoint) {\n      // BlobEndpoint is not present in the Account connection string\n      // Can be obtained from `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`\n\n      defaultEndpointsProtocol = getValueInConnString(connectionString, \"DefaultEndpointsProtocol\");\n      const protocol = defaultEndpointsProtocol!.toLowerCase();\n      if (protocol !== \"https\" && protocol !== \"http\") {\n        throw new Error(\n          \"Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'\"\n        );\n      }\n\n      endpointSuffix = getValueInConnString(connectionString, \"EndpointSuffix\");\n      if (!endpointSuffix) {\n        throw new Error(\"Invalid EndpointSuffix in the provided Connection String\");\n      }\n      blobEndpoint = `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n    }\n\n    if (!accountName) {\n      throw new Error(\"Invalid AccountName in the provided Connection String\");\n    } else if (accountKey.length === 0) {\n      throw new Error(\"Invalid AccountKey in the provided Connection String\");\n    }\n\n    return {\n      kind: \"AccountConnString\",\n      url: blobEndpoint,\n      accountName,\n      accountKey,\n      proxyUri,\n    };\n  } else {\n    // SAS connection string\n\n    const accountSas = getValueInConnString(connectionString, \"SharedAccessSignature\");\n    const accountName = getAccountNameFromUrl(blobEndpoint);\n    if (!blobEndpoint) {\n      throw new Error(\"Invalid BlobEndpoint in the provided SAS Connection String\");\n    } else if (!accountSas) {\n      throw new Error(\"Invalid SharedAccessSignature in the provided SAS Connection String\");\n    }\n\n    return { kind: \"SASConnString\", url: blobEndpoint, accountName, accountSas };\n  }\n}\n\n/**\n * Internal escape method implemented Strategy Two mentioned in escapeURL() description.\n *\n * @param text -\n */\nfunction escape(text: string): string {\n  return encodeURIComponent(text)\n    .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n    .replace(/'/g, \"%27\") // Escape for \"'\"\n    .replace(/\\+/g, \"%20\")\n    .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @param url - Source URL string\n * @param name - String to be appended to URL\n * @returns An updated URL string\n */\nexport function appendToURLPath(url: string, name: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path ? (path.endsWith(\"/\") ? `${path}${name}` : `${path}/${name}`) : name;\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @param url - Source URL string\n * @param name - Parameter name\n * @param value - Parameter value\n * @returns An updated URL string\n */\nexport function setURLParameter(url: string, name: string, value?: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setQueryParameter(name, value);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL parameter by name.\n *\n * @param url -\n * @param name -\n */\nexport function getURLParameter(url: string, name: string): string | string[] | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getQueryParameterValue(name);\n}\n\n/**\n * Set URL host.\n *\n * @param url - Source URL string\n * @param host - New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url: string, host: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setHost(host);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL path from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLPath(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getPath();\n}\n\n/**\n * Get URL scheme from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLScheme(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getScheme();\n}\n\n/**\n * Get URL path and query from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLPathAndQuery(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  const pathString = urlParsed.getPath();\n  if (!pathString) {\n    throw new RangeError(\"Invalid url without valid path.\");\n  }\n\n  let queryString = urlParsed.getQuery() || \"\";\n  queryString = queryString.trim();\n  if (queryString !== \"\") {\n    queryString = queryString.startsWith(\"?\") ? queryString : `?${queryString}`; // Ensure query string start with '?'\n  }\n\n  return `${pathString}${queryString}`;\n}\n\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @param url -\n */\nexport function getURLQueries(url: string): { [key: string]: string } {\n  let queryString = URLBuilder.parse(url).getQuery();\n  if (!queryString) {\n    return {};\n  }\n\n  queryString = queryString.trim();\n  queryString = queryString.startsWith(\"?\") ? queryString.substr(1) : queryString;\n\n  let querySubStrings: string[] = queryString.split(\"&\");\n  querySubStrings = querySubStrings.filter((value: string) => {\n    const indexOfEqual = value.indexOf(\"=\");\n    const lastIndexOfEqual = value.lastIndexOf(\"=\");\n    return (\n      indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual && lastIndexOfEqual < value.length - 1\n    );\n  });\n\n  const queries: { [key: string]: string } = {};\n  for (const querySubString of querySubStrings) {\n    const splitResults = querySubString.split(\"=\");\n    const key: string = splitResults[0];\n    const value: string = splitResults[1];\n    queries[key] = value;\n  }\n\n  return queries;\n}\n\n/**\n * Append a string to URL query.\n *\n * @param url - Source URL string.\n * @param queryParts - String to be appended to the URL query.\n * @returns An updated URL string.\n */\nexport function appendToURLQuery(url: string, queryParts: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let query = urlParsed.getQuery();\n  if (query) {\n    query += \"&\" + queryParts;\n  } else {\n    query = queryParts;\n  }\n\n  urlParsed.setQuery(query);\n  return urlParsed.toString();\n}\n\n/**\n * Rounds a date off to seconds.\n *\n * @param date -\n * @param withMilliseconds - If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date: Date, withMilliseconds: boolean = true): string {\n  // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n  const dateString = date.toISOString();\n\n  return withMilliseconds\n    ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n    : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n\n/**\n * Base64 encode.\n *\n * @param content -\n */\nexport function base64encode(content: string): string {\n  return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n\n/**\n * Base64 decode.\n *\n * @param encodedString -\n */\nexport function base64decode(encodedString: string): string {\n  return !isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n}\n\n/**\n * Generate a 64 bytes base64 block ID string.\n *\n * @param blockIndex -\n */\nexport function generateBlockID(blockIDPrefix: string, blockIndex: number): string {\n  // To generate a 64 bytes base64 string, source string should be 48\n  const maxSourceStringLength = 48;\n\n  // A blob can have a maximum of 100,000 uncommitted blocks at any given time\n  const maxBlockIndexLength = 6;\n\n  const maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;\n\n  if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {\n    blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);\n  }\n  const res =\n    blockIDPrefix +\n    padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, \"0\");\n  return base64encode(res);\n}\n\n/**\n * Delay specified time interval.\n *\n * @param timeInMs -\n * @param aborter -\n * @param abortError -\n */\nexport async function delay(\n  timeInMs: number,\n  aborter?: AbortSignalLike,\n  abortError?: Error\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    /* eslint-disable-next-line prefer-const */\n    let timeout: any;\n\n    const abortHandler = () => {\n      if (timeout !== undefined) {\n        clearTimeout(timeout);\n      }\n      reject(abortError);\n    };\n\n    const resolveHandler = () => {\n      if (aborter !== undefined) {\n        aborter.removeEventListener(\"abort\", abortHandler);\n      }\n      resolve();\n    };\n\n    timeout = setTimeout(resolveHandler, timeInMs);\n\n    if (aborter !== undefined) {\n      aborter.addEventListener(\"abort\", abortHandler);\n    }\n  });\n}\n\n/**\n * String.prototype.padStart()\n *\n * @param currentString -\n * @param targetLength -\n * @param padString -\n */\nexport function padStart(\n  currentString: string,\n  targetLength: number,\n  padString: string = \" \"\n): string {\n  // @ts-expect-error: TS doesn't know this code needs to run downlevel sometimes\n  if (String.prototype.padStart) {\n    return currentString.padStart(targetLength, padString);\n  }\n\n  padString = padString || \" \";\n  if (currentString.length > targetLength) {\n    return currentString;\n  } else {\n    targetLength = targetLength - currentString.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + currentString;\n  }\n}\n\nexport function sanitizeURL(url: string): string {\n  let safeURL: string = url;\n  if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n    safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n  }\n\n  return safeURL;\n}\n\nexport function sanitizeHeaders(originalHeader: HttpHeaders): HttpHeaders {\n  const headers: HttpHeaders = new HttpHeaders();\n  for (const header of originalHeader.headersArray()) {\n    if (header.name.toLowerCase() === HeaderConstants.AUTHORIZATION.toLowerCase()) {\n      headers.set(header.name, \"*****\");\n    } else if (header.name.toLowerCase() === HeaderConstants.X_MS_COPY_SOURCE) {\n      headers.set(header.name, sanitizeURL(header.value));\n    } else {\n      headers.set(header.name, header.value);\n    }\n  }\n\n  return headers;\n}\n/**\n * If two strings are equal when compared case insensitive.\n *\n * @param str1 -\n * @param str2 -\n */\nexport function iEqual(str1: string, str2: string): boolean {\n  return str1.toLocaleLowerCase() === str2.toLocaleLowerCase();\n}\n\n/**\n * Extracts account name from the url\n * @param url - url to extract the account name from\n * @returns with the account name\n */\nexport function getAccountNameFromUrl(url: string): string {\n  const parsedUrl: URLBuilder = URLBuilder.parse(url);\n  let accountName;\n  try {\n    if (parsedUrl.getHost()!.split(\".\")[1] === \"blob\") {\n      // `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n      accountName = parsedUrl.getHost()!.split(\".\")[0];\n    } else if (isIpEndpointStyle(parsedUrl)) {\n      // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/\n      // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/\n      // .getPath() -> /devstoreaccount1/\n      accountName = parsedUrl.getPath()!.split(\"/\")[1];\n    } else {\n      // Custom domain case: \"https://customdomain.com/containername/blob\".\n      accountName = \"\";\n    }\n    return accountName;\n  } catch (error: any) {\n    throw new Error(\"Unable to extract accountName with provided information.\");\n  }\n}\n\nexport function isIpEndpointStyle(parsedUrl: URLBuilder): boolean {\n  if (parsedUrl.getHost() === undefined) {\n    return false;\n  }\n\n  const host =\n    parsedUrl.getHost()! + (parsedUrl.getPort() === undefined ? \"\" : \":\" + parsedUrl.getPort());\n\n  // Case 1: Ipv6, use a broad regex to find out candidates whose host contains two ':'.\n  // Case 2: localhost(:port), use broad regex to match port part.\n  // Case 3: Ipv4, use broad regex which just check if host contains Ipv4.\n  // For valid host please refer to https://man7.org/linux/man-pages/man7/hostname.7.html.\n  return (\n    /^.*:.*:.*$|^localhost(:[0-9]+)?$|^(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])){3}(:[0-9]+)?$/.test(\n      host\n    ) ||\n    (parsedUrl.getPort() !== undefined && PathStylePorts.includes(parsedUrl.getPort()!))\n  );\n}\n\n/**\n * Convert Tags to encoded string.\n *\n * @param tags -\n */\nexport function toBlobTagsString(tags?: Tags): string | undefined {\n  if (tags === undefined) {\n    return undefined;\n  }\n\n  const tagPairs = [];\n  for (const key in tags) {\n    if (Object.prototype.hasOwnProperty.call(tags, key)) {\n      const value = tags[key];\n      tagPairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n    }\n  }\n\n  return tagPairs.join(\"&\");\n}\n\n/**\n * Convert Tags type to BlobTags.\n *\n * @param tags -\n */\nexport function toBlobTags(tags?: Tags): BlobTags | undefined {\n  if (tags === undefined) {\n    return undefined;\n  }\n\n  const res: BlobTags = {\n    blobTagSet: [],\n  };\n\n  for (const key in tags) {\n    if (Object.prototype.hasOwnProperty.call(tags, key)) {\n      const value = tags[key];\n      res.blobTagSet.push({\n        key,\n        value,\n      });\n    }\n  }\n  return res;\n}\n\n/**\n * Covert BlobTags to Tags type.\n *\n * @param tags -\n */\nexport function toTags(tags?: BlobTags): Tags | undefined {\n  if (tags === undefined) {\n    return undefined;\n  }\n\n  const res: Tags = {};\n  for (const blobTag of tags.blobTagSet) {\n    res[blobTag.key] = blobTag.value;\n  }\n  return res;\n}\n\n/**\n * Convert BlobQueryTextConfiguration to QuerySerialization type.\n *\n * @param textConfiguration -\n */\nexport function toQuerySerialization(\n  textConfiguration?:\n    | BlobQueryJsonTextConfiguration\n    | BlobQueryCsvTextConfiguration\n    | BlobQueryArrowConfiguration\n    | BlobQueryParquetConfiguration\n): QuerySerialization | undefined {\n  if (textConfiguration === undefined) {\n    return undefined;\n  }\n\n  switch (textConfiguration.kind) {\n    case \"csv\":\n      return {\n        format: {\n          type: \"delimited\",\n          delimitedTextConfiguration: {\n            columnSeparator: textConfiguration.columnSeparator || \",\",\n            fieldQuote: textConfiguration.fieldQuote || \"\",\n            recordSeparator: textConfiguration.recordSeparator,\n            escapeChar: textConfiguration.escapeCharacter || \"\",\n            headersPresent: textConfiguration.hasHeaders || false,\n          },\n        },\n      };\n    case \"json\":\n      return {\n        format: {\n          type: \"json\",\n          jsonTextConfiguration: {\n            recordSeparator: textConfiguration.recordSeparator,\n          },\n        },\n      };\n    case \"arrow\":\n      return {\n        format: {\n          type: \"arrow\",\n          arrowConfiguration: {\n            schema: textConfiguration.schema,\n          },\n        },\n      };\n    case \"parquet\":\n      return {\n        format: {\n          type: \"parquet\",\n        },\n      };\n\n    default:\n      throw Error(\"Invalid BlobQueryTextConfiguration.\");\n  }\n}\n\nexport function parseObjectReplicationRecord(\n  objectReplicationRecord?: Record<string, string>\n): ObjectReplicationPolicy[] | undefined {\n  if (!objectReplicationRecord) {\n    return undefined;\n  }\n\n  if (\"policy-id\" in objectReplicationRecord) {\n    // If the dictionary contains a key with policy id, we are not required to do any parsing since\n    // the policy id should already be stored in the ObjectReplicationDestinationPolicyId.\n    return undefined;\n  }\n\n  const orProperties: ObjectReplicationPolicy[] = [];\n  for (const key in objectReplicationRecord) {\n    const ids = key.split(\"_\");\n    const policyPrefix = \"or-\";\n    if (ids[0].startsWith(policyPrefix)) {\n      ids[0] = ids[0].substring(policyPrefix.length);\n    }\n    const rule: ObjectReplicationRule = {\n      ruleId: ids[1],\n      replicationStatus: objectReplicationRecord[key] as ObjectReplicationStatus,\n    };\n    const policyIndex = orProperties.findIndex((policy) => policy.policyId === ids[0]);\n    if (policyIndex > -1) {\n      orProperties[policyIndex].rules.push(rule);\n    } else {\n      orProperties.push({\n        policyId: ids[0],\n        rules: [rule],\n      });\n    }\n  }\n  return orProperties;\n}\n\n/**\n * Attach a TokenCredential to an object.\n *\n * @param thing -\n * @param credential -\n */\nexport function attachCredential<T>(thing: T, credential: TokenCredential): T {\n  (thing as any).credential = credential;\n  return thing;\n}\n\nexport function httpAuthorizationToString(\n  httpAuthorization?: HttpAuthorization\n): string | undefined {\n  return httpAuthorization ? httpAuthorization.scheme + \" \" + httpAuthorization.value : undefined;\n}\n\nexport function BlobNameToString(name: BlobName): string {\n  if (name.encoded) {\n    return decodeURIComponent(name.content!);\n  } else {\n    return name.content!;\n  }\n}\n\nexport function ConvertInternalResponseOfListBlobFlat(\n  internalResponse: ListBlobsFlatSegmentResponse\n): ListBlobsFlatSegmentResponseModel {\n  return {\n    ...internalResponse,\n    segment: {\n      blobItems: internalResponse.segment.blobItems.map((blobItemInteral) => {\n        const blobItem: BlobItemInternalModel = {\n          ...blobItemInteral,\n          name: BlobNameToString(blobItemInteral.name),\n        };\n        return blobItem;\n      }),\n    },\n  };\n}\n\nexport function ConvertInternalResponseOfListBlobHierarchy(\n  internalResponse: ListBlobsHierarchySegmentResponse\n): ListBlobsHierarchySegmentResponseModel {\n  return {\n    ...internalResponse,\n    segment: {\n      blobPrefixes: internalResponse.segment.blobPrefixes?.map((blobPrefixInternal) => {\n        const blobPrefix: BlobPrefixModel = {\n          name: BlobNameToString(blobPrefixInternal.name),\n        };\n        return blobPrefix;\n      }),\n      blobItems: internalResponse.segment.blobItems.map((blobItemInteral) => {\n        const blobItem: BlobItemInternalModel = {\n          ...blobItemInteral,\n          name: BlobNameToString(blobItemInteral.name),\n        };\n        return blobItem;\n      }),\n    },\n  };\n}\n\nfunction decodeBase64String(value: string): Uint8Array {\n  if (isNode) {\n    return Buffer.from(value, \"base64\");\n  } else {\n    const byteString = atob(value);\n    const arr = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n      arr[i] = byteString.charCodeAt(i);\n    }\n    return arr;\n  }\n}\n\nfunction ParseBoolean(content: any) {\n  if (content === undefined) return undefined;\n  if (content === \"true\") return true;\n  if (content === \"false\") return false;\n  return undefined;\n}\n\nfunction ParseBlobName(blobNameInXML: any): BlobName {\n  if (blobNameInXML[\"$\"] !== undefined && blobNameInXML[\"#\"] !== undefined) {\n    return {\n      encoded: ParseBoolean(blobNameInXML[\"$\"][\"Encoded\"]),\n      content: blobNameInXML[\"#\"] as string,\n    };\n  } else {\n    return {\n      encoded: false,\n      content: blobNameInXML as string,\n    };\n  }\n}\n\nfunction ParseBlobProperties(blobPropertiesInXML: any): BlobPropertiesInternal {\n  const blobProperties = blobPropertiesInXML;\n  if (blobPropertiesInXML[\"Creation-Time\"]) {\n    blobProperties.createdOn = new Date(blobPropertiesInXML[\"Creation-Time\"] as string);\n    delete blobProperties[\"Creation-Time\"];\n  }\n\n  if (blobPropertiesInXML[\"Last-Modified\"]) {\n    blobProperties.lastModified = new Date(blobPropertiesInXML[\"Last-Modified\"] as string);\n    delete blobProperties[\"Last-Modified\"];\n  }\n\n  if (blobPropertiesInXML[\"Etag\"]) {\n    blobProperties.etag = blobPropertiesInXML[\"Etag\"] as string;\n    delete blobProperties[\"Etag\"];\n  }\n\n  if (blobPropertiesInXML[\"Content-Length\"]) {\n    blobProperties.contentLength = parseFloat(blobPropertiesInXML[\"Content-Length\"] as string);\n    delete blobProperties[\"Content-Length\"];\n  }\n\n  if (blobPropertiesInXML[\"Content-Type\"]) {\n    blobProperties.contentType = blobPropertiesInXML[\"Content-Type\"] as string;\n    delete blobProperties[\"Content-Type\"];\n  }\n\n  if (blobPropertiesInXML[\"Content-Encoding\"]) {\n    blobProperties.contentEncoding = blobPropertiesInXML[\"Content-Encoding\"] as string;\n    delete blobProperties[\"Content-Encoding\"];\n  }\n\n  if (blobPropertiesInXML[\"Content-Language\"]) {\n    blobProperties.contentLanguage = blobPropertiesInXML[\"Content-Language\"] as string;\n    delete blobProperties[\"Content-Language\"];\n  }\n\n  if (blobPropertiesInXML[\"Content-MD5\"]) {\n    blobProperties.contentMD5 = decodeBase64String(blobPropertiesInXML[\"Content-MD5\"] as string);\n    delete blobProperties[\"Content-MD5\"];\n  }\n\n  if (blobPropertiesInXML[\"Content-Disposition\"]) {\n    blobProperties.contentDisposition = blobPropertiesInXML[\"Content-Disposition\"] as string;\n    delete blobProperties[\"Content-Disposition\"];\n  }\n\n  if (blobPropertiesInXML[\"Cache-Control\"]) {\n    blobProperties.cacheControl = blobPropertiesInXML[\"Cache-Control\"] as string;\n    delete blobProperties[\"Cache-Control\"];\n  }\n\n  if (blobPropertiesInXML[\"x-ms-blob-sequence-number\"]) {\n    blobProperties.blobSequenceNumber = parseFloat(\n      blobPropertiesInXML[\"x-ms-blob-sequence-number\"] as string\n    );\n    delete blobProperties[\"x-ms-blob-sequence-number\"];\n  }\n\n  if (blobPropertiesInXML[\"BlobType\"]) {\n    blobProperties.blobType = blobPropertiesInXML[\"BlobType\"] as BlobType;\n    delete blobProperties[\"BlobType\"];\n  }\n\n  if (blobPropertiesInXML[\"LeaseStatus\"]) {\n    blobProperties.leaseStatus = blobPropertiesInXML[\"LeaseStatus\"] as LeaseStatusType;\n    delete blobProperties[\"LeaseStatus\"];\n  }\n\n  if (blobPropertiesInXML[\"LeaseState\"]) {\n    blobProperties.leaseState = blobPropertiesInXML[\"LeaseState\"] as LeaseStateType;\n    delete blobProperties[\"LeaseState\"];\n  }\n\n  if (blobPropertiesInXML[\"LeaseDuration\"]) {\n    blobProperties.leaseDuration = blobPropertiesInXML[\"LeaseDuration\"] as LeaseDurationType;\n    delete blobProperties[\"LeaseDuration\"];\n  }\n\n  if (blobPropertiesInXML[\"CopyId\"]) {\n    blobProperties.copyId = blobPropertiesInXML[\"CopyId\"] as string;\n    delete blobProperties[\"CopyId\"];\n  }\n\n  if (blobPropertiesInXML[\"CopyStatus\"]) {\n    blobProperties.copyStatus = blobPropertiesInXML[\"CopyStatus\"] as CopyStatusType;\n    delete blobProperties[\"CopyStatus\"];\n  }\n\n  if (blobPropertiesInXML[\"CopySource\"]) {\n    blobProperties.copySource = blobPropertiesInXML[\"CopySource\"] as string;\n    delete blobProperties[\"CopySource\"];\n  }\n\n  if (blobPropertiesInXML[\"CopyProgress\"]) {\n    blobProperties.copyProgress = blobPropertiesInXML[\"CopyProgress\"] as string;\n    delete blobProperties[\"CopyProgress\"];\n  }\n\n  if (blobPropertiesInXML[\"CopyCompletionTime\"]) {\n    blobProperties.copyCompletedOn = new Date(blobPropertiesInXML[\"CopyCompletionTime\"] as string);\n    delete blobProperties[\"CopyCompletionTime\"];\n  }\n\n  if (blobPropertiesInXML[\"CopyStatusDescription\"]) {\n    blobProperties.copyStatusDescription = blobPropertiesInXML[\"CopyStatusDescription\"] as string;\n    delete blobProperties[\"CopyStatusDescription\"];\n  }\n\n  if (blobPropertiesInXML[\"ServerEncrypted\"]) {\n    blobProperties.serverEncrypted = ParseBoolean(blobPropertiesInXML[\"ServerEncrypted\"]);\n    delete blobProperties[\"ServerEncrypted\"];\n  }\n\n  if (blobPropertiesInXML[\"IncrementalCopy\"]) {\n    blobProperties.incrementalCopy = ParseBoolean(blobPropertiesInXML[\"IncrementalCopy\"]);\n    delete blobProperties[\"IncrementalCopy\"];\n  }\n\n  if (blobPropertiesInXML[\"DestinationSnapshot\"]) {\n    blobProperties.destinationSnapshot = blobPropertiesInXML[\"DestinationSnapshot\"] as string;\n    delete blobProperties[\"DestinationSnapshot\"];\n  }\n\n  if (blobPropertiesInXML[\"DeletedTime\"]) {\n    blobProperties.deletedOn = new Date(blobPropertiesInXML[\"DeletedTime\"] as string);\n    delete blobProperties[\"DeletedTime\"];\n  }\n\n  if (blobPropertiesInXML[\"RemainingRetentionDays\"]) {\n    blobProperties.remainingRetentionDays = parseFloat(\n      blobPropertiesInXML[\"RemainingRetentionDays\"] as string\n    );\n    delete blobProperties[\"RemainingRetentionDays\"];\n  }\n\n  if (blobPropertiesInXML[\"AccessTier\"]) {\n    blobProperties.accessTier = blobPropertiesInXML[\"AccessTier\"] as AccessTier;\n    delete blobProperties[\"AccessTier\"];\n  }\n\n  if (blobPropertiesInXML[\"AccessTierInferred\"]) {\n    blobProperties.accessTierInferred = ParseBoolean(blobPropertiesInXML[\"AccessTierInferred\"]);\n    delete blobProperties[\"AccessTierInferred\"];\n  }\n\n  if (blobPropertiesInXML[\"ArchiveStatus\"]) {\n    blobProperties.archiveStatus = blobPropertiesInXML[\"ArchiveStatus\"] as ArchiveStatus;\n    delete blobProperties[\"ArchiveStatus\"];\n  }\n\n  if (blobPropertiesInXML[\"CustomerProvidedKeySha256\"]) {\n    blobProperties.customerProvidedKeySha256 = blobPropertiesInXML[\n      \"CustomerProvidedKeySha256\"\n    ] as string;\n    delete blobProperties[\"CustomerProvidedKeySha256\"];\n  }\n\n  if (blobPropertiesInXML[\"EncryptionScope\"]) {\n    blobProperties.encryptionScope = blobPropertiesInXML[\"EncryptionScope\"] as string;\n    delete blobProperties[\"EncryptionScope\"];\n  }\n\n  if (blobPropertiesInXML[\"AccessTierChangeTime\"]) {\n    blobProperties.accessTierChangedOn = new Date(\n      blobPropertiesInXML[\"AccessTierChangeTime\"] as string\n    );\n    delete blobProperties[\"AccessTierChangeTime\"];\n  }\n\n  if (blobPropertiesInXML[\"TagCount\"]) {\n    blobProperties.tagCount = parseFloat(blobPropertiesInXML[\"TagCount\"] as string);\n    delete blobProperties[\"TagCount\"];\n  }\n\n  if (blobPropertiesInXML[\"Expiry-Time\"]) {\n    blobProperties.expiresOn = new Date(blobPropertiesInXML[\"Expiry-Time\"] as string);\n    delete blobProperties[\"Expiry-Time\"];\n  }\n\n  if (blobPropertiesInXML[\"Sealed\"]) {\n    blobProperties.isSealed = ParseBoolean(blobPropertiesInXML[\"Sealed\"]);\n    delete blobProperties[\"Sealed\"];\n  }\n\n  if (blobPropertiesInXML[\"RehydratePriority\"]) {\n    blobProperties.rehydratePriority = blobPropertiesInXML[\n      \"RehydratePriority\"\n    ] as RehydratePriority;\n    delete blobProperties[\"RehydratePriority\"];\n  }\n\n  if (blobPropertiesInXML[\"LastAccessTime\"]) {\n    blobProperties.lastAccessedOn = new Date(blobPropertiesInXML[\"LastAccessTime\"] as string);\n    delete blobProperties[\"LastAccessTime\"];\n  }\n\n  if (blobPropertiesInXML[\"ImmutabilityPolicyUntilDate\"]) {\n    blobProperties.immutabilityPolicyExpiresOn = new Date(\n      blobPropertiesInXML[\"ImmutabilityPolicyUntilDate\"] as string\n    );\n    delete blobProperties[\"ImmutabilityPolicyUntilDate\"];\n  }\n\n  if (blobPropertiesInXML[\"ImmutabilityPolicyMode\"]) {\n    blobProperties.immutabilityPolicyMode = blobPropertiesInXML[\n      \"ImmutabilityPolicyMode\"\n    ] as BlobImmutabilityPolicyMode;\n    delete blobProperties[\"ImmutabilityPolicyMode\"];\n  }\n\n  if (blobPropertiesInXML[\"LegalHold\"]) {\n    blobProperties.legalHold = ParseBoolean(blobPropertiesInXML[\"LegalHold\"]);\n    delete blobProperties[\"LegalHold\"];\n  }\n\n  return blobProperties;\n}\n\nfunction ParseBlobItem(blobInXML: any): BlobItemInternal {\n  const blobItem = blobInXML;\n  blobItem.properties = ParseBlobProperties(blobInXML[\"Properties\"]);\n  delete blobItem[\"Properties\"];\n\n  blobItem.name = ParseBlobName(blobInXML[\"Name\"]);\n  delete blobItem[\"Name\"];\n  blobItem.deleted = ParseBoolean(blobInXML[\"Deleted\"])!;\n  delete blobItem[\"Deleted\"];\n\n  if (blobInXML[\"Snapshot\"]) {\n    blobItem.snapshot = blobInXML[\"Snapshot\"] as string;\n    delete blobItem[\"Snapshot\"];\n  }\n\n  if (blobInXML[\"VersionId\"]) {\n    blobItem.versionId = blobInXML[\"VersionId\"] as string;\n    delete blobItem[\"VersionId\"];\n  }\n\n  if (blobInXML[\"IsCurrentVersion\"]) {\n    blobItem.isCurrentVersion = ParseBoolean(blobInXML[\"IsCurrentVersion\"]);\n    delete blobItem[\"IsCurrentVersion\"];\n  }\n\n  if (blobInXML[\"Metadata\"]) {\n    blobItem.metadata = blobInXML[\"Metadata\"];\n    delete blobItem[\"Metadata\"];\n  }\n\n  if (blobInXML[\"Tags\"]) {\n    blobItem.blobTags = ParseBlobTags(blobInXML[\"Tags\"]);\n    delete blobItem[\"Tags\"];\n  }\n\n  if (blobInXML[\"OrMetadata\"]) {\n    blobItem.objectReplicationMetadata = blobInXML[\"OrMetadata\"];\n    delete blobItem[\"OrMetadata\"];\n  }\n\n  if (blobInXML[\"HasVersionsOnly\"]) {\n    blobItem.hasVersionsOnly = ParseBoolean(blobInXML[\"HasVersionsOnly\"]);\n    delete blobItem[\"HasVersionsOnly\"];\n  }\n  return blobItem;\n}\n\nfunction ParseBlobPrefix(blobPrefixInXML: any): BlobPrefix {\n  return {\n    name: ParseBlobName(blobPrefixInXML[\"Name\"]),\n  };\n}\n\nfunction ParseBlobTag(blobTagInXML: any): BlobTag {\n  return {\n    key: blobTagInXML[\"Key\"],\n    value: blobTagInXML[\"Value\"],\n  };\n}\n\nfunction ParseBlobTags(blobTagsInXML: any): BlobTags | undefined {\n  if (\n    blobTagsInXML === undefined ||\n    blobTagsInXML[\"TagSet\"] === undefined ||\n    blobTagsInXML[\"TagSet\"][\"Tag\"] === undefined\n  ) {\n    return undefined;\n  }\n\n  const blobTagSet = [];\n  if (blobTagsInXML[\"TagSet\"][\"Tag\"] instanceof Array) {\n    blobTagsInXML[\"TagSet\"][\"Tag\"].forEach((blobTagInXML: any) => {\n      blobTagSet.push(ParseBlobTag(blobTagInXML));\n    });\n  } else {\n    blobTagSet.push(ParseBlobTag(blobTagsInXML[\"TagSet\"][\"Tag\"]));\n  }\n\n  return { blobTagSet: blobTagSet };\n}\n\nexport function ProcessBlobItems(blobArrayInXML: any[]): BlobItemInternal[] {\n  const blobItems = [];\n\n  if (blobArrayInXML instanceof Array) {\n    blobArrayInXML.forEach((blobInXML: any) => {\n      blobItems.push(ParseBlobItem(blobInXML));\n    });\n  } else {\n    blobItems.push(ParseBlobItem(blobArrayInXML));\n  }\n\n  return blobItems;\n}\n\nexport function ProcessBlobPrefixes(blobPrefixesInXML: any[]): BlobPrefix[] {\n  const blobPrefixes = [];\n\n  if (blobPrefixesInXML instanceof Array) {\n    blobPrefixesInXML.forEach((blobPrefixInXML: any) => {\n      blobPrefixes.push(ParseBlobPrefix(blobPrefixInXML));\n    });\n  } else {\n    blobPrefixes.push(ParseBlobPrefix(blobPrefixesInXML));\n  }\n\n  return blobPrefixes;\n}\n\nexport function* ExtractPageRangeInfoItems(\n  getPageRangesSegment: PageBlobGetPageRangesDiffResponseModel\n): IterableIterator<PageRangeInfo> {\n  let pageRange: PageRange[] = [];\n  let clearRange: ClearRange[] = [];\n\n  if (getPageRangesSegment.pageRange) pageRange = getPageRangesSegment.pageRange;\n  if (getPageRangesSegment.clearRange) clearRange = getPageRangesSegment.clearRange;\n\n  let pageRangeIndex = 0;\n  let clearRangeIndex = 0;\n\n  while (pageRangeIndex < pageRange.length && clearRangeIndex < clearRange.length) {\n    if (pageRange[pageRangeIndex].start < clearRange[clearRangeIndex].start) {\n      yield {\n        start: pageRange[pageRangeIndex].start,\n        end: pageRange[pageRangeIndex].end,\n        isClear: false,\n      };\n      ++pageRangeIndex;\n    } else {\n      yield {\n        start: clearRange[clearRangeIndex].start,\n        end: clearRange[clearRangeIndex].end,\n        isClear: true,\n      };\n      ++clearRangeIndex;\n    }\n  }\n\n  for (; pageRangeIndex < pageRange.length; ++pageRangeIndex) {\n    yield {\n      start: pageRange[pageRangeIndex].start,\n      end: pageRange[pageRangeIndex].end,\n      isClear: false,\n    };\n  }\n\n  for (; clearRangeIndex < clearRange.length; ++clearRangeIndex) {\n    yield {\n      start: clearRange[clearRangeIndex].start,\n      end: clearRange[clearRangeIndex].end,\n      isClear: true,\n    };\n  }\n}\n\n/**\n * Escape the blobName but keep path separator ('/').\n */\nexport function EscapePath(blobName: string): string {\n  const split = blobName.split(\"/\");\n  for (let i = 0; i < split.length; i++) {\n    split[i] = encodeURIComponent(split[i]);\n  }\n  return split.join(\"/\");\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource,\n} from \"@azure/core-http\";\n\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * StorageBrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * StorageBrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n */\nexport class StorageBrowserPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of StorageBrowserPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n      request.url = setURLParameter(\n        request.url,\n        URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n        new Date().getTime().toString()\n      );\n    }\n\n    request.headers.remove(HeaderConstants.COOKIE);\n\n    // According to XHR standards, content-length should be fully controlled by browsers\n    request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { StorageBrowserPolicy } from \"./policies/StorageBrowserPolicy\";\nexport { StorageBrowserPolicy };\n\n/**\n * StorageBrowserPolicyFactory is a factory class helping generating StorageBrowserPolicy objects.\n */\nexport class StorageBrowserPolicyFactory implements RequestPolicyFactory {\n  /**\n   * Creates a StorageBrowserPolicyFactory object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageBrowserPolicy {\n    return new StorageBrowserPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError } from \"@azure/abort-controller\";\n\nimport {\n  AbortSignalLike,\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  RestError,\n  WebResource,\n} from \"@azure/core-http\";\n\nimport { StorageRetryOptions } from \"../StorageRetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLHost, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @param retryOptions -\n */\nexport function NewRetryPolicyFactory(retryOptions?: StorageRetryOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy => {\n      return new StorageRetryPolicy(nextPolicy, options, retryOptions);\n    },\n  };\n}\n\n/**\n * RetryPolicy types.\n */\nexport enum StorageRetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED,\n}\n\n// Default values of StorageRetryOptions\nconst DEFAULT_RETRY_OPTIONS: StorageRetryOptions = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n  secondaryHost: \"\",\n  tryTimeoutInMs: undefined, // Use server side default timeout strategy\n};\n\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n */\nexport class StorageRetryPolicy extends BaseRequestPolicy {\n  /**\n   * RetryOptions.\n   */\n  private readonly retryOptions: StorageRetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param retryOptions -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryOptions: StorageRetryOptions = DEFAULT_RETRY_OPTIONS\n  ) {\n    super(nextPolicy, options);\n\n    // Initialize retry options\n    this.retryOptions = {\n      retryPolicyType: retryOptions.retryPolicyType\n        ? retryOptions.retryPolicyType\n        : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n\n      maxTries:\n        retryOptions.maxTries && retryOptions.maxTries >= 1\n          ? Math.floor(retryOptions.maxTries)\n          : DEFAULT_RETRY_OPTIONS.maxTries,\n\n      tryTimeoutInMs:\n        retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n          ? retryOptions.tryTimeoutInMs\n          : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n\n      retryDelayInMs:\n        retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n          ? Math.min(\n              retryOptions.retryDelayInMs,\n              retryOptions.maxRetryDelayInMs\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs!\n            )\n          : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n\n      maxRetryDelayInMs:\n        retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n          ? retryOptions.maxRetryDelayInMs\n          : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n\n      secondaryHost: retryOptions.secondaryHost\n        ? retryOptions.secondaryHost\n        : DEFAULT_RETRY_OPTIONS.secondaryHost,\n    };\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this.attemptSendRequest(request, false, 1);\n  }\n\n  /**\n   * Decide and perform next retry. Won't mutate request parameter.\n   *\n   * @param request -\n   * @param secondaryHas404 -  If attempt was against the secondary & it returned a StatusNotFound (404), then\n   *                                   the resource was not found. This may be due to replication delay. So, in this\n   *                                   case, we'll never try the secondary again for this operation.\n   * @param attempt -           How many retries has been attempted to performed, starting from 1, which includes\n   *                                   the attempt will be performed by this method call.\n   */\n  protected async attemptSendRequest(\n    request: WebResource,\n    secondaryHas404: boolean,\n    attempt: number\n  ): Promise<HttpOperationResponse> {\n    const newRequest: WebResource = request.clone();\n\n    const isPrimaryRetry =\n      secondaryHas404 ||\n      !this.retryOptions.secondaryHost ||\n      !(request.method === \"GET\" || request.method === \"HEAD\" || request.method === \"OPTIONS\") ||\n      attempt % 2 === 1;\n\n    if (!isPrimaryRetry) {\n      newRequest.url = setURLHost(newRequest.url, this.retryOptions.secondaryHost!);\n    }\n\n    // Set the server-side timeout query parameter \"timeout=[seconds]\"\n    if (this.retryOptions.tryTimeoutInMs) {\n      newRequest.url = setURLParameter(\n        newRequest.url,\n        URLConstants.Parameters.TIMEOUT,\n        Math.floor(this.retryOptions.tryTimeoutInMs! / 1000).toString()\n      );\n    }\n\n    let response: HttpOperationResponse | undefined;\n    try {\n      logger.info(`RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`);\n      response = await this._nextPolicy.sendRequest(newRequest);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n        return response;\n      }\n\n      secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n    } catch (err: any) {\n      logger.error(`RetryPolicy: Caught error, message: ${err.message}, code: ${err.code}`);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response, err)) {\n        throw err;\n      }\n    }\n\n    await this.delay(isPrimaryRetry, attempt, request.abortSignal);\n    return this.attemptSendRequest(request, secondaryHas404, ++attempt);\n  }\n\n  /**\n   * Decide whether to retry according to last HTTP response and retry counters.\n   *\n   * @param isPrimaryRetry -\n   * @param attempt -\n   * @param response -\n   * @param err -\n   */\n  protected shouldRetry(\n    isPrimaryRetry: boolean,\n    attempt: number,\n    response?: HttpOperationResponse,\n    err?: RestError\n  ): boolean {\n    if (attempt >= this.retryOptions.maxTries!) {\n      logger.info(\n        `RetryPolicy: Attempt(s) ${attempt} >= maxTries ${this.retryOptions\n          .maxTries!}, no further try.`\n      );\n      return false;\n    }\n\n    // Handle network failures, you may need to customize the list when you implement\n    // your own http client\n    const retriableErrors = [\n      \"ETIMEDOUT\",\n      \"ESOCKETTIMEDOUT\",\n      \"ECONNREFUSED\",\n      \"ECONNRESET\",\n      \"ENOENT\",\n      \"ENOTFOUND\",\n      \"TIMEOUT\",\n      \"EPIPE\",\n      \"REQUEST_SEND_ERROR\", // For default xhr based http client provided in ms-rest-js\n    ];\n    if (err) {\n      for (const retriableError of retriableErrors) {\n        if (\n          err.name.toUpperCase().includes(retriableError) ||\n          err.message.toUpperCase().includes(retriableError) ||\n          (err.code && err.code.toString().toUpperCase() === retriableError)\n        ) {\n          logger.info(`RetryPolicy: Network error ${retriableError} found, will retry.`);\n          return true;\n        }\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || err) {\n      const statusCode = response ? response.status : err ? err.statusCode : 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        logger.info(`RetryPolicy: Will retry for status code ${statusCode}.`);\n        return true;\n      }\n    }\n\n    if (err?.code === \"PARSE_ERROR\" && err?.message.startsWith(`Error \"Error: Unclosed root tag`)) {\n      logger.info(\n        \"RetryPolicy: Incomplete XML response likely due to service timeout, will retry.\"\n      );\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Delay a calculated time between retries.\n   *\n   * @param isPrimaryRetry -\n   * @param attempt -\n   * @param abortSignal -\n   */\n  private async delay(isPrimaryRetry: boolean, attempt: number, abortSignal?: AbortSignalLike) {\n    let delayTimeInMs: number = 0;\n\n    if (isPrimaryRetry) {\n      switch (this.retryOptions.retryPolicyType) {\n        case StorageRetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs!,\n            this.retryOptions.maxRetryDelayInMs!\n          );\n          break;\n        case StorageRetryPolicyType.FIXED:\n          delayTimeInMs = this.retryOptions.retryDelayInMs!;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delay(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { StorageRetryPolicy, StorageRetryPolicyType } from \"./policies/StorageRetryPolicy\";\n\nexport { StorageRetryPolicyType, StorageRetryPolicy };\n\n/**\n * Storage Blob retry options interface.\n */\nexport interface StorageRetryOptions {\n  /**\n   * Optional. StorageRetryPolicyType, default is exponential retry policy.\n   */\n  readonly retryPolicyType?: StorageRetryPolicyType;\n\n  /**\n   * Optional. Max try number of attempts, default is 4.\n   * A value of 1 means 1 try and no retries.\n   * A value smaller than 1 means default retry number of attempts.\n   */\n  readonly maxTries?: number;\n\n  /**\n   * Optional. Indicates the maximum time in ms allowed for any single try of an HTTP request.\n   * A value of zero or undefined means no default timeout on SDK client, Azure\n   * Storage server's default timeout policy will be used.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations\n   */\n  readonly tryTimeoutInMs?: number;\n\n  /**\n   * Optional. Specifies the amount of delay to use before retrying an operation (default is 4s or 4 * 1000ms).\n   * The delay increases (exponentially or linearly) with each retry up to a maximum specified by\n   * maxRetryDelayInMs. If you specify 0, then you must also specify 0 for maxRetryDelayInMs.\n   */\n  readonly retryDelayInMs?: number;\n\n  /**\n   * Optional. Specifies the maximum delay allowed before retrying an operation (default is 120s or 120 * 1000ms).\n   * If you specify 0, then you must also specify 0 for retryDelayInMs.\n   */\n  readonly maxRetryDelayInMs?: number;\n\n  /**\n   * If a secondaryHost is specified, retries will be tried against this host. If secondaryHost is undefined\n   * (the default) then operations are not retried against another host.\n   *\n   * NOTE: Before setting this field, make sure you understand the issues around\n   * reading stale and potentially-inconsistent data at\n   * {@link https://docs.microsoft.com/en-us/azure/storage/common/storage-designing-ha-apps-with-ragrs}\n   */\n  readonly secondaryHost?: string;\n}\n\n/**\n * StorageRetryPolicyFactory is a factory class helping generating {@link StorageRetryPolicy} objects.\n */\nexport class StorageRetryPolicyFactory implements RequestPolicyFactory {\n  private retryOptions?: StorageRetryOptions;\n\n  /**\n   * Creates an instance of StorageRetryPolicyFactory.\n   * @param retryOptions -\n   */\n  constructor(retryOptions?: StorageRetryOptions) {\n    this.retryOptions = retryOptions;\n  }\n\n  /**\n   * Creates a StorageRetryPolicy object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy {\n    return new StorageRetryPolicy(nextPolicy, options, this.retryOptions);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { BaseRequestPolicy, HttpOperationResponse, WebResource } from \"@azure/core-http\";\n\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n */\nexport abstract class CredentialPolicy extends BaseRequestPolicy {\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(this.signRequest(request));\n  }\n\n  /**\n   * Child classes must implement this method with request signing. This method\n   * will be executed in {@link sendRequest}.\n   *\n   * @param request -\n   */\n  protected signRequest(request: WebResource): WebResource {\n    // Child classes must override this method with request signing. This method\n    // will be executed in sendRequest().\n    return request;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { CredentialPolicy } from \"../policies/CredentialPolicy\";\n\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n */\nexport abstract class Credential implements RequestPolicyFactory {\n  /**\n   * Creates a RequestPolicy object.\n   *\n   * @param _nextPolicy -\n   * @param _options -\n   */\n  public create(_nextPolicy: RequestPolicy, _options: RequestPolicyOptions): RequestPolicy {\n    throw new Error(\"Method should be implemented in children classes.\");\n  }\n}\n\n/**\n * A factory function that creates a new CredentialPolicy that uses the provided nextPolicy.\n */\nexport type CredentialPolicyCreator = (\n  nextPolicy: RequestPolicy,\n  options: RequestPolicyOptions\n) => CredentialPolicy;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n */\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an {@link AnonymousCredentialPolicy} object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): AnonymousCredentialPolicy {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  HttpHeaders,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource,\n} from \"@azure/core-http\";\n\nimport { HeaderConstants } from \"../utils/constants\";\n\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n */\nexport class TelemetryPolicy extends BaseRequestPolicy {\n  /**\n   * Telemetry string.\n   */\n  public readonly telemetry: string;\n\n  /**\n   * Creates an instance of TelemetryPolicy.\n   * @param nextPolicy -\n   * @param options -\n   * @param telemetry -\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, telemetry: string) {\n    super(nextPolicy, options);\n    this.telemetry = telemetry;\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      if (!request.headers) {\n        request.headers = new HttpHeaders();\n      }\n      if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n      }\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  isNode,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  UserAgentOptions,\n} from \"@azure/core-http\";\nimport * as os from \"os\";\n\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n\n/**\n * TelemetryPolicyFactory is a factory class helping generating {@link TelemetryPolicy} objects.\n */\nexport class TelemetryPolicyFactory implements RequestPolicyFactory {\n  /**\n   * @internal\n   */\n  public readonly telemetryString: string;\n\n  /**\n   * Creates an instance of TelemetryPolicyFactory.\n   * @param telemetry -\n   */\n  constructor(telemetry?: UserAgentOptions) {\n    const userAgentInfo: string[] = [];\n\n    if (isNode) {\n      if (telemetry) {\n        const telemetryString = telemetry.userAgentPrefix || \"\";\n        if (telemetryString.length > 0 && userAgentInfo.indexOf(telemetryString) === -1) {\n          userAgentInfo.push(telemetryString);\n        }\n      }\n\n      // e.g. azsdk-js-storageblob/10.0.0\n      const libInfo = `azsdk-js-storageblob/${SDK_VERSION}`;\n      if (userAgentInfo.indexOf(libInfo) === -1) {\n        userAgentInfo.push(libInfo);\n      }\n\n      // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n      let runtimeInfo = `(NODE-VERSION ${process.version})`;\n      if (os) {\n        runtimeInfo = `(NODE-VERSION ${process.version}; ${os.type()} ${os.release()})`;\n      }\n      if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n        userAgentInfo.push(runtimeInfo);\n      }\n    }\n\n    this.telemetryString = userAgentInfo.join(\" \");\n  }\n\n  /**\n   * Creates a TelemetryPolicy object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): TelemetryPolicy {\n    return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as http from \"http\";\nimport * as https from \"https\";\nimport * as tunnel from \"tunnel\";\nimport { HttpHeadersLike } from \"./httpHeaders\";\nimport { ProxySettings } from \"./serviceClient\";\nimport { URLBuilder } from \"./url\";\n\nexport type ProxyAgent = { isHttps: boolean; agent: http.Agent | https.Agent };\nexport function createProxyAgent(\n  requestUrl: string,\n  proxySettings: ProxySettings,\n  headers?: HttpHeadersLike\n): ProxyAgent {\n  const host = URLBuilder.parse(proxySettings.host).getHost() as string;\n  if (!host) {\n    throw new Error(\"Expecting a non-empty host in proxy settings.\");\n  }\n  if (!isValidPort(proxySettings.port)) {\n    throw new Error(\"Expecting a valid port number in the range of [0, 65535] in proxy settings.\");\n  }\n  const tunnelOptions: tunnel.HttpsOverHttpsOptions = {\n    proxy: {\n      host: host,\n      port: proxySettings.port,\n      headers: (headers && headers.rawHeaders()) || {},\n    },\n  };\n\n  if (proxySettings.username && proxySettings.password) {\n    tunnelOptions.proxy!.proxyAuth = `${proxySettings.username}:${proxySettings.password}`;\n  } else if (proxySettings.username) {\n    tunnelOptions.proxy!.proxyAuth = `${proxySettings.username}`;\n  }\n\n  const isRequestHttps = isUrlHttps(requestUrl);\n  const isProxyHttps = isUrlHttps(proxySettings.host);\n\n  const proxyAgent = {\n    isHttps: isRequestHttps,\n    agent: createTunnel(isRequestHttps, isProxyHttps, tunnelOptions),\n  };\n\n  return proxyAgent;\n}\n\nexport function isUrlHttps(url: string): boolean {\n  const urlScheme = URLBuilder.parse(url).getScheme() || \"\";\n  return urlScheme.toLowerCase() === \"https\";\n}\n\nexport function createTunnel(\n  isRequestHttps: boolean,\n  isProxyHttps: boolean,\n  tunnelOptions: tunnel.HttpsOverHttpsOptions\n): http.Agent | https.Agent {\n  if (isRequestHttps && isProxyHttps) {\n    return tunnel.httpsOverHttps(tunnelOptions);\n  } else if (isRequestHttps && !isProxyHttps) {\n    return tunnel.httpsOverHttp(tunnelOptions);\n  } else if (!isRequestHttps && isProxyHttps) {\n    return tunnel.httpOverHttps(tunnelOptions);\n  } else {\n    return tunnel.httpOverHttp(tunnelOptions);\n  }\n}\n\nfunction isValidPort(port: number): boolean {\n  // any port in 0-65535 range is valid (RFC 793) even though almost all implementations\n  // will reserve 0 for a specific purpose, and a range of numbers for ephemeral ports\n  return 0 <= port && port <= 65535;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"zlib\");","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport whatwgUrl from 'whatwg-url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as http from \"http\";\nimport * as https from \"https\";\nimport * as tough from \"tough-cookie\";\nimport { AbortController, AbortError } from \"@azure/abort-controller\";\nimport { HttpHeaders, HttpHeadersLike } from \"./httpHeaders\";\nimport { ProxyAgent, createProxyAgent, isUrlHttps } from \"./proxyAgent\";\nimport { Readable, Transform } from \"stream\";\nimport { TransferProgressEvent, WebResourceLike } from \"./webResource\";\nimport FormData from \"form-data\";\nimport { HttpClient } from \"./httpClient\";\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { RestError } from \"./restError\";\nimport { logger } from \"./log\";\nimport node_fetch from \"node-fetch\";\n\ninterface AgentCache {\n  httpAgent?: http.Agent;\n  httpsAgent?: https.Agent;\n}\n\nfunction getCachedAgent(\n  isHttps: boolean,\n  agentCache: AgentCache\n): http.Agent | https.Agent | undefined {\n  return isHttps ? agentCache.httpsAgent : agentCache.httpAgent;\n}\n\ninterface FetchError extends Error {\n  code?: string;\n  errno?: string;\n  type?: string;\n}\n\n/**\n * String URLs used when calling to `fetch()`.\n */\nexport type CommonRequestInfo = string;\n\n/**\n * An object containing information about the outgoing HTTP request.\n */\nexport type CommonRequestInit = Omit<RequestInit, \"body\" | \"headers\" | \"signal\"> & {\n  body?: any;\n  headers?: any;\n  signal?: any;\n};\n\n/**\n * An object containing information about the incoming HTTP response.\n */\nexport type CommonResponse = Omit<Response, \"body\" | \"trailer\" | \"formData\"> & {\n  body: any;\n  trailer: any;\n  formData: any;\n};\n\nexport class ReportTransform extends Transform {\n  private loadedBytes: number = 0;\n  _transform(chunk: string | Buffer, _encoding: string, callback: (arg: any) => void): void {\n    this.push(chunk);\n    this.loadedBytes += chunk.length;\n    this.progressCallback!({ loadedBytes: this.loadedBytes });\n    callback(undefined);\n  }\n\n  constructor(private progressCallback: (progress: TransferProgressEvent) => void) {\n    super();\n  }\n}\n\nfunction isReadableStream(body: any): body is Readable {\n  return body && typeof body.pipe === \"function\";\n}\n\nfunction isStreamComplete(stream: Readable, aborter?: AbortController): Promise<void> {\n  return new Promise((resolve) => {\n    stream.once(\"close\", () => {\n      aborter?.abort();\n      resolve();\n    });\n    stream.once(\"end\", resolve);\n    stream.once(\"error\", resolve);\n  });\n}\n\n/**\n * Transforms a set of headers into the key/value pair defined by {@link HttpHeadersLike}\n */\nexport function parseHeaders(headers: Headers): HttpHeadersLike {\n  const httpHeaders = new HttpHeaders();\n\n  headers.forEach((value, key) => {\n    httpHeaders.set(key, value);\n  });\n\n  return httpHeaders;\n}\n\n/**\n * An HTTP client that uses `node-fetch`.\n */\nexport class NodeFetchHttpClient implements HttpClient {\n  /**\n   * Provides minimum viable error handling and the logic that executes the abstract methods.\n   * @param httpRequest - Object representing the outgoing HTTP request.\n   * @returns An object representing the incoming HTTP response.\n   */\n  async sendRequest(httpRequest: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!httpRequest && typeof httpRequest !== \"object\") {\n      throw new Error(\n        \"'httpRequest' (WebResourceLike) cannot be null or undefined and must be of type object.\"\n      );\n    }\n\n    const abortController = new AbortController();\n    let abortListener: ((event: any) => void) | undefined;\n    if (httpRequest.abortSignal) {\n      if (httpRequest.abortSignal.aborted) {\n        throw new AbortError(\"The operation was aborted.\");\n      }\n\n      abortListener = (event: Event) => {\n        if (event.type === \"abort\") {\n          abortController.abort();\n        }\n      };\n      httpRequest.abortSignal.addEventListener(\"abort\", abortListener);\n    }\n\n    if (httpRequest.timeout) {\n      setTimeout(() => {\n        abortController.abort();\n      }, httpRequest.timeout);\n    }\n\n    if (httpRequest.formData) {\n      const formData: any = httpRequest.formData;\n      const requestForm = new FormData();\n      const appendFormValue = (key: string, value: any): void => {\n        // value function probably returns a stream so we can provide a fresh stream on each retry\n        if (typeof value === \"function\") {\n          value = value();\n        }\n        if (\n          value &&\n          Object.prototype.hasOwnProperty.call(value, \"value\") &&\n          Object.prototype.hasOwnProperty.call(value, \"options\")\n        ) {\n          requestForm.append(key, value.value, value.options);\n        } else {\n          requestForm.append(key, value);\n        }\n      };\n      for (const formKey of Object.keys(formData)) {\n        const formValue = formData[formKey];\n        if (Array.isArray(formValue)) {\n          for (let j = 0; j < formValue.length; j++) {\n            appendFormValue(formKey, formValue[j]);\n          }\n        } else {\n          appendFormValue(formKey, formValue);\n        }\n      }\n\n      httpRequest.body = requestForm;\n      httpRequest.formData = undefined;\n      const contentType = httpRequest.headers.get(\"Content-Type\");\n      if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n        if (typeof requestForm.getBoundary === \"function\") {\n          httpRequest.headers.set(\n            \"Content-Type\",\n            `multipart/form-data; boundary=${requestForm.getBoundary()}`\n          );\n        } else {\n          // browser will automatically apply a suitable content-type header\n          httpRequest.headers.remove(\"Content-Type\");\n        }\n      }\n    }\n\n    let body = httpRequest.body\n      ? typeof httpRequest.body === \"function\"\n        ? httpRequest.body()\n        : httpRequest.body\n      : undefined;\n    if (httpRequest.onUploadProgress && httpRequest.body) {\n      const onUploadProgress = httpRequest.onUploadProgress;\n      const uploadReportStream = new ReportTransform(onUploadProgress);\n      if (isReadableStream(body)) {\n        body.pipe(uploadReportStream);\n      } else {\n        uploadReportStream.end(body);\n      }\n\n      body = uploadReportStream;\n    }\n\n    const platformSpecificRequestInit: Partial<RequestInit> = await this.prepareRequest(\n      httpRequest\n    );\n\n    const requestInit: RequestInit = {\n      body: body,\n      headers: httpRequest.headers.rawHeaders(),\n      method: httpRequest.method,\n      // the types for RequestInit are from the browser, which expects AbortSignal to\n      // have `reason` and `throwIfAborted`, but these don't exist on our polyfill\n      // for Node.\n      signal: abortController.signal as any,\n      redirect: \"manual\",\n      ...platformSpecificRequestInit,\n    };\n\n    let operationResponse: HttpOperationResponse | undefined;\n    try {\n      const response: CommonResponse = await this.fetch(httpRequest.url, requestInit);\n\n      const headers = parseHeaders(response.headers);\n\n      const streaming =\n        httpRequest.streamResponseStatusCodes?.has(response.status) ||\n        httpRequest.streamResponseBody;\n\n      operationResponse = {\n        headers: headers,\n        request: httpRequest,\n        status: response.status,\n        readableStreamBody: streaming\n          ? (response.body as unknown as NodeJS.ReadableStream)\n          : undefined,\n        bodyAsText: !streaming ? await response.text() : undefined,\n      };\n\n      const onDownloadProgress = httpRequest.onDownloadProgress;\n      if (onDownloadProgress) {\n        const responseBody: ReadableStream<Uint8Array> | undefined = response.body || undefined;\n\n        if (isReadableStream(responseBody)) {\n          const downloadReportStream = new ReportTransform(onDownloadProgress);\n          responseBody.pipe(downloadReportStream);\n          operationResponse.readableStreamBody = downloadReportStream;\n        } else {\n          const length = parseInt(headers.get(\"Content-Length\")!) || undefined;\n          if (length) {\n            // Calling callback for non-stream response for consistency with browser\n            onDownloadProgress({ loadedBytes: length });\n          }\n        }\n      }\n\n      await this.processRequest(operationResponse);\n\n      return operationResponse;\n    } catch (error: any) {\n      const fetchError: FetchError = error;\n      if (fetchError.code === \"ENOTFOUND\") {\n        throw new RestError(\n          fetchError.message,\n          RestError.REQUEST_SEND_ERROR,\n          undefined,\n          httpRequest\n        );\n      } else if (fetchError.type === \"aborted\") {\n        throw new AbortError(\"The operation was aborted.\");\n      }\n\n      throw fetchError;\n    } finally {\n      // clean up event listener\n      if (httpRequest.abortSignal && abortListener) {\n        let uploadStreamDone = Promise.resolve();\n        if (isReadableStream(body)) {\n          uploadStreamDone = isStreamComplete(body);\n        }\n        let downloadStreamDone = Promise.resolve();\n        if (isReadableStream(operationResponse?.readableStreamBody)) {\n          downloadStreamDone = isStreamComplete(\n            operationResponse!.readableStreamBody,\n            abortController\n          );\n        }\n\n        Promise.all([uploadStreamDone, downloadStreamDone])\n          .then(() => {\n            httpRequest.abortSignal?.removeEventListener(\"abort\", abortListener!);\n            return;\n          })\n          .catch((e) => {\n            logger.warning(\"Error when cleaning up abortListener on httpRequest\", e);\n          });\n      }\n    }\n  }\n\n  // a mapping of proxy settings string `${host}:${port}:${username}:${password}` to agent\n  private proxyAgentMap: Map<string, AgentCache> = new Map();\n  private keepAliveAgents: AgentCache = {};\n\n  private readonly cookieJar = new tough.CookieJar(undefined, { looseMode: true });\n\n  private getOrCreateAgent(httpRequest: WebResourceLike): http.Agent | https.Agent {\n    const isHttps = isUrlHttps(httpRequest.url);\n\n    // At the moment, proxy settings and keepAlive are mutually\n    // exclusive because the 'tunnel' library currently lacks the\n    // ability to create a proxy with keepAlive turned on.\n    if (httpRequest.proxySettings) {\n      const { host, port, username, password } = httpRequest.proxySettings;\n      const key = `${host}:${port}:${username}:${password}`;\n      const proxyAgents = this.proxyAgentMap.get(key) ?? {};\n\n      let agent = getCachedAgent(isHttps, proxyAgents);\n      if (agent) {\n        return agent;\n      }\n\n      const tunnel: ProxyAgent = createProxyAgent(\n        httpRequest.url,\n        httpRequest.proxySettings,\n        httpRequest.headers\n      );\n\n      agent = tunnel.agent;\n      if (tunnel.isHttps) {\n        proxyAgents.httpsAgent = tunnel.agent as https.Agent;\n      } else {\n        proxyAgents.httpAgent = tunnel.agent;\n      }\n      this.proxyAgentMap.set(key, proxyAgents);\n\n      return agent;\n    } else if (httpRequest.keepAlive) {\n      let agent = getCachedAgent(isHttps, this.keepAliveAgents);\n      if (agent) {\n        return agent;\n      }\n\n      const agentOptions: http.AgentOptions | https.AgentOptions = {\n        keepAlive: httpRequest.keepAlive,\n      };\n\n      if (isHttps) {\n        agent = this.keepAliveAgents.httpsAgent = new https.Agent(agentOptions);\n      } else {\n        agent = this.keepAliveAgents.httpAgent = new http.Agent(agentOptions);\n      }\n\n      return agent;\n    } else {\n      return isHttps ? https.globalAgent : http.globalAgent;\n    }\n  }\n\n  /**\n   * Uses `node-fetch` to perform the request.\n   */\n  // eslint-disable-next-line @azure/azure-sdk/ts-apisurface-standardized-verbs\n  async fetch(input: CommonRequestInfo, init?: CommonRequestInit): Promise<CommonResponse> {\n    return node_fetch(input, init) as unknown as Promise<CommonResponse>;\n  }\n\n  /**\n   * Prepares a request based on the provided web resource.\n   */\n  async prepareRequest(httpRequest: WebResourceLike): Promise<Partial<RequestInit>> {\n    const requestInit: Partial<RequestInit & { agent?: any; compress?: boolean }> = {};\n\n    if (this.cookieJar && !httpRequest.headers.get(\"Cookie\")) {\n      const cookieString = await new Promise<string>((resolve, reject) => {\n        this.cookieJar!.getCookieString(httpRequest.url, (err, cookie) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(cookie);\n          }\n        });\n      });\n\n      httpRequest.headers.set(\"Cookie\", cookieString);\n    }\n\n    // Set the http(s) agent\n    requestInit.agent = this.getOrCreateAgent(httpRequest);\n\n    requestInit.compress = httpRequest.decompressResponse;\n\n    return requestInit;\n  }\n\n  /**\n   * Process an HTTP response. Handles persisting a cookie for subsequent requests if the response has a \"Set-Cookie\" header.\n   */\n  async processRequest(operationResponse: HttpOperationResponse): Promise<void> {\n    if (this.cookieJar) {\n      const setCookieHeader = operationResponse.headers.get(\"Set-Cookie\");\n      if (setCookieHeader !== undefined) {\n        await new Promise<void>((resolve, reject) => {\n          this.cookieJar!.setCookie(\n            setCookieHeader,\n            operationResponse.request.url,\n            { ignoreError: true },\n            (err) => {\n              if (err) {\n                reject(err);\n              } else {\n                resolve();\n              }\n            }\n          );\n        });\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { DefaultHttpClient } from \"@azure/core-http\";\nimport { IHttpClient } from \"../Pipeline\";\n\nconst _defaultHttpClient = new DefaultHttpClient();\n\nexport function getCachedDefaultHttpClient(): IHttpClient {\n  return _defaultHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nexport function isDefined<T>(thing: T | undefined | null): thing is T {\n  return typeof thing !== \"undefined\" && thing !== null;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nexport function isObjectWithProperties<Thing, PropertyName extends string>(\n  thing: Thing,\n  properties: PropertyName[]\n): thing is Thing & Record<PropertyName, unknown> {\n  if (!isDefined(thing) || typeof thing !== \"object\") {\n    return false;\n  }\n\n  for (const property of properties) {\n    if (!objectHasProperty(thing, property)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nexport function objectHasProperty<Thing, PropertyName extends string>(\n  thing: Thing,\n  property: PropertyName\n): thing is Thing & Record<PropertyName, unknown> {\n  return (\n    isDefined(thing) && typeof thing === \"object\" && property in (thing as Record<string, unknown>)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError, AbortSignalLike } from \"@azure/abort-controller\";\nimport { isDefined } from \"./typeGuards\";\n\nconst StandardAbortMessage = \"The operation was aborted.\";\n\n/**\n * Options for support abort functionality for the delay method\n */\nexport interface DelayOptions {\n  /**\n   * The abortSignal associated with containing operation.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * The abort error message associated with containing operation.\n   */\n  abortErrorMsg?: string;\n}\n\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nexport function delay(timeInMs: number, options?: DelayOptions): Promise<void> {\n  return new Promise((resolve, reject) => {\n    let timer: ReturnType<typeof setTimeout> | undefined = undefined;\n    let onAborted: (() => void) | undefined = undefined;\n\n    const rejectOnAbort = (): void => {\n      return reject(new AbortError(options?.abortErrorMsg ?? StandardAbortMessage));\n    };\n\n    const removeListeners = (): void => {\n      if (options?.abortSignal && onAborted) {\n        options.abortSignal.removeEventListener(\"abort\", onAborted);\n      }\n    };\n\n    onAborted = (): void => {\n      if (isDefined(timer)) {\n        clearTimeout(timer);\n      }\n      removeListeners();\n      return rejectOnAbort();\n    };\n\n    if (options?.abortSignal && options.abortSignal.aborted) {\n      return rejectOnAbort();\n    }\n\n    timer = setTimeout(() => {\n      removeListeners();\n      resolve();\n    }, timeInMs);\n\n    if (options?.abortSignal) {\n      options.abortSignal.addEventListener(\"abort\", onAborted);\n    }\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccessToken, GetTokenOptions, TokenCredential, URLBuilder } from \"@azure/core-http\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"@azure/core-http\";\nimport { HttpOperationResponse } from \"@azure/core-http\";\nimport { WebResourceLike } from \"@azure/core-http\";\nimport { delay } from \"@azure/core-http\";\n\n/**\n * A set of constants used internally when processing requests.\n */\nconst Constants = {\n  DefaultScope: \"/.default\",\n  /**\n   * Defines constants for use with HTTP headers.\n   */\n  HeaderConstants: {\n    /**\n     * The Authorization header.\n     */\n    AUTHORIZATION: \"authorization\",\n  },\n};\n\n// #region Access Token Cycler\n\n/**\n * A function that gets a promise of an access token and allows providing\n * options.\n *\n * @param options - the options to pass to the underlying token provider\n */\ntype AccessTokenGetter = (options: GetTokenOptions) => Promise<AccessToken>;\n\ninterface TokenCyclerOptions {\n  /**\n   * The window of time before token expiration during which the token will be\n   * considered unusable due to risk of the token expiring before sending the\n   * request.\n   *\n   * This will only become meaningful if the refresh fails for over\n   * (refreshWindow - forcedRefreshWindow) milliseconds.\n   */\n  forcedRefreshWindowInMs: number;\n  /**\n   * Interval in milliseconds to retry failed token refreshes.\n   */\n  retryIntervalInMs: number;\n  /**\n   * The window of time before token expiration during which\n   * we will attempt to refresh the token.\n   */\n  refreshWindowInMs: number;\n}\n\n// Default options for the cycler if none are provided\nconst DEFAULT_CYCLER_OPTIONS: TokenCyclerOptions = {\n  forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n  retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n  refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - a function that produces a promise of an access\n * token that may fail by returning null\n * @param retryIntervalInMs - the time (in milliseconds) to wait between retry\n * attempts\n * @param timeoutInMs - the timestamp after which the refresh attempt will fail,\n * throwing an exception\n * @returns - a promise that, if it resolves, will resolve with an access token\n */\nasync function beginRefresh(\n  getAccessToken: () => Promise<AccessToken | null>,\n  retryIntervalInMs: number,\n  timeoutInMs: number\n): Promise<AccessToken> {\n  // This wrapper handles exceptions gracefully as long as we haven't exceeded\n  // the timeout.\n  async function tryGetAccessToken(): Promise<AccessToken | null> {\n    if (Date.now() < timeoutInMs) {\n      try {\n        return await getAccessToken();\n      } catch {\n        return null;\n      }\n    } else {\n      const finalToken = await getAccessToken();\n\n      // Timeout is up, so throw if it's still null\n      if (finalToken === null) {\n        throw new Error(\"Failed to refresh access token.\");\n      }\n\n      return finalToken;\n    }\n  }\n\n  let token: AccessToken | null = await tryGetAccessToken();\n\n  while (token === null) {\n    await delay(retryIntervalInMs);\n\n    token = await tryGetAccessToken();\n  }\n\n  return token;\n}\n\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param scopes - the scopes to request authorization for\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nfunction createTokenCycler(\n  credential: TokenCredential,\n  scopes: string | string[],\n  tokenCyclerOptions?: Partial<TokenCyclerOptions>\n): AccessTokenGetter {\n  let refreshWorker: Promise<AccessToken> | null = null;\n  let token: AccessToken | null = null;\n\n  const options = {\n    ...DEFAULT_CYCLER_OPTIONS,\n    ...tokenCyclerOptions,\n  };\n\n  /**\n   * This little holder defines several predicates that we use to construct\n   * the rules of refreshing the token.\n   */\n  const cycler = {\n    /**\n     * Produces true if a refresh job is currently in progress.\n     */\n    get isRefreshing(): boolean {\n      return refreshWorker !== null;\n    },\n    /**\n     * Produces true if the cycler SHOULD refresh (we are within the refresh\n     * window and not already refreshing)\n     */\n    get shouldRefresh(): boolean {\n      return (\n        !cycler.isRefreshing &&\n        (token?.expiresOnTimestamp ?? 0) - options.refreshWindowInMs < Date.now()\n      );\n    },\n    /**\n     * Produces true if the cycler MUST refresh (null or nearly-expired\n     * token).\n     */\n    get mustRefresh(): boolean {\n      return (\n        token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now()\n      );\n    },\n  };\n\n  /**\n   * Starts a refresh job or returns the existing job if one is already\n   * running.\n   */\n  function refresh(getTokenOptions: GetTokenOptions): Promise<AccessToken> {\n    if (!cycler.isRefreshing) {\n      // We bind `scopes` here to avoid passing it around a lot\n      const tryGetAccessToken = (): Promise<AccessToken | null> =>\n        credential.getToken(scopes, getTokenOptions);\n\n      // Take advantage of promise chaining to insert an assignment to `token`\n      // before the refresh can be considered done.\n      refreshWorker = beginRefresh(\n        tryGetAccessToken,\n        options.retryIntervalInMs,\n        // If we don't have a token, then we should timeout immediately\n        token?.expiresOnTimestamp ?? Date.now()\n      )\n        .then((_token) => {\n          refreshWorker = null;\n          token = _token;\n          return token;\n        })\n        .catch((reason) => {\n          // We also should reset the refresher if we enter a failed state.  All\n          // existing awaiters will throw, but subsequent requests will start a\n          // new retry chain.\n          refreshWorker = null;\n          token = null;\n          throw reason;\n        });\n    }\n\n    return refreshWorker as Promise<AccessToken>;\n  }\n\n  return async (tokenOptions: GetTokenOptions): Promise<AccessToken> => {\n    //\n    // Simple rules:\n    // - If we MUST refresh, then return the refresh task, blocking\n    //   the pipeline until a token is available.\n    // - If we SHOULD refresh, then run refresh but don't return it\n    //   (we can still use the cached token).\n    // - Return the token, since it's fine if we didn't return in\n    //   step 1.\n    //\n\n    if (cycler.mustRefresh) return refresh(tokenOptions);\n\n    if (cycler.shouldRefresh) {\n      refresh(tokenOptions);\n    }\n\n    return token as AccessToken;\n  };\n}\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction getChallenge(response: HttpOperationResponse): string | undefined {\n  const challenge = response.headers.get(\"WWW-Authenticate\");\n  if (response.status === 401 && challenge) {\n    return challenge;\n  }\n  return;\n}\n\n/**\n * Challenge structure\n */\ninterface Challenge {\n  authorization_uri: string;\n  resource_id: string;\n}\n\n/**\n * Converts: `Bearer a=\"b\" c=\"d\"`.\n * Into: `[ { a: 'b', c: 'd' }]`.\n *\n * @internal\n */\nfunction parseChallenge(challenge: string): any {\n  const bearerChallenge = challenge.slice(\"Bearer \".length);\n  const challengeParts = `${bearerChallenge.trim()} `.split(\" \").filter((x) => x);\n  const keyValuePairs = challengeParts.map((keyValue) =>\n    (([key, value]) => ({ [key]: value }))(keyValue.trim().split(\"=\"))\n  );\n  // Key-value pairs to plain object:\n  return keyValuePairs.reduce((a, b) => ({ ...a, ...b }), {});\n}\n\n// #endregion\n\n/**\n * Creates a new factory for a RequestPolicy that applies a bearer token to\n * the requests' `Authorization` headers.\n *\n * @param credential - The TokenCredential implementation that can supply the bearer token.\n * @param scopes - The scopes for which the bearer token applies.\n */\n\nexport function storageBearerTokenChallengeAuthenticationPolicy(\n  credential: TokenCredential,\n  scopes: string | string[]\n): RequestPolicyFactory {\n  // This simple function encapsulates the entire process of reliably retrieving the token\n  let getToken = createTokenCycler(credential, scopes);\n\n  class StorageBearerTokenChallengeAuthenticationPolicy extends BaseRequestPolicy {\n    public constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n      super(nextPolicy, options);\n    }\n\n    public async sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse> {\n      if (!webResource.url.toLowerCase().startsWith(\"https://\")) {\n        throw new Error(\n          \"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\"\n        );\n      }\n\n      const getTokenInternal = getToken;\n      const token = (\n        await getTokenInternal({\n          abortSignal: webResource.abortSignal,\n          tracingOptions: {\n            tracingContext: webResource.tracingContext,\n          },\n        })\n      ).token;\n      webResource.headers.set(Constants.HeaderConstants.AUTHORIZATION, `Bearer ${token}`);\n\n      const response = await this._nextPolicy.sendRequest(webResource);\n\n      if (response?.status === 401) {\n        const challenge = getChallenge(response);\n        if (challenge) {\n          const challengeInfo: Challenge = parseChallenge(challenge);\n          const challengeScopes = challengeInfo.resource_id + Constants.DefaultScope;\n          const parsedAuthUri = URLBuilder.parse(challengeInfo.authorization_uri);\n          const pathSegments = parsedAuthUri.getPath()!.split(\"/\");\n          const tenantId = pathSegments[1];\n          const getTokenForChallenge = createTokenCycler(credential, challengeScopes);\n\n          const tokenForChallenge = (\n            await getTokenForChallenge({\n              abortSignal: webResource.abortSignal,\n              tracingOptions: {\n                tracingContext: webResource.tracingContext,\n              },\n              tenantId: tenantId,\n            })\n          ).token;\n\n          getToken = getTokenForChallenge;\n          webResource.headers.set(\n            Constants.HeaderConstants.AUTHORIZATION,\n            `Bearer ${tokenForChallenge}`\n          );\n          return this._nextPolicy.sendRequest(webResource);\n        }\n      }\n\n      return response;\n    }\n  }\n\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new StorageBearerTokenChallengeAuthenticationPolicy(nextPolicy, options);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  deserializationPolicy,\n  disableResponseDecompressionPolicy,\n  HttpClient as IHttpClient,\n  HttpHeaders,\n  HttpOperationResponse,\n  HttpRequestBody,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  ServiceClientOptions,\n  WebResource,\n  proxyPolicy,\n  isNode,\n  TokenCredential,\n  isTokenCredential,\n  tracingPolicy,\n  logPolicy,\n  ProxyOptions,\n  keepAlivePolicy,\n  KeepAliveOptions,\n  generateClientRequestIdPolicy,\n  UserAgentOptions,\n} from \"@azure/core-http\";\n\nimport { logger } from \"./log\";\nimport { StorageBrowserPolicyFactory } from \"./StorageBrowserPolicyFactory\";\nimport { StorageRetryOptions, StorageRetryPolicyFactory } from \"./StorageRetryPolicyFactory\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport {\n  StorageOAuthScopes,\n  StorageBlobLoggingAllowedHeaderNames,\n  StorageBlobLoggingAllowedQueryParameters,\n} from \"./utils/constants\";\nimport { TelemetryPolicyFactory } from \"./TelemetryPolicyFactory\";\nimport { getCachedDefaultHttpClient } from \"./utils/cache\";\nimport { attachCredential } from \"./utils/utils.common\";\nimport { storageBearerTokenChallengeAuthenticationPolicy } from \"./policies/StorageBearerTokenChallengeAuthenticationPolicy\";\n\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport {\n  BaseRequestPolicy,\n  StorageOAuthScopes,\n  deserializationPolicy,\n  IHttpClient,\n  HttpHeaders,\n  HttpRequestBody,\n  HttpOperationResponse,\n  WebResource,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions,\n};\n\n/**\n * Option interface for Pipeline constructor.\n */\nexport interface PipelineOptions {\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * An interface for the {@link Pipeline} class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies before implementing your\n * customized Pipeline.\n */\nexport interface PipelineLike {\n  /**\n   * A list of chained request policy factories.\n   */\n  readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   */\n  readonly options: PipelineOptions;\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which is required by\n   * ServiceClient constructor.\n   *\n   * @returns The ServiceClientOptions object from this Pipeline.\n   */\n  toServiceClientOptions(): ServiceClientOptions;\n}\n\n/**\n * A helper to decide if a given argument satisfies the Pipeline contract\n * @param pipeline - An argument that may be a Pipeline\n * @returns true when the argument satisfies the Pipeline contract\n */\nexport function isPipelineLike(pipeline: unknown): pipeline is PipelineLike {\n  if (!pipeline || typeof pipeline !== \"object\") {\n    return false;\n  }\n\n  const castPipeline = pipeline as PipelineLike;\n\n  return (\n    Array.isArray(castPipeline.factories) &&\n    typeof castPipeline.options === \"object\" &&\n    typeof castPipeline.toServiceClientOptions === \"function\"\n  );\n}\n\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies before implementing your\n * customized Pipeline.\n */\nexport class Pipeline implements PipelineLike {\n  /**\n   * A list of chained request policy factories.\n   */\n  public readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   */\n  public readonly options: PipelineOptions;\n\n  /**\n   * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n   *\n   * @param factories -\n   * @param options -\n   */\n  constructor(factories: RequestPolicyFactory[], options: PipelineOptions = {}) {\n    this.factories = factories;\n    // when options.httpClient is not specified, passing in a DefaultHttpClient instance to\n    // avoid each client creating its own http client.\n    this.options = {\n      ...options,\n      httpClient: options.httpClient || getCachedDefaultHttpClient(),\n    };\n  }\n\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which is required by\n   * ServiceClient constructor.\n   *\n   * @returns The ServiceClientOptions object from this Pipeline.\n   */\n  public toServiceClientOptions(): ServiceClientOptions {\n    return {\n      httpClient: this.options.httpClient,\n      requestPolicyFactories: this.factories,\n    };\n  }\n}\n\n/**\n * Options interface for the {@link newPipeline} function.\n */\nexport interface StoragePipelineOptions {\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxyOptions;\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentOptions;\n  /**\n   * Configures the built-in retry policy behavior.\n   */\n  retryOptions?: StorageRetryOptions;\n  /**\n   * Keep alive configurations. Default keep-alive is enabled.\n   */\n  keepAliveOptions?: KeepAliveOptions;\n  /**\n   * Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n  /**\n   * The audience used to retrieve an AAD token.\n   */\n  audience?: string | string[];\n}\n\n/**\n * Creates a new Pipeline object with Credential provided.\n *\n * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n * @param pipelineOptions - Optional. Options.\n * @returns A new Pipeline object.\n */\nexport function newPipeline(\n  credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n  pipelineOptions: StoragePipelineOptions = {}\n): Pipeline {\n  if (credential === undefined) {\n    credential = new AnonymousCredential();\n  }\n\n  // Order is important. Closer to the API at the top & closer to the network at the bottom.\n  // The credential's policy factory must appear close to the wire so it can sign any\n  // changes made by other factories (like UniqueRequestIDPolicyFactory)\n\n  const telemetryPolicy = new TelemetryPolicyFactory(pipelineOptions.userAgentOptions);\n  const factories: RequestPolicyFactory[] = [\n    tracingPolicy({ userAgent: telemetryPolicy.telemetryString }),\n    keepAlivePolicy(pipelineOptions.keepAliveOptions),\n    telemetryPolicy,\n    generateClientRequestIdPolicy(),\n    new StorageBrowserPolicyFactory(),\n    new StorageRetryPolicyFactory(pipelineOptions.retryOptions), // Retry policy should be above any policy that throws retryable errors\n    // Default deserializationPolicy is provided by protocol layer\n    // Use customized XML char key of \"#\" so we could deserialize metadata\n    // with \"_\" key\n    deserializationPolicy(undefined, { xmlCharKey: \"#\" }),\n    logPolicy({\n      logger: logger.info,\n      allowedHeaderNames: StorageBlobLoggingAllowedHeaderNames,\n      allowedQueryParameters: StorageBlobLoggingAllowedQueryParameters,\n    }),\n  ];\n\n  if (isNode) {\n    // policies only available in Node.js runtime, not in browsers\n    factories.push(proxyPolicy(pipelineOptions.proxyOptions));\n    factories.push(disableResponseDecompressionPolicy());\n  }\n  factories.push(\n    isTokenCredential(credential)\n      ? attachCredential(\n          storageBearerTokenChallengeAuthenticationPolicy(\n            credential,\n            pipelineOptions.audience ?? StorageOAuthScopes\n          ),\n          credential\n        )\n      : credential\n  );\n\n  return new Pipeline(factories, pipelineOptions);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyOptions, WebResource } from \"@azure/core-http\";\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { getURLPath, getURLQueries } from \"../utils/utils.common\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * StorageSharedKeyCredentialPolicy is a policy used to sign HTTP request with a shared key.\n */\nexport class StorageSharedKeyCredentialPolicy extends CredentialPolicy {\n  /**\n   * Reference to StorageSharedKeyCredential which generates StorageSharedKeyCredentialPolicy\n   */\n  private readonly factory: StorageSharedKeyCredential;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredentialPolicy.\n   * @param nextPolicy -\n   * @param options -\n   * @param factory -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    factory: StorageSharedKeyCredential\n  ) {\n    super(nextPolicy, options);\n    this.factory = factory;\n  }\n\n  /**\n   * Signs request.\n   *\n   * @param request -\n   */\n  protected signRequest(request: WebResource): WebResource {\n    request.headers.set(HeaderConstants.X_MS_DATE, new Date().toUTCString());\n\n    if (\n      request.body &&\n      (typeof request.body === \"string\" || (request.body as Buffer) !== undefined) &&\n      request.body.length > 0\n    ) {\n      request.headers.set(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(request.body));\n    }\n\n    const stringToSign: string =\n      [\n        request.method.toUpperCase(),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LANGUAGE),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_ENCODING),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LENGTH),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_MD5),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_TYPE),\n        this.getHeaderValueToSign(request, HeaderConstants.DATE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_NONE_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_UNMODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.RANGE),\n      ].join(\"\\n\") +\n      \"\\n\" +\n      this.getCanonicalizedHeadersString(request) +\n      this.getCanonicalizedResourceString(request);\n\n    const signature: string = this.factory.computeHMACSHA256(stringToSign);\n    request.headers.set(\n      HeaderConstants.AUTHORIZATION,\n      `SharedKey ${this.factory.accountName}:${signature}`\n    );\n\n    // console.log(`[URL]:${request.url}`);\n    // console.log(`[HEADERS]:${request.headers.toString()}`);\n    // console.log(`[STRING TO SIGN]:${JSON.stringify(stringToSign)}`);\n    // console.log(`[KEY]: ${request.headers.get(HeaderConstants.AUTHORIZATION)}`);\n    return request;\n  }\n\n  /**\n   * Retrieve header value according to shared key sign rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n   *\n   * @param request -\n   * @param headerName -\n   */\n  private getHeaderValueToSign(request: WebResource, headerName: string): string {\n    const value = request.headers.get(headerName);\n\n    if (!value) {\n      return \"\";\n    }\n\n    // When using version 2015-02-21 or later, if Content-Length is zero, then\n    // set the Content-Length part of the StringToSign to an empty string.\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n    if (headerName === HeaderConstants.CONTENT_LENGTH && value === \"0\") {\n      return \"\";\n    }\n\n    return value;\n  }\n\n  /**\n   * To construct the CanonicalizedHeaders portion of the signature string, follow these steps:\n   * 1. Retrieve all headers for the resource that begin with x-ms-, including the x-ms-date header.\n   * 2. Convert each HTTP header name to lowercase.\n   * 3. Sort the headers lexicographically by header name, in ascending order.\n   *    Each header may appear only once in the string.\n   * 4. Replace any linear whitespace in the header value with a single space.\n   * 5. Trim any whitespace around the colon in the header.\n   * 6. Finally, append a new-line character to each canonicalized header in the resulting list.\n   *    Construct the CanonicalizedHeaders string by concatenating all headers in this list into a single string.\n   *\n   * @param request -\n   */\n  private getCanonicalizedHeadersString(request: WebResource): string {\n    let headersArray = request.headers.headersArray().filter((value) => {\n      return value.name.toLowerCase().startsWith(HeaderConstants.PREFIX_FOR_STORAGE);\n    });\n\n    headersArray.sort((a, b): number => {\n      return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n    });\n\n    // Remove duplicate headers\n    headersArray = headersArray.filter((value, index, array) => {\n      if (index > 0 && value.name.toLowerCase() === array[index - 1].name.toLowerCase()) {\n        return false;\n      }\n      return true;\n    });\n\n    let canonicalizedHeadersStringToSign: string = \"\";\n    headersArray.forEach((header) => {\n      canonicalizedHeadersStringToSign += `${header.name\n        .toLowerCase()\n        .trimRight()}:${header.value.trimLeft()}\\n`;\n    });\n\n    return canonicalizedHeadersStringToSign;\n  }\n\n  /**\n   * Retrieves the webResource canonicalized resource string.\n   *\n   * @param request -\n   */\n  private getCanonicalizedResourceString(request: WebResource): string {\n    const path = getURLPath(request.url) || \"/\";\n\n    let canonicalizedResourceString: string = \"\";\n    canonicalizedResourceString += `/${this.factory.accountName}${path}`;\n\n    const queries = getURLQueries(request.url);\n    const lowercaseQueries: { [key: string]: string } = {};\n    if (queries) {\n      const queryKeys: string[] = [];\n      for (const key in queries) {\n        if (Object.prototype.hasOwnProperty.call(queries, key)) {\n          const lowercaseKey = key.toLowerCase();\n          lowercaseQueries[lowercaseKey] = queries[key];\n          queryKeys.push(lowercaseKey);\n        }\n      }\n\n      queryKeys.sort();\n      for (const key of queryKeys) {\n        canonicalizedResourceString += `\\n${key}:${decodeURIComponent(lowercaseQueries[key])}`;\n      }\n    }\n\n    return canonicalizedResourceString;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createHmac } from \"crypto\";\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { StorageSharedKeyCredentialPolicy } from \"../policies/StorageSharedKeyCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * StorageSharedKeyCredential for account key authorization of Azure Storage service.\n */\nexport class StorageSharedKeyCredential extends Credential {\n  /**\n   * Azure Storage account name; readonly.\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage account key; readonly.\n   */\n  private readonly accountKey: Buffer;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredential.\n   * @param accountName -\n   * @param accountKey -\n   */\n  constructor(accountName: string, accountKey: string) {\n    super();\n    this.accountName = accountName;\n    this.accountKey = Buffer.from(accountKey, \"base64\");\n  }\n\n  /**\n   * Creates a StorageSharedKeyCredentialPolicy object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): StorageSharedKeyCredentialPolicy {\n    return new StorageSharedKeyCredentialPolicy(nextPolicy, options, this);\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param stringToSign -\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    return createHmac(\"sha256\", this.accountKey).update(stringToSign, \"utf8\").digest(\"base64\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { URLBuilder } from \"../url\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n\n/**\n * Options for how redirect responses are handled.\n */\nexport interface RedirectOptions {\n  /**\n   * When true, redirect responses are followed.  Defaults to true.\n   */\n  handleRedirects: boolean;\n\n  /**\n   * The maximum number of times the redirect URL will be tried before\n   * failing.  Defaults to 20.\n   */\n  maxRetries?: number;\n}\n\nexport const DefaultRedirectOptions: RedirectOptions = {\n  handleRedirects: true,\n  maxRetries: 20,\n};\n\n/**\n * Creates a redirect policy, which sends a repeats the request to a new destination if a response arrives with a \"location\" header, and a status code between 300 and 307.\n * @param maximumRetries - Maximum number of redirects to follow.\n * @returns An instance of the {@link RedirectPolicy}\n */\nexport function redirectPolicy(maximumRetries = 20): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new RedirectPolicy(nextPolicy, options, maximumRetries);\n    },\n  };\n}\n\n/**\n * Resends the request to a new destination if a response arrives with a \"location\" header, and a status code between 300 and 307.\n */\nexport class RedirectPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, readonly maxRetries = 20) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request)\n      .then((response) => handleRedirect(this, response, 0));\n  }\n}\n\nfunction handleRedirect(\n  policy: RedirectPolicy,\n  response: HttpOperationResponse,\n  currentRetries: number\n): Promise<HttpOperationResponse> {\n  const { request, status } = response;\n  const locationHeader = response.headers.get(\"location\");\n  if (\n    locationHeader &&\n    (status === 300 ||\n      (status === 301 && allowedRedirect.includes(request.method)) ||\n      (status === 302 && allowedRedirect.includes(request.method)) ||\n      (status === 303 && request.method === \"POST\") ||\n      status === 307) &&\n    (!policy.maxRetries || currentRetries < policy.maxRetries)\n  ) {\n    const builder = URLBuilder.parse(request.url);\n    builder.setPath(locationHeader);\n    request.url = builder.toString();\n\n    // POST request with Status code 303 should be converted into a\n    // redirected GET request if the redirect url is present in the location header\n    if (status === 303) {\n      request.method = \"GET\";\n      delete request.body;\n    }\n\n    return policy._nextPolicy\n      .sendRequest(request)\n      .then((res) => handleRedirect(policy, res, currentRetries + 1));\n  }\n\n  return Promise.resolve(response);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"..\";\n\nexport const DEFAULT_CLIENT_RETRY_COUNT = 3;\n// intervals are in ms\nexport const DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\nexport const DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\nexport const DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\n\nexport function isNumber(n: unknown): n is number {\n  return typeof n === \"number\";\n}\nexport interface RetryData {\n  retryCount: number;\n  retryInterval: number;\n  error?: RetryError;\n}\n\nexport interface RetryError extends Error {\n  message: string;\n  code?: string;\n  innerError?: RetryError;\n}\n\n/**\n * @internal\n * Determines if the operation should be retried.\n *\n * @param retryLimit - Specifies the max number of retries.\n * @param predicate - Initial chekck on whether to retry based on given responses or errors\n * @param retryData -  The retry data.\n * @returns True if the operation qualifies for a retry; false otherwise.\n */\nexport function shouldRetry(\n  retryLimit: number,\n  predicate: (response?: HttpOperationResponse, error?: RetryError) => boolean,\n  retryData: RetryData,\n  response?: HttpOperationResponse,\n  error?: RetryError\n): boolean {\n  if (!predicate(response, error)) {\n    return false;\n  }\n\n  return retryData.retryCount < retryLimit;\n}\n\n/**\n * @internal\n * Updates the retry data for the next attempt.\n *\n * @param retryOptions - specifies retry interval, and its lower bound and upper bound.\n * @param retryData -  The retry data.\n * @param err - The operation\"s error, if any.\n */\nexport function updateRetryData(\n  retryOptions: { retryInterval: number; minRetryInterval: number; maxRetryInterval: number },\n  retryData: RetryData = { retryCount: 0, retryInterval: 0 },\n  err?: RetryError\n): RetryData {\n  if (err) {\n    if (retryData.error) {\n      err.innerError = retryData.error;\n    }\n\n    retryData.error = err;\n  }\n\n  // Adjust retry count\n  retryData.retryCount++;\n\n  // Adjust retry interval\n  let incrementDelta = Math.pow(2, retryData.retryCount - 1) - 1;\n  const boundedRandDelta =\n    retryOptions.retryInterval * 0.8 +\n    Math.floor(Math.random() * (retryOptions.retryInterval * 0.4));\n  incrementDelta *= boundedRandDelta;\n\n  retryData.retryInterval = Math.min(\n    retryOptions.minRetryInterval + incrementDelta,\n    retryOptions.maxRetryInterval\n  );\n\n  return retryData;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport {\n  DEFAULT_CLIENT_MAX_RETRY_INTERVAL,\n  DEFAULT_CLIENT_RETRY_COUNT,\n  DEFAULT_CLIENT_RETRY_INTERVAL,\n  RetryData,\n  RetryError,\n  isNumber,\n  shouldRetry,\n  updateRetryData,\n} from \"../util/exponentialBackoffStrategy\";\nimport { Constants } from \"../util/constants\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { RestError } from \"../restError\";\nimport { WebResourceLike } from \"../webResource\";\nimport { delay } from \"@azure/core-util\";\nimport { logger } from \"../log\";\n\n/**\n * Policy that retries the request as many times as configured for as long as the max retry time interval specified, each retry waiting longer to begin than the last time.\n * @param retryCount - Maximum number of retries.\n * @param retryInterval - Base time between retries.\n * @param maxRetryInterval - Maximum time to wait between retries.\n */\nexport function exponentialRetryPolicy(\n  retryCount?: number,\n  retryInterval?: number,\n  maxRetryInterval?: number\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new ExponentialRetryPolicy(\n        nextPolicy,\n        options,\n        retryCount,\n        retryInterval,\n        maxRetryInterval\n      );\n    },\n  };\n}\n\n/**\n * Describes the Retry Mode type. Currently supporting only Exponential.\n */\nexport enum RetryMode {\n  /**\n   * Currently supported retry mode.\n   * Each time a retry happens, it will take exponentially more time than the last time.\n   */\n  Exponential,\n}\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface RetryOptions {\n  /**\n   * The maximum number of retry attempts.  Defaults to 3.\n   */\n  maxRetries?: number;\n\n  /**\n   * The amount of delay in milliseconds between retry attempts. Defaults to 30000\n   * (30 seconds). The delay increases exponentially with each retry up to a maximum\n   * specified by maxRetryDelayInMs.\n   */\n  retryDelayInMs?: number;\n\n  /**\n   * The maximum delay in milliseconds allowed before retrying an operation. Defaults\n   * to 90000 (90 seconds).\n   */\n  maxRetryDelayInMs?: number;\n\n  /**\n   * Currently supporting only Exponential mode.\n   */\n  mode?: RetryMode;\n}\n\nexport const DefaultRetryOptions: RetryOptions = {\n  maxRetries: DEFAULT_CLIENT_RETRY_COUNT,\n  retryDelayInMs: DEFAULT_CLIENT_RETRY_INTERVAL,\n  maxRetryDelayInMs: DEFAULT_CLIENT_MAX_RETRY_INTERVAL,\n};\n\n/**\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n */\nexport class ExponentialRetryPolicy extends BaseRequestPolicy {\n  /**\n   * The client retry count.\n   */\n  retryCount: number;\n  /**\n   * The client retry interval in milliseconds.\n   */\n  retryInterval: number;\n  /**\n   * The maximum retry interval in milliseconds.\n   */\n  maxRetryInterval: number;\n\n  /**\n   * @param nextPolicy - The next RequestPolicy in the pipeline chain.\n   * @param options - The options for this RequestPolicy.\n   * @param retryCount - The client retry count.\n   * @param retryInterval - The client retry interval, in milliseconds.\n   * @param minRetryInterval - The minimum retry interval, in milliseconds.\n   * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryCount?: number,\n    retryInterval?: number,\n    maxRetryInterval?: number\n  ) {\n    super(nextPolicy, options);\n    this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n    this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n    this.maxRetryInterval = isNumber(maxRetryInterval)\n      ? maxRetryInterval\n      : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request.clone())\n      .then((response) => retry(this, request, response))\n      .catch((error) => retry(this, request, error.response, undefined, error));\n  }\n}\n\nasync function retry(\n  policy: ExponentialRetryPolicy,\n  request: WebResourceLike,\n  response?: HttpOperationResponse,\n  retryData?: RetryData,\n  requestError?: RetryError\n): Promise<HttpOperationResponse> {\n  function shouldPolicyRetry(responseParam?: HttpOperationResponse): boolean {\n    const statusCode = responseParam?.status;\n    if (statusCode === 503 && response?.headers.get(Constants.HeaderConstants.RETRY_AFTER)) {\n      return false;\n    }\n\n    if (\n      statusCode === undefined ||\n      (statusCode < 500 && statusCode !== 408) ||\n      statusCode === 501 ||\n      statusCode === 505\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  retryData = updateRetryData(\n    {\n      retryInterval: policy.retryInterval,\n      minRetryInterval: 0,\n      maxRetryInterval: policy.maxRetryInterval,\n    },\n    retryData,\n    requestError\n  );\n\n  const isAborted: boolean | undefined = request.abortSignal && request.abortSignal.aborted;\n  if (!isAborted && shouldRetry(policy.retryCount, shouldPolicyRetry, retryData, response)) {\n    logger.info(`Retrying request in ${retryData.retryInterval}`);\n    try {\n      await delay(retryData.retryInterval);\n      const res = await policy._nextPolicy.sendRequest(request.clone());\n      return retry(policy, request, res, retryData);\n    } catch (err: any) {\n      return retry(policy, request, response, retryData, err);\n    }\n  } else if (isAborted || requestError || !response) {\n    // If the operation failed in the end, return all errors instead of just the last one\n    const err =\n      retryData.error ||\n      new RestError(\n        \"Failed to send the request.\",\n        RestError.REQUEST_SEND_ERROR,\n        response && response.status,\n        response && response.request,\n        response\n      );\n    throw err;\n  } else {\n    return response;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Mapper } from \"./serializer\";\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\n\n/**\n * A path which describes how to access a particular property in a given object data source. May be a single property name, an array that denotes nested property names, or a set of multiple named properties with paths in the case of complex object values.\n */\nexport type ParameterPath = string | string[] | { [propertyName: string]: ParameterPath };\n\n/**\n * A common interface that all Operation parameter's extend.\n */\nexport interface OperationParameter {\n  /**\n   * The path to this parameter's value in OperationArguments or the object that contains paths for\n   * each property's value in OperationArguments.\n   */\n  parameterPath: ParameterPath;\n\n  /**\n   * The mapper that defines how to validate and serialize this parameter's value.\n   */\n  mapper: Mapper;\n}\n\n/**\n * A parameter for an operation that will be substituted into the operation's request URL.\n */\nexport interface OperationURLParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the URL parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n}\n\n/**\n * A parameter for an operation that will be added as a query parameter to the operation's HTTP\n * request.\n */\nexport interface OperationQueryParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the query parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n\n  /**\n   * If this query parameter's value is a collection, what type of format should the value be\n   * converted to.\n   */\n  collectionFormat?: QueryCollectionFormat;\n}\n\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nexport function getPathStringFromParameter(parameter: OperationParameter): string {\n  return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\n\nexport function getPathStringFromParameterPath(\n  parameterPath: ParameterPath,\n  mapper: Mapper\n): string {\n  let result: string;\n  if (typeof parameterPath === \"string\") {\n    result = parameterPath;\n  } else if (Array.isArray(parameterPath)) {\n    result = parameterPath.join(\".\");\n  } else {\n    result = mapper.serializedName!;\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as os from \"os\";\nimport { Constants } from \"../util/constants\";\nimport { TelemetryInfo } from \"./userAgentPolicy\";\n\nexport function getDefaultUserAgentKey(): string {\n  return Constants.HeaderConstants.USER_AGENT;\n}\n\nexport function getPlatformSpecificData(): TelemetryInfo[] {\n  const runtimeInfo = {\n    key: \"Node\",\n    value: process.version,\n  };\n\n  const osInfo = {\n    key: \"OS\",\n    value: `(${os.arch()}-${os.type()}-${os.release()})`,\n  };\n\n  return [runtimeInfo, osInfo];\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { getDefaultUserAgentKey, getPlatformSpecificData } from \"./msRestUserAgentPolicy\";\nimport { Constants } from \"../util/constants\";\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Telemetry information. Key/value pairs to include inside the User-Agent string.\n */\nexport type TelemetryInfo = { key?: string; value?: string };\n\n/**\n * Options for adding user agent details to outgoing requests.\n */\nexport interface UserAgentOptions {\n  /**\n   * String prefix to add to the user agent for outgoing requests.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n}\n\nfunction getRuntimeInfo(): TelemetryInfo[] {\n  const msRestRuntime = {\n    key: \"core-http\",\n    value: Constants.coreHttpVersion,\n  };\n\n  return [msRestRuntime];\n}\n\nfunction getUserAgentString(\n  telemetryInfo: TelemetryInfo[],\n  keySeparator = \" \",\n  valueSeparator = \"/\"\n): string {\n  return telemetryInfo\n    .map((info) => {\n      const value = info.value ? `${valueSeparator}${info.value}` : \"\";\n      return `${info.key}${value}`;\n    })\n    .join(keySeparator);\n}\n\nexport const getDefaultUserAgentHeaderName = getDefaultUserAgentKey;\n\n/**\n * The default approach to generate user agents.\n * Uses static information from this package, plus system information available from the runtime.\n */\nexport function getDefaultUserAgentValue(): string {\n  const runtimeInfo = getRuntimeInfo();\n  const platformSpecificData = getPlatformSpecificData();\n  const userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n  return userAgent;\n}\n\n/**\n * Returns a policy that adds the user agent header to outgoing requests based on the given {@link TelemetryInfo}.\n * @param userAgentData - Telemetry information.\n * @returns A new {@link UserAgentPolicy}.\n */\nexport function userAgentPolicy(userAgentData?: TelemetryInfo): RequestPolicyFactory {\n  const key: string =\n    !userAgentData || userAgentData.key === undefined || userAgentData.key === null\n      ? getDefaultUserAgentKey()\n      : userAgentData.key;\n  const value: string =\n    !userAgentData || userAgentData.value === undefined || userAgentData.value === null\n      ? getDefaultUserAgentValue()\n      : userAgentData.value;\n\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new UserAgentPolicy(nextPolicy, options, key, value);\n    },\n  };\n}\n\n/**\n * A policy that adds the user agent header to outgoing requests based on the given {@link TelemetryInfo}.\n */\nexport class UserAgentPolicy extends BaseRequestPolicy {\n  constructor(\n    readonly _nextPolicy: RequestPolicy,\n    readonly _options: RequestPolicyOptions,\n    protected headerKey: string,\n    protected headerValue: string\n  ) {\n    super(_nextPolicy, _options);\n  }\n\n  sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    this.addUserAgentHeader(request);\n    return this._nextPolicy.sendRequest(request);\n  }\n\n  /**\n   * Adds the user agent header to the outgoing request.\n   */\n  addUserAgentHeader(request: WebResourceLike): void {\n    if (!request.headers) {\n      request.headers = new HttpHeaders();\n    }\n\n    if (!request.headers.get(this.headerKey) && this.headerValue) {\n      request.headers.set(this.headerKey, this.headerValue);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccessToken, GetTokenOptions, TokenCredential } from \"@azure/core-auth\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"../policies/requestPolicy\";\nimport { Constants } from \"../util/constants\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport { delay } from \"@azure/core-util\";\n\n// #region Access Token Cycler\n\n/**\n * A function that gets a promise of an access token and allows providing\n * options.\n *\n * @param options - the options to pass to the underlying token provider\n */\ntype AccessTokenGetter = (options: GetTokenOptions) => Promise<AccessToken>;\n\ninterface TokenCyclerOptions {\n  /**\n   * The window of time before token expiration during which the token will be\n   * considered unusable due to risk of the token expiring before sending the\n   * request.\n   *\n   * This will only become meaningful if the refresh fails for over\n   * (refreshWindow - forcedRefreshWindow) milliseconds.\n   */\n  forcedRefreshWindowInMs: number;\n  /**\n   * Interval in milliseconds to retry failed token refreshes.\n   */\n  retryIntervalInMs: number;\n  /**\n   * The window of time before token expiration during which\n   * we will attempt to refresh the token.\n   */\n  refreshWindowInMs: number;\n}\n\n// Default options for the cycler if none are provided\nexport const DEFAULT_CYCLER_OPTIONS: TokenCyclerOptions = {\n  forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n  retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n  refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - a function that produces a promise of an access\n * token that may fail by returning null\n * @param retryIntervalInMs - the time (in milliseconds) to wait between retry\n * attempts\n * @param timeoutInMs - the timestamp after which the refresh attempt will fail,\n * throwing an exception\n * @returns - a promise that, if it resolves, will resolve with an access token\n */\nasync function beginRefresh(\n  getAccessToken: () => Promise<AccessToken | null>,\n  retryIntervalInMs: number,\n  timeoutInMs: number\n): Promise<AccessToken> {\n  // This wrapper handles exceptions gracefully as long as we haven't exceeded\n  // the timeout.\n  async function tryGetAccessToken(): Promise<AccessToken | null> {\n    if (Date.now() < timeoutInMs) {\n      try {\n        return await getAccessToken();\n      } catch {\n        return null;\n      }\n    } else {\n      const finalToken = await getAccessToken();\n\n      // Timeout is up, so throw if it's still null\n      if (finalToken === null) {\n        throw new Error(\"Failed to refresh access token.\");\n      }\n\n      return finalToken;\n    }\n  }\n\n  let token: AccessToken | null = await tryGetAccessToken();\n\n  while (token === null) {\n    await delay(retryIntervalInMs);\n\n    token = await tryGetAccessToken();\n  }\n\n  return token;\n}\n\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param scopes - the scopes to request authorization for\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nfunction createTokenCycler(\n  credential: TokenCredential,\n  scopes: string | string[],\n  tokenCyclerOptions?: Partial<TokenCyclerOptions>\n): AccessTokenGetter {\n  let refreshWorker: Promise<AccessToken> | null = null;\n  let token: AccessToken | null = null;\n\n  const options = {\n    ...DEFAULT_CYCLER_OPTIONS,\n    ...tokenCyclerOptions,\n  };\n\n  /**\n   * This little holder defines several predicates that we use to construct\n   * the rules of refreshing the token.\n   */\n  const cycler = {\n    /**\n     * Produces true if a refresh job is currently in progress.\n     */\n    get isRefreshing(): boolean {\n      return refreshWorker !== null;\n    },\n    /**\n     * Produces true if the cycler SHOULD refresh (we are within the refresh\n     * window and not already refreshing)\n     */\n    get shouldRefresh(): boolean {\n      return (\n        !cycler.isRefreshing &&\n        (token?.expiresOnTimestamp ?? 0) - options.refreshWindowInMs < Date.now()\n      );\n    },\n    /**\n     * Produces true if the cycler MUST refresh (null or nearly-expired\n     * token).\n     */\n    get mustRefresh(): boolean {\n      return (\n        token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now()\n      );\n    },\n  };\n\n  /**\n   * Starts a refresh job or returns the existing job if one is already\n   * running.\n   */\n  function refresh(getTokenOptions: GetTokenOptions): Promise<AccessToken> {\n    if (!cycler.isRefreshing) {\n      // We bind `scopes` here to avoid passing it around a lot\n      const tryGetAccessToken = (): Promise<AccessToken | null> =>\n        credential.getToken(scopes, getTokenOptions);\n\n      // Take advantage of promise chaining to insert an assignment to `token`\n      // before the refresh can be considered done.\n      refreshWorker = beginRefresh(\n        tryGetAccessToken,\n        options.retryIntervalInMs,\n        // If we don't have a token, then we should timeout immediately\n        token?.expiresOnTimestamp ?? Date.now()\n      )\n        .then((_token) => {\n          refreshWorker = null;\n          token = _token;\n          return token;\n        })\n        .catch((reason) => {\n          // We also should reset the refresher if we enter a failed state.  All\n          // existing awaiters will throw, but subsequent requests will start a\n          // new retry chain.\n          refreshWorker = null;\n          token = null;\n          throw reason;\n        });\n    }\n\n    return refreshWorker as Promise<AccessToken>;\n  }\n\n  return async (tokenOptions: GetTokenOptions): Promise<AccessToken> => {\n    //\n    // Simple rules:\n    // - If we MUST refresh, then return the refresh task, blocking\n    //   the pipeline until a token is available.\n    // - If we SHOULD refresh, then run refresh but don't return it\n    //   (we can still use the cached token).\n    // - Return the token, since it's fine if we didn't return in\n    //   step 1.\n    //\n\n    if (cycler.mustRefresh) return refresh(tokenOptions);\n\n    if (cycler.shouldRefresh) {\n      refresh(tokenOptions);\n    }\n\n    return token as AccessToken;\n  };\n}\n\n// #endregion\n\n/**\n * Creates a new factory for a RequestPolicy that applies a bearer token to\n * the requests' `Authorization` headers.\n *\n * @param credential - The TokenCredential implementation that can supply the bearer token.\n * @param scopes - The scopes for which the bearer token applies.\n */\nexport function bearerTokenAuthenticationPolicy(\n  credential: TokenCredential,\n  scopes: string | string[]\n): RequestPolicyFactory {\n  // This simple function encapsulates the entire process of reliably retrieving the token\n  const getToken = createTokenCycler(credential, scopes /* , options */);\n\n  class BearerTokenAuthenticationPolicy extends BaseRequestPolicy {\n    public constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n      super(nextPolicy, options);\n    }\n\n    public async sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse> {\n      if (!webResource.url.toLowerCase().startsWith(\"https://\")) {\n        throw new Error(\n          \"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\"\n        );\n      }\n\n      const { token } = await getToken({\n        abortSignal: webResource.abortSignal,\n        tracingOptions: {\n          tracingContext: webResource.tracingContext,\n        },\n      });\n      webResource.headers.set(Constants.HeaderConstants.AUTHORIZATION, `Bearer ${token}`);\n      return this._nextPolicy.sendRequest(webResource);\n    }\n  }\n\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new BearerTokenAuthenticationPolicy(nextPolicy, options);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { DefaultHttpClient } from \"./defaultHttpClient\";\nimport { HttpClient } from \"./httpClient\";\n\nlet cachedHttpClient: HttpClient | undefined;\n\nexport function getCachedDefaultHttpClient(): HttpClient {\n  if (!cachedHttpClient) {\n    cachedHttpClient = new DefaultHttpClient();\n  }\n\n  return cachedHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as utils from \"../util/utils\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport { delay } from \"@azure/core-util\";\n\nexport function rpRegistrationPolicy(retryTimeout = 30): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new RPRegistrationPolicy(nextPolicy, options, retryTimeout);\n    },\n  };\n}\n\nexport class RPRegistrationPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    readonly _retryTimeout = 30\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request.clone())\n      .then((response) => registerIfNeeded(this, request, response));\n  }\n}\n\nfunction registerIfNeeded(\n  policy: RPRegistrationPolicy,\n  request: WebResourceLike,\n  response: HttpOperationResponse\n): Promise<HttpOperationResponse> {\n  if (response.status === 409) {\n    const rpName = checkRPNotRegisteredError(response.bodyAsText as string);\n    if (rpName) {\n      const urlPrefix = extractSubscriptionUrl(request.url);\n      return (\n        registerRP(policy, urlPrefix, rpName, request)\n          // Autoregistration of ${provider} failed for some reason. We will not return this error\n          // instead will return the initial response with 409 status code back to the user.\n          // do nothing here as we are returning the original response at the end of this method.\n          .catch(() => false)\n          .then((registrationStatus) => {\n            if (registrationStatus) {\n              // Retry the original request. We have to change the x-ms-client-request-id\n              // otherwise Azure endpoint will return the initial 409 (cached) response.\n              request.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n              return policy._nextPolicy.sendRequest(request.clone());\n            }\n            return response;\n          })\n      );\n    }\n  }\n\n  return Promise.resolve(response);\n}\n\n/**\n * Reuses the headers of the original request and url (if specified).\n * @param originalRequest - The original request\n * @param reuseUrlToo - Should the url from the original request be reused as well. Default false.\n * @returns A new request object with desired headers.\n */\nfunction getRequestEssentials(\n  originalRequest: WebResourceLike,\n  reuseUrlToo = false\n): WebResourceLike {\n  const reqOptions: WebResourceLike = originalRequest.clone();\n  if (reuseUrlToo) {\n    reqOptions.url = originalRequest.url;\n  }\n\n  // We have to change the x-ms-client-request-id otherwise Azure endpoint\n  // will return the initial 409 (cached) response.\n  reqOptions.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n\n  // Set content-type to application/json\n  reqOptions.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n\n  return reqOptions;\n}\n\n/**\n * Validates the error code and message associated with 409 response status code. If it matches to that of\n * RP not registered then it returns the name of the RP else returns undefined.\n * @param body - The response body received after making the original request.\n * @returns The name of the RP if condition is satisfied else undefined.\n */\nfunction checkRPNotRegisteredError(body: string): string {\n  let result, responseBody;\n  if (body) {\n    try {\n      responseBody = JSON.parse(body);\n    } catch (err: any) {\n      // do nothing;\n    }\n    if (\n      responseBody &&\n      responseBody.error &&\n      responseBody.error.message &&\n      responseBody.error.code &&\n      responseBody.error.code === \"MissingSubscriptionRegistration\"\n    ) {\n      const matchRes = responseBody.error.message.match(/.*'(.*)'/i);\n      if (matchRes) {\n        result = matchRes.pop();\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Extracts the first part of the URL, just after subscription:\n * https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param url - The original request url\n * @returns The url prefix as explained above.\n */\nfunction extractSubscriptionUrl(url: string): string {\n  let result;\n  const matchRes = url.match(/.*\\/subscriptions\\/[a-f0-9-]+\\//gi);\n  if (matchRes && matchRes[0]) {\n    result = matchRes[0];\n  } else {\n    throw new Error(`Unable to extract subscriptionId from the given url - ${url}.`);\n  }\n  return result;\n}\n\n/**\n * Registers the given provider.\n * @param policy - The RPRegistrationPolicy this function is being called against.\n * @param urlPrefix - https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param provider - The provider name to be registered.\n * @param originalRequest - The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n */\nasync function registerRP(\n  policy: RPRegistrationPolicy,\n  urlPrefix: string,\n  provider: string,\n  originalRequest: WebResourceLike\n): Promise<boolean> {\n  const postUrl = `${urlPrefix}providers/${provider}/register?api-version=2016-02-01`;\n  const getUrl = `${urlPrefix}providers/${provider}?api-version=2016-02-01`;\n  const reqOptions = getRequestEssentials(originalRequest);\n  reqOptions.method = \"POST\";\n  reqOptions.url = postUrl;\n\n  const response = await policy._nextPolicy.sendRequest(reqOptions);\n  if (response.status !== 200) {\n    throw new Error(`Autoregistration of ${provider} failed. Please try registering manually.`);\n  }\n  return getRegistrationStatus(policy, getUrl, originalRequest);\n}\n\n/**\n * Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.\n * Polling will happen till the registrationState property of the response body is \"Registered\".\n * @param policy - The RPRegistrationPolicy this function is being called against.\n * @param url - The request url for polling\n * @param originalRequest - The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @returns True if RP Registration is successful.\n */\nasync function getRegistrationStatus(\n  policy: RPRegistrationPolicy,\n  url: string,\n  originalRequest: WebResourceLike\n): Promise<boolean> {\n  const reqOptions: any = getRequestEssentials(originalRequest);\n  reqOptions.url = url;\n  reqOptions.method = \"GET\";\n\n  const res = await policy._nextPolicy.sendRequest(reqOptions);\n  const obj = res.parsedBody;\n  if (res.parsedBody && obj.registrationState && obj.registrationState === \"Registered\") {\n    return true;\n  } else {\n    await delay(policy._retryTimeout * 1000);\n    return getRegistrationStatus(policy, url, originalRequest);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { ServiceClientCredentials } from \"../credentials/serviceClientCredentials\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Creates a policy that signs outgoing requests by calling to the provided `authenticationProvider`'s `signRequest` method.\n * @param authenticationProvider - The authentication provider.\n * @returns An instance of the {@link SigningPolicy}.\n */\nexport function signingPolicy(\n  authenticationProvider: ServiceClientCredentials\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new SigningPolicy(nextPolicy, options, authenticationProvider);\n    },\n  };\n}\n\n/**\n * A policy that signs outgoing requests by calling to the provided `authenticationProvider`'s `signRequest` method.\n */\nexport class SigningPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    public authenticationProvider: ServiceClientCredentials\n  ) {\n    super(nextPolicy, options);\n  }\n\n  signRequest(request: WebResourceLike): Promise<WebResourceLike> {\n    return this.authenticationProvider.signRequest(request);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this.signRequest(request).then((nextRequest) =>\n      this._nextPolicy.sendRequest(nextRequest)\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport {\n  DEFAULT_CLIENT_MAX_RETRY_INTERVAL,\n  DEFAULT_CLIENT_MIN_RETRY_INTERVAL,\n  DEFAULT_CLIENT_RETRY_COUNT,\n  DEFAULT_CLIENT_RETRY_INTERVAL,\n  RetryData,\n  RetryError,\n  isNumber,\n  shouldRetry,\n  updateRetryData,\n} from \"../util/exponentialBackoffStrategy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport { delay } from \"@azure/core-util\";\n\n/**\n * A policy that retries when there's a system error, identified by the codes \"ETIMEDOUT\", \"ESOCKETTIMEDOUT\", \"ECONNREFUSED\", \"ECONNRESET\" or \"ENOENT\".\n * @param retryCount - Maximum number of retries.\n * @param retryInterval - The client retry interval, in milliseconds.\n * @param minRetryInterval - The minimum retry interval, in milliseconds.\n * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n * @returns An instance of the {@link SystemErrorRetryPolicy}\n */\nexport function systemErrorRetryPolicy(\n  retryCount?: number,\n  retryInterval?: number,\n  minRetryInterval?: number,\n  maxRetryInterval?: number\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new SystemErrorRetryPolicy(\n        nextPolicy,\n        options,\n        retryCount,\n        retryInterval,\n        minRetryInterval,\n        maxRetryInterval\n      );\n    },\n  };\n}\n\n/**\n * A policy that retries when there's a system error, identified by the codes \"ETIMEDOUT\", \"ESOCKETTIMEDOUT\", \"ECONNREFUSED\", \"ECONNRESET\" or \"ENOENT\".\n * @param retryCount - The client retry count.\n * @param retryInterval - The client retry interval, in milliseconds.\n * @param minRetryInterval - The minimum retry interval, in milliseconds.\n * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n */\nexport class SystemErrorRetryPolicy extends BaseRequestPolicy {\n  retryCount: number;\n  retryInterval: number;\n  minRetryInterval: number;\n  maxRetryInterval: number;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryCount?: number,\n    retryInterval?: number,\n    minRetryInterval?: number,\n    maxRetryInterval?: number\n  ) {\n    super(nextPolicy, options);\n    this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n    this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n    this.minRetryInterval = isNumber(minRetryInterval)\n      ? minRetryInterval\n      : DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n    this.maxRetryInterval = isNumber(maxRetryInterval)\n      ? maxRetryInterval\n      : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request.clone())\n      .catch((error) => retry(this, request, error.response, error));\n  }\n}\n\nasync function retry(\n  policy: SystemErrorRetryPolicy,\n  request: WebResourceLike,\n  operationResponse: HttpOperationResponse,\n  err?: RetryError,\n  retryData?: RetryData\n): Promise<HttpOperationResponse> {\n  retryData = updateRetryData(policy, retryData, err);\n\n  function shouldPolicyRetry(_response?: HttpOperationResponse, error?: RetryError): boolean {\n    if (\n      error &&\n      error.code &&\n      (error.code === \"ETIMEDOUT\" ||\n        error.code === \"ESOCKETTIMEDOUT\" ||\n        error.code === \"ECONNREFUSED\" ||\n        error.code === \"ECONNRESET\" ||\n        error.code === \"ENOENT\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  if (shouldRetry(policy.retryCount, shouldPolicyRetry, retryData, operationResponse, err)) {\n    // If previous operation ended with an error and the policy allows a retry, do that\n    try {\n      await delay(retryData.retryInterval);\n      return policy._nextPolicy.sendRequest(request.clone());\n    } catch (nestedErr: any) {\n      return retry(policy, request, operationResponse, nestedErr, retryData);\n    }\n  } else {\n    if (err) {\n      // If the operation failed in the end, return all errors instead of just the last one\n      return Promise.reject(retryData.error);\n    }\n    return operationResponse;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Maximum number of retries for the throttling retry policy\n */\nexport const DEFAULT_CLIENT_MAX_RETRY_COUNT = 3;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { AbortError } from \"@azure/abort-controller\";\nimport { Constants } from \"../util/constants\";\nimport { DEFAULT_CLIENT_MAX_RETRY_COUNT } from \"../util/throttlingRetryStrategy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport { delay } from \"@azure/core-util\";\n\ntype ResponseHandler = (\n  httpRequest: WebResourceLike,\n  response: HttpOperationResponse\n) => Promise<HttpOperationResponse>;\nconst StatusCodes = Constants.HttpConstants.StatusCodes;\n\n/**\n * Creates a policy that re-sends the request if the response indicates the request failed because of throttling reasons.\n * For example, if the response contains a `Retry-After` header, it will retry sending the request based on the value of that header.\n *\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n * @returns\n */\nexport function throttlingRetryPolicy(): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new ThrottlingRetryPolicy(nextPolicy, options);\n    },\n  };\n}\n\nconst StandardAbortMessage = \"The operation was aborted.\";\n\n/**\n * Creates a policy that re-sends the request if the response indicates the request failed because of throttling reasons.\n * For example, if the response contains a `Retry-After` header, it will retry sending the request based on the value of that header.\n *\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n */\nexport class ThrottlingRetryPolicy extends BaseRequestPolicy {\n  private _handleResponse: ResponseHandler;\n  private numberOfRetries = 0;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    _handleResponse?: ResponseHandler\n  ) {\n    super(nextPolicy, options);\n    this._handleResponse = _handleResponse || this._defaultResponseHandler;\n  }\n\n  public async sendRequest(httpRequest: WebResourceLike): Promise<HttpOperationResponse> {\n    const response = await this._nextPolicy.sendRequest(httpRequest.clone());\n    if (\n      response.status !== StatusCodes.TooManyRequests &&\n      response.status !== StatusCodes.ServiceUnavailable\n    ) {\n      return response;\n    } else {\n      return this._handleResponse(httpRequest, response);\n    }\n  }\n\n  private async _defaultResponseHandler(\n    httpRequest: WebResourceLike,\n    httpResponse: HttpOperationResponse\n  ): Promise<HttpOperationResponse> {\n    const retryAfterHeader: string | undefined = httpResponse.headers.get(\n      Constants.HeaderConstants.RETRY_AFTER\n    );\n\n    if (retryAfterHeader) {\n      const delayInMs: number | undefined =\n        ThrottlingRetryPolicy.parseRetryAfterHeader(retryAfterHeader);\n      if (delayInMs) {\n        this.numberOfRetries += 1;\n\n        await delay(delayInMs, {\n          abortSignal: httpRequest.abortSignal,\n          abortErrorMsg: StandardAbortMessage,\n        });\n\n        if (httpRequest.abortSignal?.aborted) {\n          throw new AbortError(StandardAbortMessage);\n        }\n\n        if (this.numberOfRetries < DEFAULT_CLIENT_MAX_RETRY_COUNT) {\n          return this.sendRequest(httpRequest);\n        } else {\n          return this._nextPolicy.sendRequest(httpRequest);\n        }\n      }\n    }\n\n    return httpResponse;\n  }\n\n  public static parseRetryAfterHeader(headerValue: string): number | undefined {\n    const retryAfterInSeconds = Number(headerValue);\n    if (Number.isNaN(retryAfterInSeconds)) {\n      return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);\n    } else {\n      return retryAfterInSeconds * 1000;\n    }\n  }\n\n  public static parseDateRetryAfterHeader(headerValue: string): number | undefined {\n    try {\n      const now: number = Date.now();\n      const date: number = Date.parse(headerValue);\n      const diff = date - now;\n\n      return Number.isNaN(diff) ? undefined : diff;\n    } catch (error: any) {\n      return undefined;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as utils from \"./util/utils\";\nimport { CompositeMapper, DictionaryMapper, Mapper, MapperType, Serializer } from \"./serializer\";\nimport {\n  DefaultDeserializationOptions,\n  DeserializationContentTypes,\n  deserializationPolicy,\n} from \"./policies/deserializationPolicy\";\nimport { DefaultKeepAliveOptions, keepAlivePolicy } from \"./policies/keepAlivePolicy\";\nimport { DefaultRedirectOptions, redirectPolicy } from \"./policies/redirectPolicy\";\nimport { DefaultRetryOptions, exponentialRetryPolicy } from \"./policies/exponentialRetryPolicy\";\nimport { HttpOperationResponse, RestResponse } from \"./httpOperationResponse\";\nimport { LogPolicyOptions, logPolicy } from \"./policies/logPolicy\";\nimport {\n  OperationParameter,\n  ParameterPath,\n  getPathStringFromParameter,\n  getPathStringFromParameterPath,\n} from \"./operationParameter\";\nimport { OperationSpec, getStreamResponseStatusCodes } from \"./operationSpec\";\nimport {\n  RequestOptionsBase,\n  RequestPrepareOptions,\n  WebResource,\n  WebResourceLike,\n  isWebResourceLike,\n} from \"./webResource\";\nimport {\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./policies/requestPolicy\";\nimport { SerializerOptions, XML_ATTRKEY, XML_CHARKEY } from \"./util/serializer.common\";\nimport { ServiceCallback, isNode } from \"./util/utils\";\nimport { TokenCredential, isTokenCredential } from \"@azure/core-auth\";\nimport {\n  getDefaultUserAgentHeaderName,\n  getDefaultUserAgentValue,\n  userAgentPolicy,\n} from \"./policies/userAgentPolicy\";\nimport { HttpClient } from \"./httpClient\";\nimport { HttpPipelineLogger } from \"./httpPipelineLogger\";\nimport { InternalPipelineOptions } from \"./pipelineOptions\";\nimport { OperationArguments } from \"./operationArguments\";\nimport { OperationResponse } from \"./operationResponse\";\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nimport { ServiceClientCredentials } from \"./credentials/serviceClientCredentials\";\nimport { URLBuilder } from \"./url\";\nimport { bearerTokenAuthenticationPolicy } from \"./policies/bearerTokenAuthenticationPolicy\";\nimport { disableResponseDecompressionPolicy } from \"./policies/disableResponseDecompressionPolicy\";\nimport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nimport { getCachedDefaultHttpClient } from \"./httpClientCache\";\nimport { logger } from \"./log\";\nimport { ndJsonPolicy } from \"./policies/ndJsonPolicy\";\nimport { proxyPolicy } from \"./policies/proxyPolicy\";\nimport { rpRegistrationPolicy } from \"./policies/rpRegistrationPolicy\";\nimport { signingPolicy } from \"./policies/signingPolicy\";\nimport { stringifyXML } from \"./util/xml\";\nimport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nimport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nimport { tracingPolicy } from \"./policies/tracingPolicy\";\n\n/**\n * Options to configure a proxy for outgoing requests (Node.js only).\n */\nexport interface ProxySettings {\n  /**\n   * The proxy's host address.\n   */\n  host: string;\n\n  /**\n   * The proxy host's port.\n   */\n  port: number;\n\n  /**\n   * The user name to authenticate with the proxy, if required.\n   */\n  username?: string;\n\n  /**\n   * The password to authenticate with the proxy, if required.\n   */\n  password?: string;\n}\n\n/**\n * An alias of {@link ProxySettings} for future use.\n */\nexport type ProxyOptions = ProxySettings;\n\n/**\n * Options to be provided while creating the client.\n */\nexport interface ServiceClientOptions {\n  /**\n   * An array of factories which get called to create the RequestPolicy pipeline used to send a HTTP\n   * request on the wire, or a function that takes in the defaultRequestPolicyFactories and returns\n   * the requestPolicyFactories that will be used.\n   */\n  requestPolicyFactories?:\n    | RequestPolicyFactory[]\n    | ((defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | RequestPolicyFactory[]);\n  /**\n   * The HttpClient that will be used to send HTTP requests.\n   */\n  httpClient?: HttpClient;\n  /**\n   * The HttpPipelineLogger that can be used to debug RequestPolicies within the HTTP pipeline.\n   */\n  httpPipelineLogger?: HttpPipelineLogger;\n  /**\n   * If set to true, turn off the default retry policy.\n   */\n  noRetryPolicy?: boolean;\n  /**\n   * Gets or sets the retry timeout in seconds for AutomaticRPRegistration. Default value is 30.\n   */\n  rpRegistrationRetryTimeout?: number;\n  /**\n   * Whether or not to generate a client request ID header for each HTTP request.\n   */\n  generateClientRequestIdHeader?: boolean;\n  /**\n   * Whether to include credentials in CORS requests in the browser.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials for more information.\n   */\n  withCredentials?: boolean;\n  /**\n   * If specified, a GenerateRequestIdPolicy will be added to the HTTP pipeline that will add a\n   * header to all outgoing requests with this header name and a random UUID as the request ID.\n   */\n  clientRequestIdHeaderName?: string;\n  /**\n   * The content-types that will be associated with JSON or XML serialization.\n   */\n  deserializationContentTypes?: DeserializationContentTypes;\n  /**\n   * The header name to use for the telemetry header while sending the request. If this is not\n   * specified, then \"User-Agent\" will be used when running on Node.js and \"x-ms-useragent\" will\n   * be used when running in a browser.\n   */\n  userAgentHeaderName?: string | ((defaultUserAgentHeaderName: string) => string);\n  /**\n   * The string to be set to the telemetry header while sending the request, or a function that\n   * takes in the default user-agent string and returns the user-agent string that will be used.\n   */\n  userAgent?: string | ((defaultUserAgent: string) => string);\n  /**\n   * Proxy settings which will be used for every HTTP request (Node.js only).\n   */\n  proxySettings?: ProxySettings;\n  /**\n   * If specified, will be used to build the BearerTokenAuthenticationPolicy.\n   */\n  credentialScopes?: string | string[];\n}\n\n/**\n * ServiceClient sends service requests and receives responses.\n */\nexport class ServiceClient {\n  /**\n   * If specified, this is the base URI that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   */\n  protected baseUri?: string;\n\n  /**\n   * The default request content type for the service.\n   * Used if no requestContentType is present on an OperationSpec.\n   */\n  protected requestContentType?: string;\n\n  /**\n   * The HTTP client that will be used to send requests.\n   */\n  private readonly _httpClient: HttpClient;\n  private readonly _requestPolicyOptions: RequestPolicyOptions;\n\n  private readonly _requestPolicyFactories: RequestPolicyFactory[];\n  private readonly _withCredentials: boolean;\n\n  /**\n   * The ServiceClient constructor\n   * @param credentials - The credentials used for authentication with the service.\n   * @param options - The service client options that govern the behavior of the client.\n   */\n  constructor(\n    credentials?: TokenCredential | ServiceClientCredentials,\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: ServiceClientOptions\n  ) {\n    if (!options) {\n      options = {};\n    }\n\n    this._withCredentials = options.withCredentials || false;\n    this._httpClient = options.httpClient || getCachedDefaultHttpClient();\n    this._requestPolicyOptions = new RequestPolicyOptions(options.httpPipelineLogger);\n\n    let requestPolicyFactories: RequestPolicyFactory[];\n    if (Array.isArray(options.requestPolicyFactories)) {\n      logger.info(\"ServiceClient: using custom request policies\");\n      requestPolicyFactories = options.requestPolicyFactories;\n    } else {\n      let authPolicyFactory: RequestPolicyFactory | undefined = undefined;\n      if (isTokenCredential(credentials)) {\n        logger.info(\n          \"ServiceClient: creating bearer token authentication policy from provided credentials\"\n        );\n        // Create a wrapped RequestPolicyFactory here so that we can provide the\n        // correct scope to the BearerTokenAuthenticationPolicy at the first time\n        // one is requested.  This is needed because generated ServiceClient\n        // implementations do not set baseUri until after ServiceClient's constructor\n        // is finished, leaving baseUri empty at the time when it is needed to\n        // build the correct scope name.\n        const wrappedPolicyFactory: () => RequestPolicyFactory = () => {\n          let bearerTokenPolicyFactory: RequestPolicyFactory | undefined = undefined;\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const serviceClient = this;\n          const serviceClientOptions = options;\n          return {\n            create(nextPolicy: RequestPolicy, createOptions: RequestPolicyOptions): RequestPolicy {\n              const credentialScopes = getCredentialScopes(\n                serviceClientOptions,\n                serviceClient.baseUri\n              );\n\n              if (!credentialScopes) {\n                throw new Error(\n                  `When using credential, the ServiceClient must contain a baseUri or a credentialScopes in ServiceClientOptions. Unable to create a bearerTokenAuthenticationPolicy`\n                );\n              }\n\n              if (bearerTokenPolicyFactory === undefined || bearerTokenPolicyFactory === null) {\n                bearerTokenPolicyFactory = bearerTokenAuthenticationPolicy(\n                  credentials,\n                  credentialScopes\n                );\n              }\n\n              return bearerTokenPolicyFactory.create(nextPolicy, createOptions);\n            },\n          };\n        };\n\n        authPolicyFactory = wrappedPolicyFactory();\n      } else if (credentials && typeof credentials.signRequest === \"function\") {\n        logger.info(\"ServiceClient: creating signing policy from provided credentials\");\n        authPolicyFactory = signingPolicy(credentials);\n      } else if (credentials !== undefined && credentials !== null) {\n        throw new Error(\"The credentials argument must implement the TokenCredential interface\");\n      }\n\n      logger.info(\"ServiceClient: using default request policies\");\n      requestPolicyFactories = createDefaultRequestPolicyFactories(authPolicyFactory, options);\n      if (options.requestPolicyFactories) {\n        // options.requestPolicyFactories can also be a function that manipulates\n        // the default requestPolicyFactories array\n        const newRequestPolicyFactories: void | RequestPolicyFactory[] =\n          options.requestPolicyFactories(requestPolicyFactories);\n        if (newRequestPolicyFactories) {\n          requestPolicyFactories = newRequestPolicyFactories;\n        }\n      }\n    }\n    this._requestPolicyFactories = requestPolicyFactories;\n  }\n\n  /**\n   * Send the provided httpRequest.\n   */\n  sendRequest(options: RequestPrepareOptions | WebResourceLike): Promise<HttpOperationResponse> {\n    if (options === null || options === undefined || typeof options !== \"object\") {\n      throw new Error(\"options cannot be null or undefined and it must be of type object.\");\n    }\n\n    let httpRequest: WebResourceLike;\n    try {\n      if (isWebResourceLike(options)) {\n        options.validateRequestProperties();\n        httpRequest = options;\n      } else {\n        httpRequest = new WebResource();\n        httpRequest = httpRequest.prepare(options);\n      }\n    } catch (error: any) {\n      return Promise.reject(error);\n    }\n\n    let httpPipeline: RequestPolicy = this._httpClient;\n    if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {\n      for (let i = this._requestPolicyFactories.length - 1; i >= 0; --i) {\n        httpPipeline = this._requestPolicyFactories[i].create(\n          httpPipeline,\n          this._requestPolicyOptions\n        );\n      }\n    }\n    return httpPipeline.sendRequest(httpRequest);\n  }\n\n  /**\n   * Send an HTTP request that is populated using the provided OperationSpec.\n   * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n   * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n   * @param callback - The callback to call when the response is received.\n   */\n  async sendOperationRequest(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n    callback?: ServiceCallback<any>\n  ): Promise<RestResponse> {\n    if (typeof operationArguments.options === \"function\") {\n      callback = operationArguments.options;\n      operationArguments.options = undefined;\n    }\n\n    const serializerOptions = operationArguments.options?.serializerOptions;\n    const httpRequest: WebResourceLike = new WebResource();\n\n    let result: Promise<RestResponse>;\n    try {\n      const baseUri: string | undefined = operationSpec.baseUrl || this.baseUri;\n      if (!baseUri) {\n        throw new Error(\n          \"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\"\n        );\n      }\n\n      httpRequest.method = operationSpec.httpMethod;\n      httpRequest.operationSpec = operationSpec;\n\n      const requestUrl: URLBuilder = URLBuilder.parse(baseUri);\n      if (operationSpec.path) {\n        requestUrl.appendPath(operationSpec.path);\n      }\n      if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {\n        for (const urlParameter of operationSpec.urlParameters) {\n          let urlParameterValue: string = getOperationArgumentValueFromParameter(\n            this,\n            operationArguments,\n            urlParameter,\n            operationSpec.serializer\n          );\n          urlParameterValue = operationSpec.serializer.serialize(\n            urlParameter.mapper,\n            urlParameterValue,\n            getPathStringFromParameter(urlParameter),\n            serializerOptions\n          );\n          if (!urlParameter.skipEncoding) {\n            urlParameterValue = encodeURIComponent(urlParameterValue);\n          }\n          requestUrl.replaceAll(\n            `{${urlParameter.mapper.serializedName || getPathStringFromParameter(urlParameter)}}`,\n            urlParameterValue\n          );\n        }\n      }\n      if (operationSpec.queryParameters && operationSpec.queryParameters.length > 0) {\n        for (const queryParameter of operationSpec.queryParameters) {\n          let queryParameterValue: any = getOperationArgumentValueFromParameter(\n            this,\n            operationArguments,\n            queryParameter,\n            operationSpec.serializer\n          );\n          if (queryParameterValue !== undefined && queryParameterValue !== null) {\n            queryParameterValue = operationSpec.serializer.serialize(\n              queryParameter.mapper,\n              queryParameterValue,\n              getPathStringFromParameter(queryParameter),\n              serializerOptions\n            );\n            if (\n              queryParameter.collectionFormat !== undefined &&\n              queryParameter.collectionFormat !== null\n            ) {\n              if (queryParameter.collectionFormat === QueryCollectionFormat.Multi) {\n                if (queryParameterValue.length === 0) {\n                  // The collection is empty, no need to try serializing the current queryParam\n                  continue;\n                } else {\n                  for (const index in queryParameterValue) {\n                    const item = queryParameterValue[index];\n                    queryParameterValue[index] =\n                      item === undefined || item === null ? \"\" : item.toString();\n                  }\n                }\n              } else if (\n                queryParameter.collectionFormat === QueryCollectionFormat.Ssv ||\n                queryParameter.collectionFormat === QueryCollectionFormat.Tsv\n              ) {\n                queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n              }\n            }\n            if (!queryParameter.skipEncoding) {\n              if (Array.isArray(queryParameterValue)) {\n                for (const index in queryParameterValue) {\n                  if (\n                    queryParameterValue[index] !== undefined &&\n                    queryParameterValue[index] !== null\n                  ) {\n                    queryParameterValue[index] = encodeURIComponent(queryParameterValue[index]);\n                  }\n                }\n              } else {\n                queryParameterValue = encodeURIComponent(queryParameterValue);\n              }\n            }\n            if (\n              queryParameter.collectionFormat !== undefined &&\n              queryParameter.collectionFormat !== null &&\n              queryParameter.collectionFormat !== QueryCollectionFormat.Multi &&\n              queryParameter.collectionFormat !== QueryCollectionFormat.Ssv &&\n              queryParameter.collectionFormat !== QueryCollectionFormat.Tsv\n            ) {\n              queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n            }\n            requestUrl.setQueryParameter(\n              queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter),\n              queryParameterValue\n            );\n          }\n        }\n      }\n      httpRequest.url = requestUrl.toString();\n\n      const contentType = operationSpec.contentType || this.requestContentType;\n      if (contentType && operationSpec.requestBody) {\n        httpRequest.headers.set(\"Content-Type\", contentType);\n      }\n\n      if (operationSpec.headerParameters) {\n        for (const headerParameter of operationSpec.headerParameters) {\n          let headerValue: any = getOperationArgumentValueFromParameter(\n            this,\n            operationArguments,\n            headerParameter,\n            operationSpec.serializer\n          );\n          if (headerValue !== undefined && headerValue !== null) {\n            headerValue = operationSpec.serializer.serialize(\n              headerParameter.mapper,\n              headerValue,\n              getPathStringFromParameter(headerParameter),\n              serializerOptions\n            );\n            const headerCollectionPrefix = (headerParameter.mapper as DictionaryMapper)\n              .headerCollectionPrefix;\n            if (headerCollectionPrefix) {\n              for (const key of Object.keys(headerValue)) {\n                httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);\n              }\n            } else {\n              httpRequest.headers.set(\n                headerParameter.mapper.serializedName ||\n                  getPathStringFromParameter(headerParameter),\n                headerValue\n              );\n            }\n          }\n        }\n      }\n\n      const options: RequestOptionsBase | undefined = operationArguments.options;\n      if (options) {\n        if (options.customHeaders) {\n          for (const customHeaderName in options.customHeaders) {\n            httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);\n          }\n        }\n\n        if (options.abortSignal) {\n          httpRequest.abortSignal = options.abortSignal;\n        }\n\n        if (options.timeout) {\n          httpRequest.timeout = options.timeout;\n        }\n\n        if (options.onUploadProgress) {\n          httpRequest.onUploadProgress = options.onUploadProgress;\n        }\n\n        if (options.onDownloadProgress) {\n          httpRequest.onDownloadProgress = options.onDownloadProgress;\n        }\n\n        if (options.spanOptions) {\n          // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n          (httpRequest as any).spanOptions = options.spanOptions;\n        }\n\n        if (options.tracingContext) {\n          httpRequest.tracingContext = options.tracingContext;\n        }\n\n        if (options.shouldDeserialize !== undefined && options.shouldDeserialize !== null) {\n          httpRequest.shouldDeserialize = options.shouldDeserialize;\n        }\n      }\n\n      httpRequest.withCredentials = this._withCredentials;\n\n      serializeRequestBody(this, httpRequest, operationArguments, operationSpec);\n\n      if (httpRequest.streamResponseStatusCodes === undefined) {\n        httpRequest.streamResponseStatusCodes = getStreamResponseStatusCodes(operationSpec);\n      }\n\n      let rawResponse: HttpOperationResponse;\n      let sendRequestError;\n      try {\n        rawResponse = await this.sendRequest(httpRequest);\n      } catch (error: any) {\n        sendRequestError = error;\n      }\n      if (sendRequestError) {\n        if (sendRequestError.response) {\n          sendRequestError.details = flattenResponse(\n            sendRequestError.response,\n            operationSpec.responses[sendRequestError.statusCode] ||\n              operationSpec.responses[\"default\"]\n          );\n        }\n        result = Promise.reject(sendRequestError);\n      } else {\n        result = Promise.resolve(\n          flattenResponse(rawResponse!, operationSpec.responses[rawResponse!.status])\n        );\n      }\n    } catch (error: any) {\n      result = Promise.reject(error);\n    }\n\n    const cb = callback;\n    if (cb) {\n      result\n        .then((res) => cb(null, res._response.parsedBody, res._response.request, res._response))\n        .catch((err) => cb(err));\n    }\n\n    return result;\n  }\n}\n\nexport function serializeRequestBody(\n  serviceClient: ServiceClient,\n  httpRequest: WebResourceLike,\n  operationArguments: OperationArguments,\n  operationSpec: OperationSpec\n): void {\n  const serializerOptions = operationArguments.options?.serializerOptions ?? {};\n  const updatedOptions: Required<SerializerOptions> = {\n    rootName: serializerOptions.rootName ?? \"\",\n    includeRoot: serializerOptions.includeRoot ?? false,\n    xmlCharKey: serializerOptions.xmlCharKey ?? XML_CHARKEY,\n  };\n\n  const xmlCharKey = serializerOptions.xmlCharKey;\n  if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n    httpRequest.body = getOperationArgumentValueFromParameter(\n      serviceClient,\n      operationArguments,\n      operationSpec.requestBody,\n      operationSpec.serializer\n    );\n\n    const bodyMapper = operationSpec.requestBody.mapper;\n    const { required, xmlName, xmlElementName, serializedName, xmlNamespace, xmlNamespacePrefix } =\n      bodyMapper;\n    const typeName = bodyMapper.type.name;\n\n    try {\n      if ((httpRequest.body !== undefined && httpRequest.body !== null) || required) {\n        const requestBodyParameterPathString: string = getPathStringFromParameter(\n          operationSpec.requestBody\n        );\n        httpRequest.body = operationSpec.serializer.serialize(\n          bodyMapper,\n          httpRequest.body,\n          requestBodyParameterPathString,\n          updatedOptions\n        );\n\n        const isStream = typeName === MapperType.Stream;\n\n        if (operationSpec.isXML) {\n          const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n          const value = getXmlValueWithNamespace(\n            xmlNamespace,\n            xmlnsKey,\n            typeName,\n            httpRequest.body,\n            updatedOptions\n          );\n          if (typeName === MapperType.Sequence) {\n            httpRequest.body = stringifyXML(\n              utils.prepareXMLRootList(\n                value,\n                xmlElementName || xmlName || serializedName!,\n                xmlnsKey,\n                xmlNamespace\n              ),\n              {\n                rootName: xmlName || serializedName,\n                xmlCharKey,\n              }\n            );\n          } else if (!isStream) {\n            httpRequest.body = stringifyXML(value, {\n              rootName: xmlName || serializedName,\n              xmlCharKey,\n            });\n          }\n        } else if (\n          typeName === MapperType.String &&\n          (operationSpec.contentType?.match(\"text/plain\") || operationSpec.mediaType === \"text\")\n        ) {\n          // the String serializer has validated that request body is a string\n          // so just send the string.\n          return;\n        } else if (!isStream) {\n          httpRequest.body = JSON.stringify(httpRequest.body);\n        }\n      }\n    } catch (error: any) {\n      throw new Error(\n        `Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(\n          serializedName,\n          undefined,\n          \"  \"\n        )}.`\n      );\n    }\n  } else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n    httpRequest.formData = {};\n    for (const formDataParameter of operationSpec.formDataParameters) {\n      const formDataParameterValue: any = getOperationArgumentValueFromParameter(\n        serviceClient,\n        operationArguments,\n        formDataParameter,\n        operationSpec.serializer\n      );\n      if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n        const formDataParameterPropertyName: string =\n          formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n        httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(\n          formDataParameter.mapper,\n          formDataParameterValue,\n          getPathStringFromParameter(formDataParameter),\n          updatedOptions\n        );\n      }\n    }\n  }\n}\n\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(\n  xmlNamespace: string | undefined,\n  xmlnsKey: string,\n  typeName: string,\n  serializedValue: any,\n  options: Required<SerializerOptions>\n): any {\n  // Composite and Sequence schemas already got their root namespace set during serialization\n  // We just need to add xmlns to the other schema types\n  if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n    const result: any = {};\n    result[options.xmlCharKey] = serializedValue;\n    result[XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n    return result;\n  }\n\n  return serializedValue;\n}\n\nfunction getValueOrFunctionResult(\n  value: undefined | string | ((defaultValue: string) => string),\n  defaultValueCreator: () => string\n): string {\n  let result: string;\n  if (typeof value === \"string\") {\n    result = value;\n  } else {\n    result = defaultValueCreator();\n    if (typeof value === \"function\") {\n      result = value(result);\n    }\n  }\n  return result;\n}\n\nfunction createDefaultRequestPolicyFactories(\n  authPolicyFactory: RequestPolicyFactory | undefined,\n  options: ServiceClientOptions\n): RequestPolicyFactory[] {\n  const factories: RequestPolicyFactory[] = [];\n\n  if (options.generateClientRequestIdHeader) {\n    factories.push(generateClientRequestIdPolicy(options.clientRequestIdHeaderName));\n  }\n\n  if (authPolicyFactory) {\n    factories.push(authPolicyFactory);\n  }\n\n  const userAgentHeaderName: string = getValueOrFunctionResult(\n    options.userAgentHeaderName,\n    getDefaultUserAgentHeaderName\n  );\n  const userAgentHeaderValue: string = getValueOrFunctionResult(\n    options.userAgent,\n    getDefaultUserAgentValue\n  );\n  if (userAgentHeaderName && userAgentHeaderValue) {\n    factories.push(userAgentPolicy({ key: userAgentHeaderName, value: userAgentHeaderValue }));\n  }\n  factories.push(redirectPolicy());\n  factories.push(rpRegistrationPolicy(options.rpRegistrationRetryTimeout));\n\n  if (!options.noRetryPolicy) {\n    factories.push(exponentialRetryPolicy());\n    factories.push(systemErrorRetryPolicy());\n    factories.push(throttlingRetryPolicy());\n  }\n\n  factories.push(deserializationPolicy(options.deserializationContentTypes));\n\n  if (isNode) {\n    factories.push(proxyPolicy(options.proxySettings));\n  }\n\n  factories.push(logPolicy({ logger: logger.info }));\n\n  return factories;\n}\n\n/**\n * Creates an HTTP pipeline based on the given options.\n * @param pipelineOptions - Defines options that are used to configure policies in the HTTP pipeline for an SDK client.\n * @param authPolicyFactory - An optional authentication policy factory to use for signing requests.\n * @returns A set of options that can be passed to create a new {@link ServiceClient}.\n */\nexport function createPipelineFromOptions(\n  pipelineOptions: InternalPipelineOptions,\n  authPolicyFactory?: RequestPolicyFactory\n): ServiceClientOptions {\n  const requestPolicyFactories: RequestPolicyFactory[] = [];\n\n  if (pipelineOptions.sendStreamingJson) {\n    requestPolicyFactories.push(ndJsonPolicy());\n  }\n\n  let userAgentValue = undefined;\n  if (pipelineOptions.userAgentOptions && pipelineOptions.userAgentOptions.userAgentPrefix) {\n    const userAgentInfo: string[] = [];\n    userAgentInfo.push(pipelineOptions.userAgentOptions.userAgentPrefix);\n\n    // Add the default user agent value if it isn't already specified\n    // by the userAgentPrefix option.\n    const defaultUserAgentInfo = getDefaultUserAgentValue();\n    if (userAgentInfo.indexOf(defaultUserAgentInfo) === -1) {\n      userAgentInfo.push(defaultUserAgentInfo);\n    }\n\n    userAgentValue = userAgentInfo.join(\" \");\n  }\n\n  const keepAliveOptions = {\n    ...DefaultKeepAliveOptions,\n    ...pipelineOptions.keepAliveOptions,\n  };\n\n  const retryOptions = {\n    ...DefaultRetryOptions,\n    ...pipelineOptions.retryOptions,\n  };\n\n  const redirectOptions = {\n    ...DefaultRedirectOptions,\n    ...pipelineOptions.redirectOptions,\n  };\n\n  if (isNode) {\n    requestPolicyFactories.push(proxyPolicy(pipelineOptions.proxyOptions));\n  }\n\n  const deserializationOptions = {\n    ...DefaultDeserializationOptions,\n    ...pipelineOptions.deserializationOptions,\n  };\n\n  const loggingOptions: LogPolicyOptions = {\n    ...pipelineOptions.loggingOptions,\n  };\n\n  requestPolicyFactories.push(\n    tracingPolicy({ userAgent: userAgentValue }),\n    keepAlivePolicy(keepAliveOptions),\n    userAgentPolicy({ value: userAgentValue }),\n    generateClientRequestIdPolicy(),\n    deserializationPolicy(deserializationOptions.expectedContentTypes),\n    throttlingRetryPolicy(),\n    systemErrorRetryPolicy(),\n    exponentialRetryPolicy(\n      retryOptions.maxRetries,\n      retryOptions.retryDelayInMs,\n      retryOptions.maxRetryDelayInMs\n    )\n  );\n\n  if (redirectOptions.handleRedirects) {\n    requestPolicyFactories.push(redirectPolicy(redirectOptions.maxRetries));\n  }\n\n  if (authPolicyFactory) {\n    requestPolicyFactories.push(authPolicyFactory);\n  }\n\n  requestPolicyFactories.push(logPolicy(loggingOptions));\n\n  if (isNode && pipelineOptions.decompressResponse === false) {\n    requestPolicyFactories.push(disableResponseDecompressionPolicy());\n  }\n\n  return {\n    httpClient: pipelineOptions.httpClient,\n    requestPolicyFactories,\n  };\n}\n\nexport type PropertyParent = { [propertyName: string]: any };\n\n/**\n * Get the property parent for the property at the provided path when starting with the provided\n * parent object.\n */\nexport function getPropertyParent(parent: PropertyParent, propertyPath: string[]): PropertyParent {\n  if (parent && propertyPath) {\n    const propertyPathLength: number = propertyPath.length;\n    for (let i = 0; i < propertyPathLength - 1; ++i) {\n      const propertyName: string = propertyPath[i];\n      if (!parent[propertyName]) {\n        parent[propertyName] = {};\n      }\n      parent = parent[propertyName];\n    }\n  }\n  return parent;\n}\n\nfunction getOperationArgumentValueFromParameter(\n  serviceClient: ServiceClient,\n  operationArguments: OperationArguments,\n  parameter: OperationParameter,\n  serializer: Serializer\n): any {\n  return getOperationArgumentValueFromParameterPath(\n    serviceClient,\n    operationArguments,\n    parameter.parameterPath,\n    parameter.mapper,\n    serializer\n  );\n}\n\nexport function getOperationArgumentValueFromParameterPath(\n  serviceClient: ServiceClient,\n  operationArguments: OperationArguments,\n  parameterPath: ParameterPath,\n  parameterMapper: Mapper,\n  serializer: Serializer\n): any {\n  let value: any;\n  if (typeof parameterPath === \"string\") {\n    parameterPath = [parameterPath];\n  }\n  const serializerOptions = operationArguments.options?.serializerOptions;\n  if (Array.isArray(parameterPath)) {\n    if (parameterPath.length > 0) {\n      if (parameterMapper.isConstant) {\n        value = parameterMapper.defaultValue;\n      } else {\n        let propertySearchResult: PropertySearchResult = getPropertyFromParameterPath(\n          operationArguments,\n          parameterPath\n        );\n        if (!propertySearchResult.propertyFound) {\n          propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);\n        }\n\n        let useDefaultValue = false;\n        if (!propertySearchResult.propertyFound) {\n          useDefaultValue =\n            parameterMapper.required ||\n            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n        }\n        value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n      }\n\n      // Serialize just for validation purposes.\n      const parameterPathString: string = getPathStringFromParameterPath(\n        parameterPath,\n        parameterMapper\n      );\n      serializer.serialize(parameterMapper, value, parameterPathString, serializerOptions);\n    }\n  } else {\n    if (parameterMapper.required) {\n      value = {};\n    }\n\n    for (const propertyName in parameterPath) {\n      const propertyMapper: Mapper = (parameterMapper as CompositeMapper).type.modelProperties![\n        propertyName\n      ];\n      const propertyPath: ParameterPath = parameterPath[propertyName];\n      const propertyValue: any = getOperationArgumentValueFromParameterPath(\n        serviceClient,\n        operationArguments,\n        propertyPath,\n        propertyMapper,\n        serializer\n      );\n      // Serialize just for validation purposes.\n      const propertyPathString: string = getPathStringFromParameterPath(\n        propertyPath,\n        propertyMapper\n      );\n      serializer.serialize(propertyMapper, propertyValue, propertyPathString, serializerOptions);\n      if (propertyValue !== undefined && propertyValue !== null) {\n        if (!value) {\n          value = {};\n        }\n        value[propertyName] = propertyValue;\n      }\n    }\n  }\n  return value;\n}\n\ninterface PropertySearchResult {\n  propertyValue?: any;\n  propertyFound: boolean;\n}\n\nfunction getPropertyFromParameterPath(\n  parent: { [parameterName: string]: any },\n  parameterPath: string[]\n): PropertySearchResult {\n  const result: PropertySearchResult = { propertyFound: false };\n  let i = 0;\n  for (; i < parameterPath.length; ++i) {\n    const parameterPathPart: string = parameterPath[i];\n    // Make sure to check inherited properties too, so don't use hasOwnProperty().\n    if (parent !== undefined && parent !== null && parameterPathPart in parent) {\n      parent = parent[parameterPathPart];\n    } else {\n      break;\n    }\n  }\n  if (i === parameterPath.length) {\n    result.propertyValue = parent;\n    result.propertyFound = true;\n  }\n  return result;\n}\n\n/**\n * Parses an {@link HttpOperationResponse} into a normalized HTTP response object ({@link RestResponse}).\n * @param _response - Wrapper object for http response.\n * @param responseSpec - Mappers for how to parse the response properties.\n * @returns - A normalized response object.\n */\nexport function flattenResponse(\n  _response: HttpOperationResponse,\n  responseSpec: OperationResponse | undefined\n): RestResponse {\n  const parsedHeaders = _response.parsedHeaders;\n  const bodyMapper = responseSpec && responseSpec.bodyMapper;\n\n  const addOperationResponse = <T extends Record<string, unknown>>(\n    obj: T\n  ): T & {\n    _response: HttpOperationResponse;\n  } => {\n    return Object.defineProperty(obj, \"_response\", {\n      value: _response,\n    }) as T & {\n      _response: HttpOperationResponse;\n    };\n  };\n\n  if (bodyMapper) {\n    const typeName = bodyMapper.type.name;\n    if (typeName === \"Stream\") {\n      return addOperationResponse({\n        ...parsedHeaders,\n        blobBody: _response.blobBody,\n        readableStreamBody: _response.readableStreamBody,\n      });\n    }\n\n    const modelProperties =\n      (typeName === \"Composite\" && (bodyMapper as CompositeMapper).type.modelProperties) || {};\n    const isPageableResponse = Object.keys(modelProperties).some(\n      (k) => modelProperties[k].serializedName === \"\"\n    );\n    if (typeName === \"Sequence\" || isPageableResponse) {\n      const arrayResponse = [...(_response.parsedBody || [])] as RestResponse & any[];\n\n      for (const key of Object.keys(modelProperties)) {\n        if (modelProperties[key].serializedName) {\n          arrayResponse[key] = _response.parsedBody[key];\n        }\n      }\n\n      if (parsedHeaders) {\n        for (const key of Object.keys(parsedHeaders)) {\n          arrayResponse[key] = parsedHeaders[key];\n        }\n      }\n      addOperationResponse(arrayResponse);\n      return arrayResponse;\n    }\n\n    if (typeName === \"Composite\" || typeName === \"Dictionary\") {\n      return addOperationResponse({\n        ...parsedHeaders,\n        ..._response.parsedBody,\n      });\n    }\n  }\n\n  if (\n    bodyMapper ||\n    _response.request.method === \"HEAD\" ||\n    utils.isPrimitiveType(_response.parsedBody)\n  ) {\n    // primitive body types and HEAD booleans\n    return addOperationResponse({\n      ...parsedHeaders,\n      body: _response.parsedBody,\n    });\n  }\n\n  return addOperationResponse({\n    ...parsedHeaders,\n    ..._response.parsedBody,\n  });\n}\n\nfunction getCredentialScopes(\n  options?: ServiceClientOptions,\n  baseUri?: string\n): string | string[] | undefined {\n  if (options?.credentialScopes) {\n    const scopes = options.credentialScopes;\n    return Array.isArray(scopes)\n      ? scopes.map((scope) => new URL(scope).toString())\n      : new URL(scopes).toString();\n  }\n\n  if (baseUri) {\n    return `${baseUri}/.default`;\n  }\n  return undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { MapperType, Serializer } from \"./serializer\";\nimport {\n  OperationParameter,\n  OperationQueryParameter,\n  OperationURLParameter,\n} from \"./operationParameter\";\nimport { HttpMethods } from \"./webResource\";\nimport { OperationResponse } from \"./operationResponse\";\n\n/**\n * A specification that defines how to perform a particular service operation over HTTP, including how to properly serialize request information into and deserialize response information into an object payload returnable by the {@link ServiceClient}.\n */\nexport interface OperationSpec {\n  /**\n   * The serializer to use in this operation.\n   */\n  readonly serializer: Serializer;\n\n  /**\n   * The HTTP method that should be used by requests for this operation.\n   */\n  readonly httpMethod: HttpMethods;\n\n  /**\n   * The URL that was provided in the service's specification. This will still have all of the URL\n   * template variables in it. If this is not provided when the OperationSpec is created, then it\n   * will be populated by a \"baseUri\" property on the ServiceClient.\n   */\n  readonly baseUrl?: string;\n\n  /**\n   * The fixed path for this operation's URL. This will still have all of the URL template variables\n   * in it.\n   */\n  readonly path?: string;\n\n  /**\n   * The content type of the request body. This value will be used as the \"Content-Type\" header if\n   * it is provided.\n   */\n  readonly contentType?: string;\n\n  /**\n   * The media type of the request body.\n   * This value can be used to aide in serialization if it is provided.\n   */\n  readonly mediaType?:\n    | \"json\"\n    | \"xml\"\n    | \"form\"\n    | \"binary\"\n    | \"multipart\"\n    | \"text\"\n    | \"unknown\"\n    | string;\n  /**\n   * The parameter that will be used to construct the HTTP request's body.\n   */\n  readonly requestBody?: OperationParameter;\n\n  /**\n   * Whether or not this operation uses XML request and response bodies.\n   */\n  readonly isXML?: boolean;\n\n  /**\n   * The parameters to the operation method that will be substituted into the constructed URL.\n   */\n  readonly urlParameters?: ReadonlyArray<OperationURLParameter>;\n\n  /**\n   * The parameters to the operation method that will be added to the constructed URL's query.\n   */\n  readonly queryParameters?: ReadonlyArray<OperationQueryParameter>;\n\n  /**\n   * The parameters to the operation method that will be converted to headers on the operation's\n   * HTTP request.\n   */\n  readonly headerParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The parameters to the operation method that will be used to create a formdata body for the\n   * operation's HTTP request.\n   */\n  readonly formDataParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The different types of responses that this operation can return based on what status code is\n   * returned.\n   */\n  readonly responses: { [responseCode: string]: OperationResponse };\n}\n\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nexport function getStreamResponseStatusCodes(operationSpec: OperationSpec): Set<number> {\n  const result = new Set<number>();\n  for (const statusCode in operationSpec.responses) {\n    const operationResponse = operationSpec.responses[statusCode];\n    if (\n      operationResponse.bodyMapper &&\n      operationResponse.bodyMapper.type.name === MapperType.Stream\n    ) {\n      result.add(Number(statusCode));\n    }\n  }\n  return result;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { StorageClientOptionalParams } from \"./models\";\n\nconst packageName = \"azure-storage-blob\";\nconst packageVersion = \"12.12.0\";\n\nexport class StorageClientContext extends coreHttp.ServiceClient {\n  url: string;\n  version: string;\n\n  /**\n   * Initializes a new instance of the StorageClientContext class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url: string, options?: StorageClientOptionalParams) {\n    if (url === undefined) {\n      throw new Error(\"'url' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"{url}\";\n\n    // Parameter assignments\n    this.url = url;\n\n    // Assigning values to Constant parameters\n    this.version = options.version || \"2021-10-04\";\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { PipelineLike } from \"./Pipeline\";\nimport { escapeURLPath, getURLScheme, iEqual, getAccountNameFromUrl } from \"./utils/utils.common\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { TokenCredential, isTokenCredential, isNode } from \"@azure/core-http\";\nimport { OperationTracingOptions } from \"@azure/core-tracing\";\n\n/**\n * An interface for options common to every remote operation.\n */\nexport interface CommonOptions {\n  /**\n   * Options to configure spans created when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n}\n\n/**\n * A StorageClient represents a based URL class for {@link BlobServiceClient}, {@link ContainerClient}\n * and etc.\n */\nexport abstract class StorageClient {\n  /**\n   * Encoded URL string value.\n   */\n  public readonly url: string;\n  public readonly accountName: string;\n  /**\n   * Request policy pipeline.\n   *\n   * @internal\n   */\n  protected readonly pipeline: PipelineLike;\n  /**\n   * Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  public readonly credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n  /**\n   * StorageClient is a reference to protocol layer operations entry, which is\n   * generated by AutoRest generator.\n   */\n  protected readonly storageClientContext: StorageClientContext;\n  /**\n   */\n  protected readonly isHttps: boolean;\n\n  /**\n   * Creates an instance of StorageClient.\n   * @param url - url to resource\n   * @param pipeline - request policy pipeline.\n   */\n  protected constructor(url: string, pipeline: PipelineLike) {\n    // URL should be encoded and only once, protocol layer shouldn't encode URL again\n    this.url = escapeURLPath(url);\n    this.accountName = getAccountNameFromUrl(url);\n    this.pipeline = pipeline;\n    this.storageClientContext = new StorageClientContext(\n      this.url,\n      pipeline.toServiceClientOptions()\n    );\n\n    this.isHttps = iEqual(getURLScheme(this.url) || \"\", \"https\");\n\n    this.credential = new AnonymousCredential();\n    for (const factory of this.pipeline.factories) {\n      if (\n        (isNode && factory instanceof StorageSharedKeyCredential) ||\n        factory instanceof AnonymousCredential\n      ) {\n        this.credential = factory;\n      } else if (isTokenCredential((factory as any).credential)) {\n        // Only works if the factory has been attached a \"credential\" property.\n        // We do that in newPipeline() when using TokenCredential.\n        this.credential = (factory as any).credential;\n      }\n    }\n\n    // Override protocol layer's default content-type\n    const storageClientContext = this.storageClientContext as any;\n    storageClientContext.requestContentType = undefined;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions, RequestOptionsBase } from \"@azure/core-http\";\nimport { createSpanFunction } from \"@azure/core-tracing\";\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const createSpan = createSpanFunction({\n  packagePrefix: \"Azure.Storage.Blob\",\n  namespace: \"Microsoft.Storage\",\n});\n\n/**\n * @internal\n *\n * Adapt the tracing options from OperationOptions to what they need to be for\n * RequestOptionsBase (when we update to later OpenTelemetry versions this is now\n * two separate fields, not just one).\n */\nexport function convertTracingToRequestOptionsBase(\n  options?: OperationOptions\n): Pick<RequestOptionsBase, \"spanOptions\" | \"tracingContext\"> {\n  return {\n    // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n    spanOptions: (options?.tracingOptions as any)?.spanOptions,\n    tracingContext: options?.tracingOptions?.tracingContext,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a blob. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class BlobSASPermissions {\n  /**\n   * Creates a {@link BlobSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): BlobSASPermissions {\n    const blobSASPermissions = new BlobSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          blobSASPermissions.read = true;\n          break;\n        case \"a\":\n          blobSASPermissions.add = true;\n          break;\n        case \"c\":\n          blobSASPermissions.create = true;\n          break;\n        case \"w\":\n          blobSASPermissions.write = true;\n          break;\n        case \"d\":\n          blobSASPermissions.delete = true;\n          break;\n        case \"x\":\n          blobSASPermissions.deleteVersion = true;\n          break;\n        case \"t\":\n          blobSASPermissions.tag = true;\n          break;\n        case \"m\":\n          blobSASPermissions.move = true;\n          break;\n        case \"e\":\n          blobSASPermissions.execute = true;\n          break;\n        case \"i\":\n          blobSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          blobSASPermissions.permanentDelete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission: ${char}`);\n      }\n    }\n\n    return blobSASPermissions;\n  }\n\n  /**\n   * Creates a {@link BlobSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: BlobSASPermissionsLike): BlobSASPermissions {\n    const blobSASPermissions = new BlobSASPermissions();\n    if (permissionLike.read) {\n      blobSASPermissions.read = true;\n    }\n    if (permissionLike.add) {\n      blobSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      blobSASPermissions.create = true;\n    }\n    if (permissionLike.write) {\n      blobSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      blobSASPermissions.delete = true;\n    }\n    if (permissionLike.deleteVersion) {\n      blobSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.tag) {\n      blobSASPermissions.tag = true;\n    }\n    if (permissionLike.move) {\n      blobSASPermissions.move = true;\n    }\n    if (permissionLike.execute) {\n      blobSASPermissions.execute = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      blobSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      blobSASPermissions.permanentDelete = true;\n    }\n    return blobSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Specifies Move access granted.\n   */\n  public move: boolean = false;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  public execute: boolean = false;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * @returns A string which represents the BlobSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.move) {\n      permissions.push(\"m\");\n    }\n    if (this.execute) {\n      permissions.push(\"e\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like a Blob SAS permission.\n * Used in {@link BlobSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface BlobSASPermissionsLike {\n  /**\n   * Specifies Read access granted.\n   */\n  read?: boolean;\n\n  /**\n   * Specifies Add access granted.\n   */\n  add?: boolean;\n\n  /**\n   * Specifies Create access granted.\n   */\n  create?: boolean;\n\n  /**\n   * Specifies Write access granted.\n   */\n  write?: boolean;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Specifies Move access granted.\n   */\n  move?: boolean;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  execute?: boolean;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class ContainerSASPermissions {\n  /**\n   * Creates an {@link ContainerSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): ContainerSASPermissions {\n    const containerSASPermissions = new ContainerSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          containerSASPermissions.read = true;\n          break;\n        case \"a\":\n          containerSASPermissions.add = true;\n          break;\n        case \"c\":\n          containerSASPermissions.create = true;\n          break;\n        case \"w\":\n          containerSASPermissions.write = true;\n          break;\n        case \"d\":\n          containerSASPermissions.delete = true;\n          break;\n        case \"l\":\n          containerSASPermissions.list = true;\n          break;\n        case \"t\":\n          containerSASPermissions.tag = true;\n          break;\n        case \"x\":\n          containerSASPermissions.deleteVersion = true;\n          break;\n        case \"m\":\n          containerSASPermissions.move = true;\n          break;\n        case \"e\":\n          containerSASPermissions.execute = true;\n          break;\n        case \"i\":\n          containerSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          containerSASPermissions.permanentDelete = true;\n          break;\n        case \"f\":\n          containerSASPermissions.filterByTags = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission ${char}`);\n      }\n    }\n\n    return containerSASPermissions;\n  }\n\n  /**\n   * Creates a {@link ContainerSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: ContainerSASPermissionsLike): ContainerSASPermissions {\n    const containerSASPermissions = new ContainerSASPermissions();\n    if (permissionLike.read) {\n      containerSASPermissions.read = true;\n    }\n    if (permissionLike.add) {\n      containerSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      containerSASPermissions.create = true;\n    }\n    if (permissionLike.write) {\n      containerSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      containerSASPermissions.delete = true;\n    }\n    if (permissionLike.list) {\n      containerSASPermissions.list = true;\n    }\n    if (permissionLike.deleteVersion) {\n      containerSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.tag) {\n      containerSASPermissions.tag = true;\n    }\n    if (permissionLike.move) {\n      containerSASPermissions.move = true;\n    }\n    if (permissionLike.execute) {\n      containerSASPermissions.execute = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      containerSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      containerSASPermissions.permanentDelete = true;\n    }\n    if (permissionLike.filterByTags) {\n      containerSASPermissions.filterByTags = true;\n    }\n    return containerSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Specifies List access granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Specifies Move access granted.\n   */\n  public move: boolean = false;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  public execute: boolean = false;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Specifies that Filter Blobs by Tags is permitted.\n   */\n  public filterByTags: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * The order of the characters should be as specified here to ensure correctness.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.move) {\n      permissions.push(\"m\");\n    }\n    if (this.execute) {\n      permissions.push(\"e\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    if (this.filterByTags) {\n      permissions.push(\"f\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like a Container SAS permission.\n * Used in {@link ContainerSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface ContainerSASPermissionsLike {\n  /**\n   * Specifies Read access granted.\n   */\n  read?: boolean;\n\n  /**\n   * Specifies Add access granted.\n   */\n  add?: boolean;\n\n  /**\n   * Specifies Create access granted.\n   */\n  create?: boolean;\n\n  /**\n   * Specifies Write access granted.\n   */\n  write?: boolean;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Specifies Delete version access granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Specifies List access granted.\n   */\n  list?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Specifies Move access granted.\n   */\n  move?: boolean;\n\n  /**\n   * Specifies Execute access granted.\n   */\n  execute?: boolean;\n\n  /**\n   * Specifies SetImmutabilityPolicy access granted.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n\n  /**\n   * Specifies that Filter Blobs by Tags is permitted.\n   */\n  filterByTags?: boolean;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createHmac } from \"crypto\";\nimport { UserDelegationKey } from \"../BlobServiceClient\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * UserDelegationKeyCredential is only used for generation of user delegation SAS.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-user-delegation-sas\n */\nexport class UserDelegationKeyCredential {\n  /**\n   * Azure Storage account name; readonly.\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage user delegation key; readonly.\n   */\n  public readonly userDelegationKey: UserDelegationKey;\n\n  /**\n   * Key value in Buffer type.\n   */\n  private readonly key: Buffer;\n\n  /**\n   * Creates an instance of UserDelegationKeyCredential.\n   * @param accountName -\n   * @param userDelegationKey -\n   */\n  constructor(accountName: string, userDelegationKey: UserDelegationKey) {\n    this.accountName = accountName;\n    this.userDelegationKey = userDelegationKey;\n    this.key = Buffer.from(userDelegationKey.value, \"base64\");\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param stringToSign -\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    // console.log(`stringToSign: ${JSON.stringify(stringToSign)}`);\n\n    return createHmac(\"sha256\", this.key).update(stringToSign, \"utf8\").digest(\"base64\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Allowed IP range for a SAS.\n */\nexport interface SasIPRange {\n  /**\n   * Starting IP address in the IP range.\n   * If end IP doesn't provide, start IP will the only IP allowed.\n   */\n  start: string;\n  /**\n   * Optional. IP address that ends the IP range.\n   * If not provided, start IP will the only IP allowed.\n   */\n  end?: string;\n}\n\n/**\n * Generate SasIPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @param ipRange -\n */\nexport function ipRangeToString(ipRange: SasIPRange): string {\n  return ipRange.end ? `${ipRange.start}-${ipRange.end}` : ipRange.start;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\nimport { UserDelegationKey } from \"../BlobServiceClient\";\n\n/**\n * Protocols for generated SAS.\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  Https = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HttpsAndHttp = \"https,http\",\n}\n\n/**\n * Options to construct {@link SASQueryParameters}.\n */\nexport interface SASQueryParametersOptions {\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  permissions?: string;\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  services?: string;\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  resourceTypes?: string;\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  protocol?: SASProtocol;\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  startsOn?: Date;\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  expiresOn?: Date;\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://docs.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  resource?: string;\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  cacheControl?: string;\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  contentDisposition?: string;\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  contentEncoding?: string;\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  contentLanguage?: string;\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  contentType?: string;\n  /**\n   * User delegation key properties.\n   */\n  userDelegationKey?: UserDelegationKey;\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This cannot be used in conjuction with {@link signedUnauthorizedUserObjectId}.\n   * This is only used for User Delegation SAS.\n   */\n  preauthorizedAgentObjectId?: string;\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  correlationId?: string;\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@link String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  public readonly startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  public readonly expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  public readonly encryptionScope?: string;\n\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://docs.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   */\n  private readonly ipRangeInner?: SasIPRange;\n\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   * Property of user delegation key.\n   */\n  private readonly signedOid?: string;\n\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   * Property of user delegation key.\n   */\n  private readonly signedTenantId?: string;\n\n  /**\n   * The date-time the key is active.\n   * Property of user delegation key.\n   */\n  private readonly signedStartsOn?: Date;\n\n  /**\n   * The date-time the key expires.\n   * Property of user delegation key.\n   */\n  private readonly signedExpiresOn?: Date;\n\n  /**\n   * Abbreviation of the Azure Storage service that accepts the user delegation key.\n   * Property of user delegation key.\n   */\n  private readonly signedService?: string;\n\n  /**\n   * The service version that created the user delegation key.\n   * Property of user delegation key.\n   */\n  private readonly signedVersion?: string;\n\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This is only used for User Delegation SAS.\n   */\n  public readonly preauthorizedAgentObjectId?: string;\n\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  public readonly correlationId?: string;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   */\n  public get ipRange(): SasIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start,\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param permissions - Representing the storage permissions\n   * @param services - Representing the storage services being accessed (only for Account SAS)\n   * @param resourceTypes - Representing the storage resource types being accessed (only for Account SAS)\n   * @param protocol - Representing the allowed HTTP protocol(s)\n   * @param startsOn - Representing the start time for this SAS token\n   * @param expiresOn - Representing the expiry time for this SAS token\n   * @param ipRange - Representing the range of valid IP addresses for this SAS token\n   * @param identifier - Representing the signed identifier (only for Service SAS)\n   * @param resource - Representing the storage container or blob (only for Service SAS)\n   * @param cacheControl - Representing the cache-control header (only for Blob/File Service SAS)\n   * @param contentDisposition - Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param contentEncoding - Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param contentLanguage - Representing the content-language header (only for Blob/File Service SAS)\n   * @param contentType - Representing the content-type header (only for Blob/File Service SAS)\n   * @param userDelegationKey - Representing the user delegation key properties\n   * @param preauthorizedAgentObjectId - Representing the authorized AAD Object ID (only for User Delegation SAS)\n   * @param correlationId - Representing the correlation ID (only for User Delegation SAS)\n   * @param encryptionScope -\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey,\n    preauthorizedAgentObjectId?: string,\n    correlationId?: string,\n    encryptionScope?: string\n  );\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param options - Optional. Options to construct the SASQueryParameters.\n   */\n  constructor(version: string, signature: string, options?: SASQueryParametersOptions);\n\n  constructor(\n    version: string,\n    signature: string,\n    permissionsOrOptions?: string | SASQueryParametersOptions,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey,\n    preauthorizedAgentObjectId?: string,\n    correlationId?: string,\n    encryptionScope?: string\n  ) {\n    this.version = version;\n    this.signature = signature;\n\n    if (permissionsOrOptions !== undefined && typeof permissionsOrOptions !== \"string\") {\n      // SASQueryParametersOptions\n      this.permissions = permissionsOrOptions.permissions;\n      this.services = permissionsOrOptions.services;\n      this.resourceTypes = permissionsOrOptions.resourceTypes;\n      this.protocol = permissionsOrOptions.protocol;\n      this.startsOn = permissionsOrOptions.startsOn;\n      this.expiresOn = permissionsOrOptions.expiresOn;\n      this.ipRangeInner = permissionsOrOptions.ipRange;\n      this.identifier = permissionsOrOptions.identifier;\n      this.encryptionScope = permissionsOrOptions.encryptionScope;\n      this.resource = permissionsOrOptions.resource;\n      this.cacheControl = permissionsOrOptions.cacheControl;\n      this.contentDisposition = permissionsOrOptions.contentDisposition;\n      this.contentEncoding = permissionsOrOptions.contentEncoding;\n      this.contentLanguage = permissionsOrOptions.contentLanguage;\n      this.contentType = permissionsOrOptions.contentType;\n\n      if (permissionsOrOptions.userDelegationKey) {\n        this.signedOid = permissionsOrOptions.userDelegationKey.signedObjectId;\n        this.signedTenantId = permissionsOrOptions.userDelegationKey.signedTenantId;\n        this.signedStartsOn = permissionsOrOptions.userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = permissionsOrOptions.userDelegationKey.signedExpiresOn;\n        this.signedService = permissionsOrOptions.userDelegationKey.signedService;\n        this.signedVersion = permissionsOrOptions.userDelegationKey.signedVersion;\n\n        this.preauthorizedAgentObjectId = permissionsOrOptions.preauthorizedAgentObjectId;\n        this.correlationId = permissionsOrOptions.correlationId;\n      }\n    } else {\n      this.services = services;\n      this.resourceTypes = resourceTypes;\n      this.expiresOn = expiresOn;\n      this.permissions = permissionsOrOptions;\n      this.protocol = protocol;\n      this.startsOn = startsOn;\n      this.ipRangeInner = ipRange;\n      this.encryptionScope = encryptionScope;\n      this.identifier = identifier;\n      this.resource = resource;\n      this.cacheControl = cacheControl;\n      this.contentDisposition = contentDisposition;\n      this.contentEncoding = contentEncoding;\n      this.contentLanguage = contentLanguage;\n      this.contentType = contentType;\n\n      if (userDelegationKey) {\n        this.signedOid = userDelegationKey.signedObjectId;\n        this.signedTenantId = userDelegationKey.signedTenantId;\n        this.signedStartsOn = userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = userDelegationKey.signedExpiresOn;\n        this.signedService = userDelegationKey.signedService;\n        this.signedVersion = userDelegationKey.signedVersion;\n\n        this.preauthorizedAgentObjectId = preauthorizedAgentObjectId;\n        this.correlationId = correlationId;\n      }\n    }\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"ses\",\n      \"skoid\", // Signed object ID\n      \"sktid\", // Signed tenant ID\n      \"skt\", // Signed key start time\n      \"ske\", // Signed key expiry time\n      \"sks\", // Signed key service\n      \"skv\", // Signed key version\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\",\n      \"saoid\",\n      \"scid\",\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"ses\":\n          this.tryAppendQueryParameter(queries, param, this.encryptionScope);\n          break;\n        case \"skoid\": // Signed object ID\n          this.tryAppendQueryParameter(queries, param, this.signedOid);\n          break;\n        case \"sktid\": // Signed tenant ID\n          this.tryAppendQueryParameter(queries, param, this.signedTenantId);\n          break;\n        case \"skt\": // Signed key start time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedStartsOn ? truncatedISO8061Date(this.signedStartsOn, false) : undefined\n          );\n          break;\n        case \"ske\": // Signed key expiry time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedExpiresOn ? truncatedISO8061Date(this.signedExpiresOn, false) : undefined\n          );\n          break;\n        case \"sks\": // Signed key service\n          this.tryAppendQueryParameter(queries, param, this.signedService);\n          break;\n        case \"skv\": // Signed key version\n          this.tryAppendQueryParameter(queries, param, this.signedVersion);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n        case \"saoid\":\n          this.tryAppendQueryParameter(queries, param, this.preauthorizedAgentObjectId);\n          break;\n        case \"scid\":\n          this.tryAppendQueryParameter(queries, param, this.correlationId);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @param queries -\n   * @param key -\n   * @param value -\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BlobSASPermissions } from \"./BlobSASPermissions\";\nimport { UserDelegationKey } from \"../BlobServiceClient\";\nimport { ContainerSASPermissions } from \"./ContainerSASPermissions\";\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { UserDelegationKeyCredential } from \"../credentials/UserDelegationKeyCredential\";\nimport { ipRangeToString, SasIPRange } from \"./SasIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"../utils/constants\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobSASSignatureValues is used to help generating Blob service SAS tokens for containers or blobs.\n */\nexport interface BlobSASSignatureValues {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to either {@link ContainerSASPermissions} or {@link BlobSASPermissions} depending on the resource\n   * being accessed for help constructing the permissions string.\n   */\n  permissions?: BlobSASPermissions | ContainerSASPermissions;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The name of the container the SAS user may access.\n   */\n  containerName: string;\n\n  /**\n   * Optional. The blob name of the SAS user may access. Required if snapshotTime or versionId is provided.\n   */\n  blobName?: string;\n\n  /**\n   * Optional. Snapshot timestamp string the SAS user may access. Only supported from API version 2018-11-09.\n   */\n  snapshotTime?: string;\n\n  /**\n   * Optional. VersionId of the blob version the SAS user may access. Only supported from API version 2019-10-10.\n   */\n  versionId?: string;\n\n  /**\n   * Optional. The name of the access policy on the container this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   */\n  contentType?: string;\n\n  /**\n   * Optional. Beginning in version 2020-02-10, specifies the Authorized AAD Object ID in GUID format. The AAD Object ID of a user\n   * authorized by the owner of the user delegation key to perform the action granted by the SAS. The Azure Storage service will\n   * ensure that the owner of the user delegation key has the required permissions before granting access but no additional permission\n   * check for the user specified in this value will be performed. This is only used for User Delegation SAS.\n   */\n  preauthorizedAgentObjectId?: string;\n\n  /**\n   * Optional. Beginning in version 2020-02-10, this is a GUID value that will be logged in the storage diagnostic logs and can be used to\n   * correlate SAS generation with storage resource access. This is only used for User Delegation SAS.\n   */\n  correlationId?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * Fill in the required details before running the following snippets.\n *\n * Example usage:\n *\n * ```js\n * // Generate service level SAS for a container\n * const containerSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\"), // Required\n *     startsOn: new Date(), // Optional\n *     expiresOn: new Date(new Date().valueOf() + 86400), // Required. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * Example using an identifier:\n *\n * ```js\n * // Generate service level SAS for a container with identifier\n * // startsOn & permissions are optional when identifier is provided\n * const identifier = \"unique-id\";\n * await containerClient.setAccessPolicy(undefined, [\n *   {\n *     accessPolicy: {\n *       expiresOn: new Date(new Date().valueOf() + 86400), // Date type\n *       permissions: ContainerSASPermissions.parse(\"racwdl\").toString(),\n *       startsOn: new Date() // Date type\n *     },\n *     id: identifier\n *   }\n * ]);\n *\n * const containerSAS = generateBlobSASQueryParameters(\n *   {\n *     containerName, // Required\n *     identifier // Required\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * Example using a blob name:\n *\n * ```js\n * // Generate service level SAS for a blob\n * const blobSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     blobName, // Required\n *     permissions: BlobSASPermissions.parse(\"racwd\"), // Required\n *     startsOn: new Date(), // Optional\n *     expiresOn: new Date(new Date().valueOf() + 86400), // Required. Date type\n *     cacheControl: \"cache-control-override\", // Optional\n *     contentDisposition: \"content-disposition-override\", // Optional\n *     contentEncoding: \"content-encoding-override\", // Optional\n *     contentLanguage: \"content-language-override\", // Optional\n *     contentType: \"content-type-override\", // Optional\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters;\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n * WARNING: identifier will be ignored when generating user delegation SAS, permissions and expiresOn are required.\n *\n * Example usage:\n *\n * ```js\n * // Generate user delegation SAS for a container\n * const userDelegationKey = await blobServiceClient.getUserDelegationKey(startsOn, expiresOn);\n * const containerSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\"), // Required\n *     startsOn, // Optional. Date type\n *     expiresOn, // Required. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2018-11-09\" // Must greater than or equal to 2018-11-09 to generate user delegation SAS\n *   },\n *   userDelegationKey, // UserDelegationKey\n *   accountName\n * ).toString();\n * ```\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKey - Return value of `blobServiceClient.getUserDelegationKey()`\n * @param accountName -\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKey: UserDelegationKey,\n  accountName: string\n): SASQueryParameters;\n\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredentialOrUserDelegationKey: StorageSharedKeyCredential | UserDelegationKey,\n  accountName?: string\n): SASQueryParameters {\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n\n  const sharedKeyCredential =\n    sharedKeyCredentialOrUserDelegationKey instanceof StorageSharedKeyCredential\n      ? sharedKeyCredentialOrUserDelegationKey\n      : undefined;\n  let userDelegationKeyCredential: UserDelegationKeyCredential | undefined;\n\n  if (sharedKeyCredential === undefined && accountName !== undefined) {\n    userDelegationKeyCredential = new UserDelegationKeyCredential(\n      accountName,\n      sharedKeyCredentialOrUserDelegationKey as UserDelegationKey\n    );\n  }\n\n  if (sharedKeyCredential === undefined && userDelegationKeyCredential === undefined) {\n    throw TypeError(\"Invalid sharedKeyCredential, userDelegationKey or accountName.\");\n  }\n\n  // Version 2020-12-06 adds support for encryptionscope in SAS.\n  if (version >= \"2020-12-06\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20201206(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      return generateBlobSASQueryParametersUDK20201206(\n        blobSASSignatureValues,\n        userDelegationKeyCredential!\n      );\n    }\n  }\n\n  // Version 2019-12-12 adds support for the blob tags permission.\n  // Version 2018-11-09 adds support for the signed resource and signed blob snapshot time fields.\n  // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas#constructing-the-signature-string\n  if (version >= \"2018-11-09\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20181109(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      // Version 2020-02-10 delegation SAS signature construction includes preauthorizedAgentObjectId, agentObjectId, correlationId.\n      if (version >= \"2020-02-10\") {\n        return generateBlobSASQueryParametersUDK20200210(\n          blobSASSignatureValues,\n          userDelegationKeyCredential!\n        );\n      } else {\n        return generateBlobSASQueryParametersUDK20181109(\n          blobSASSignatureValues,\n          userDelegationKeyCredential!\n        );\n      }\n    }\n  }\n\n  if (version >= \"2015-04-05\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20150405(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      throw new RangeError(\n        \"'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.\"\n      );\n    }\n  }\n\n  throw new RangeError(\"'version' must be >= '2015-04-05'.\");\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2015-04-05 AND BEFORE 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20150405(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  if (\n    !blobSASSignatureValues.identifier &&\n    !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  let resource: string = \"c\";\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\",\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    blobSASSignatureValues.version!,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20181109(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  if (\n    !blobSASSignatureValues.identifier &&\n    !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\",\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    blobSASSignatureValues.version!,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-12-06.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param blobSASSignatureValues -\n * @param sharedKeyCredential -\n */\nfunction generateBlobSASQueryParameters20201206(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  if (\n    !blobSASSignatureValues.identifier &&\n    !(blobSASSignatureValues.permissions && blobSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.encryptionScope,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\",\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    blobSASSignatureValues.version!,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n    undefined,\n    undefined,\n    undefined,\n    blobSASSignatureValues.encryptionScope\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20181109(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential\n): SASQueryParameters {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  // Stored access policies are not supported for a user delegation SAS.\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\"\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n  return new SASQueryParameters(\n    blobSASSignatureValues.version!,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n    userDelegationKeyCredential.userDelegationKey\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-02-10.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20200210(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential\n): SASQueryParameters {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  // Stored access policies are not supported for a user delegation SAS.\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\"\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.preauthorizedAgentObjectId,\n    undefined, // agentObjectId\n    blobSASSignatureValues.correlationId,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n  return new SASQueryParameters(\n    blobSASSignatureValues.version!,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n    userDelegationKeyCredential.userDelegationKey,\n    blobSASSignatureValues.preauthorizedAgentObjectId,\n    blobSASSignatureValues.correlationId\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2020-12-06.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param blobSASSignatureValues -\n * @param userDelegationKeyCredential -\n */\nfunction generateBlobSASQueryParametersUDK20201206(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential\n): SASQueryParameters {\n  blobSASSignatureValues = SASSignatureValuesSanityCheckAndAutofill(blobSASSignatureValues);\n\n  // Stored access policies are not supported for a user delegation SAS.\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\"\n    );\n  }\n\n  let resource: string = \"c\";\n  let timestamp = blobSASSignatureValues.snapshotTime;\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    } else if (blobSASSignatureValues.versionId) {\n      resource = \"bv\";\n      timestamp = blobSASSignatureValues.versionId;\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  let verifiedPermissions: string | undefined;\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.preauthorizedAgentObjectId,\n    undefined, // agentObjectId\n    blobSASSignatureValues.correlationId,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    blobSASSignatureValues.version,\n    resource,\n    timestamp,\n    blobSASSignatureValues.encryptionScope,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n  return new SASQueryParameters(\n    blobSASSignatureValues.version!,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n    userDelegationKeyCredential.userDelegationKey,\n    blobSASSignatureValues.preauthorizedAgentObjectId,\n    blobSASSignatureValues.correlationId,\n    blobSASSignatureValues.encryptionScope\n  );\n}\n\nfunction getCanonicalName(accountName: string, containerName: string, blobName?: string): string {\n  // Container: \"/blob/account/containerName\"\n  // Blob:      \"/blob/account/containerName/blobName\"\n  const elements: string[] = [`/blob/${accountName}/${containerName}`];\n  if (blobName) {\n    elements.push(`/${blobName}`);\n  }\n  return elements.join(\"\");\n}\n\nfunction SASSignatureValuesSanityCheckAndAutofill(\n  blobSASSignatureValues: BlobSASSignatureValues\n): BlobSASSignatureValues {\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n  if (blobSASSignatureValues.snapshotTime && version < \"2018-11-09\") {\n    throw RangeError(\"'version' must be >= '2018-11-09' when providing 'snapshotTime'.\");\n  }\n  if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.snapshotTime) {\n    throw RangeError(\"Must provide 'blobName' when providing 'snapshotTime'.\");\n  }\n\n  if (blobSASSignatureValues.versionId && version < \"2019-10-10\") {\n    throw RangeError(\"'version' must be >= '2019-10-10' when providing 'versionId'.\");\n  }\n  if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.versionId) {\n    throw RangeError(\"Must provide 'blobName' when providing 'versionId'.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.setImmutabilityPolicy &&\n    version < \"2020-08-04\"\n  ) {\n    throw RangeError(\"'version' must be >= '2020-08-04' when provided 'i' permission.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.deleteVersion &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when providing 'x' permission.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.permanentDelete &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when providing 'y' permission.\");\n  }\n\n  if (\n    blobSASSignatureValues.permissions &&\n    blobSASSignatureValues.permissions.tag &&\n    version < \"2019-12-12\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-12-12' when providing 't' permission.\");\n  }\n\n  if (\n    version < \"2020-02-10\" &&\n    blobSASSignatureValues.permissions &&\n    (blobSASSignatureValues.permissions.move || blobSASSignatureValues.permissions.execute)\n  ) {\n    throw RangeError(\"'version' must be >= '2020-02-10' when providing the 'm' or 'e' permission.\");\n  }\n\n  if (\n    version < \"2021-04-10\" &&\n    blobSASSignatureValues.permissions &&\n    (blobSASSignatureValues.permissions as ContainerSASPermissions).filterByTags\n  ) {\n    throw RangeError(\"'version' must be >= '2021-04-10' when providing the 'f' permission.\");\n  }\n\n  if (\n    version < \"2020-02-10\" &&\n    (blobSASSignatureValues.preauthorizedAgentObjectId || blobSASSignatureValues.correlationId)\n  ) {\n    throw RangeError(\n      \"'version' must be >= '2020-02-10' when providing 'preauthorizedAgentObjectId' or 'correlationId'.\"\n    );\n  }\n\n  if (blobSASSignatureValues.encryptionScope && version < \"2020-12-06\") {\n    throw RangeError(\"'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.\");\n  }\n\n  blobSASSignatureValues.version = version;\n  return blobSASSignatureValues;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  BlobDownloadOptionalParams,\n  BlobDownloadResponse,\n  BlobGetPropertiesOptionalParams,\n  BlobGetPropertiesResponse,\n  BlobDeleteOptionalParams,\n  BlobDeleteResponse,\n  BlobUndeleteOptionalParams,\n  BlobUndeleteResponse,\n  BlobExpiryOptions,\n  BlobSetExpiryOptionalParams,\n  BlobSetExpiryResponse,\n  BlobSetHttpHeadersOptionalParams,\n  BlobSetHttpHeadersResponse,\n  BlobSetImmutabilityPolicyOptionalParams,\n  BlobSetImmutabilityPolicyResponse,\n  BlobDeleteImmutabilityPolicyOptionalParams,\n  BlobDeleteImmutabilityPolicyResponse,\n  BlobSetLegalHoldOptionalParams,\n  BlobSetLegalHoldResponse,\n  BlobSetMetadataOptionalParams,\n  BlobSetMetadataResponse,\n  BlobAcquireLeaseOptionalParams,\n  BlobAcquireLeaseResponse,\n  BlobReleaseLeaseOptionalParams,\n  BlobReleaseLeaseResponse,\n  BlobRenewLeaseOptionalParams,\n  BlobRenewLeaseResponse,\n  BlobChangeLeaseOptionalParams,\n  BlobChangeLeaseResponse,\n  BlobBreakLeaseOptionalParams,\n  BlobBreakLeaseResponse,\n  BlobCreateSnapshotOptionalParams,\n  BlobCreateSnapshotResponse,\n  BlobStartCopyFromURLOptionalParams,\n  BlobStartCopyFromURLResponse,\n  BlobCopyFromURLOptionalParams,\n  BlobCopyFromURLResponse,\n  BlobAbortCopyFromURLOptionalParams,\n  BlobAbortCopyFromURLResponse,\n  AccessTier,\n  BlobSetTierOptionalParams,\n  BlobSetTierResponse,\n  BlobGetAccountInfoResponse,\n  BlobQueryOptionalParams,\n  BlobQueryResponse,\n  BlobGetTagsOptionalParams,\n  BlobGetTagsResponse,\n  BlobSetTagsOptionalParams,\n  BlobSetTagsResponse\n} from \"../models\";\n\n/** Class representing a Blob. */\nexport class Blob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class Blob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Download operation reads or downloads a blob from the system, including its metadata and\n   * properties. You can also call Download to read a snapshot.\n   * @param options The options parameters.\n   */\n  download(\n    options?: BlobDownloadOptionalParams\n  ): Promise<BlobDownloadResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      downloadOperationSpec\n    ) as Promise<BlobDownloadResponse>;\n  }\n\n  /**\n   * The Get Properties operation returns all user-defined metadata, standard HTTP properties, and system\n   * properties for the blob. It does not return the content of the blob.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: BlobGetPropertiesOptionalParams\n  ): Promise<BlobGetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPropertiesOperationSpec\n    ) as Promise<BlobGetPropertiesResponse>;\n  }\n\n  /**\n   * If the storage account's soft delete feature is disabled then, when a blob is deleted, it is\n   * permanently removed from the storage account. If the storage account's soft delete feature is\n   * enabled, then, when a blob is deleted, it is marked for deletion and becomes inaccessible\n   * immediately. However, the blob service retains the blob or snapshot for the number of days specified\n   * by the DeleteRetentionPolicy section of [Storage service properties]\n   * (Set-Blob-Service-Properties.md). After the specified number of days has passed, the blob's data is\n   * permanently removed from the storage account. Note that you continue to be charged for the\n   * soft-deleted blob's storage until it is permanently removed. Use the List Blobs API and specify the\n   * \"include=deleted\" query parameter to discover which blobs and snapshots have been soft deleted. You\n   * can then use the Undelete Blob API to restore a soft-deleted blob. All other operations on a\n   * soft-deleted blob or snapshot causes the service to return an HTTP status code of 404\n   * (ResourceNotFound).\n   * @param options The options parameters.\n   */\n  delete(options?: BlobDeleteOptionalParams): Promise<BlobDeleteResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteOperationSpec\n    ) as Promise<BlobDeleteResponse>;\n  }\n\n  /**\n   * Undelete a blob that was previously soft deleted\n   * @param options The options parameters.\n   */\n  undelete(\n    options?: BlobUndeleteOptionalParams\n  ): Promise<BlobUndeleteResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      undeleteOperationSpec\n    ) as Promise<BlobUndeleteResponse>;\n  }\n\n  /**\n   * Sets the time a blob will expire and be deleted.\n   * @param expiryOptions Required. Indicates mode of the expiry time\n   * @param options The options parameters.\n   */\n  setExpiry(\n    expiryOptions: BlobExpiryOptions,\n    options?: BlobSetExpiryOptionalParams\n  ): Promise<BlobSetExpiryResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      expiryOptions,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setExpiryOperationSpec\n    ) as Promise<BlobSetExpiryResponse>;\n  }\n\n  /**\n   * The Set HTTP Headers operation sets system properties on the blob\n   * @param options The options parameters.\n   */\n  setHttpHeaders(\n    options?: BlobSetHttpHeadersOptionalParams\n  ): Promise<BlobSetHttpHeadersResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setHttpHeadersOperationSpec\n    ) as Promise<BlobSetHttpHeadersResponse>;\n  }\n\n  /**\n   * The Set Immutability Policy operation sets the immutability policy on the blob\n   * @param options The options parameters.\n   */\n  setImmutabilityPolicy(\n    options?: BlobSetImmutabilityPolicyOptionalParams\n  ): Promise<BlobSetImmutabilityPolicyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setImmutabilityPolicyOperationSpec\n    ) as Promise<BlobSetImmutabilityPolicyResponse>;\n  }\n\n  /**\n   * The Delete Immutability Policy operation deletes the immutability policy on the blob\n   * @param options The options parameters.\n   */\n  deleteImmutabilityPolicy(\n    options?: BlobDeleteImmutabilityPolicyOptionalParams\n  ): Promise<BlobDeleteImmutabilityPolicyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteImmutabilityPolicyOperationSpec\n    ) as Promise<BlobDeleteImmutabilityPolicyResponse>;\n  }\n\n  /**\n   * The Set Legal Hold operation sets a legal hold on the blob.\n   * @param legalHold Specified if a legal hold should be set on the blob.\n   * @param options The options parameters.\n   */\n  setLegalHold(\n    legalHold: boolean,\n    options?: BlobSetLegalHoldOptionalParams\n  ): Promise<BlobSetLegalHoldResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      legalHold,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setLegalHoldOperationSpec\n    ) as Promise<BlobSetLegalHoldResponse>;\n  }\n\n  /**\n   * The Set Blob Metadata operation sets user-defined metadata for the specified blob as one or more\n   * name-value pairs\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: BlobSetMetadataOptionalParams\n  ): Promise<BlobSetMetadataResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setMetadataOperationSpec\n    ) as Promise<BlobSetMetadataResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param options The options parameters.\n   */\n  acquireLease(\n    options?: BlobAcquireLeaseOptionalParams\n  ): Promise<BlobAcquireLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      acquireLeaseOperationSpec\n    ) as Promise<BlobAcquireLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  releaseLease(\n    leaseId: string,\n    options?: BlobReleaseLeaseOptionalParams\n  ): Promise<BlobReleaseLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      releaseLeaseOperationSpec\n    ) as Promise<BlobReleaseLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  renewLease(\n    leaseId: string,\n    options?: BlobRenewLeaseOptionalParams\n  ): Promise<BlobRenewLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      renewLeaseOperationSpec\n    ) as Promise<BlobRenewLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   *                        (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   *                        (String) for a list of valid GUID string formats.\n   * @param options The options parameters.\n   */\n  changeLease(\n    leaseId: string,\n    proposedLeaseId: string,\n    options?: BlobChangeLeaseOptionalParams\n  ): Promise<BlobChangeLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      proposedLeaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      changeLeaseOperationSpec\n    ) as Promise<BlobChangeLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param options The options parameters.\n   */\n  breakLease(\n    options?: BlobBreakLeaseOptionalParams\n  ): Promise<BlobBreakLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      breakLeaseOperationSpec\n    ) as Promise<BlobBreakLeaseResponse>;\n  }\n\n  /**\n   * The Create Snapshot operation creates a read-only snapshot of a blob\n   * @param options The options parameters.\n   */\n  createSnapshot(\n    options?: BlobCreateSnapshotOptionalParams\n  ): Promise<BlobCreateSnapshotResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createSnapshotOperationSpec\n    ) as Promise<BlobCreateSnapshotResponse>;\n  }\n\n  /**\n   * The Start Copy From URL operation copies a blob or an internet resource to a new blob.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  startCopyFromURL(\n    copySource: string,\n    options?: BlobStartCopyFromURLOptionalParams\n  ): Promise<BlobStartCopyFromURLResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      copySource,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      startCopyFromURLOperationSpec\n    ) as Promise<BlobStartCopyFromURLResponse>;\n  }\n\n  /**\n   * The Copy From URL operation copies a blob or an internet resource to a new blob. It will not return\n   * a response until the copy is complete.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  copyFromURL(\n    copySource: string,\n    options?: BlobCopyFromURLOptionalParams\n  ): Promise<BlobCopyFromURLResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      copySource,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      copyFromURLOperationSpec\n    ) as Promise<BlobCopyFromURLResponse>;\n  }\n\n  /**\n   * The Abort Copy From URL operation aborts a pending Copy From URL operation, and leaves a destination\n   * blob with zero length and full metadata.\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   *               operation.\n   * @param options The options parameters.\n   */\n  abortCopyFromURL(\n    copyId: string,\n    options?: BlobAbortCopyFromURLOptionalParams\n  ): Promise<BlobAbortCopyFromURLResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      copyId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      abortCopyFromURLOperationSpec\n    ) as Promise<BlobAbortCopyFromURLResponse>;\n  }\n\n  /**\n   * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant storage only). A\n   * premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob. A block\n   * blob's tier determines Hot/Cool/Archive storage type. This operation does not update the blob's\n   * ETag.\n   * @param tier Indicates the tier to be set on the blob.\n   * @param options The options parameters.\n   */\n  setTier(\n    tier: AccessTier,\n    options?: BlobSetTierOptionalParams\n  ): Promise<BlobSetTierResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      tier,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setTierOperationSpec\n    ) as Promise<BlobSetTierResponse>;\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param options The options parameters.\n   */\n  getAccountInfo(\n    options?: coreHttp.OperationOptions\n  ): Promise<BlobGetAccountInfoResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getAccountInfoOperationSpec\n    ) as Promise<BlobGetAccountInfoResponse>;\n  }\n\n  /**\n   * The Query operation enables users to select/project on blob data by providing simple query\n   * expressions.\n   * @param options The options parameters.\n   */\n  query(options?: BlobQueryOptionalParams): Promise<BlobQueryResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      queryOperationSpec\n    ) as Promise<BlobQueryResponse>;\n  }\n\n  /**\n   * The Get Tags operation enables users to get the tags associated with a blob.\n   * @param options The options parameters.\n   */\n  getTags(options?: BlobGetTagsOptionalParams): Promise<BlobGetTagsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getTagsOperationSpec\n    ) as Promise<BlobGetTagsResponse>;\n  }\n\n  /**\n   * The Set Tags operation enables users to set tags on a blob.\n   * @param options The options parameters.\n   */\n  setTags(options?: BlobSetTagsOptionalParams): Promise<BlobSetTagsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setTagsOperationSpec\n    ) as Promise<BlobSetTagsResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\n\nconst downloadOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\"\n      },\n      headersMapper: Mappers.BlobDownloadHeaders\n    },\n    206: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\"\n      },\n      headersMapper: Mappers.BlobDownloadHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDownloadExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.rangeGetContentMD5,\n    Parameters.rangeGetContentCRC64,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDeleteExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.blobDeleteType\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.deleteSnapshots\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst undeleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobUndeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobUndeleteExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp8],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setExpiryOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetExpiryHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetExpiryExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp11],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.expiryOptions,\n    Parameters.expiresOn\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setHttpHeadersOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetHttpHeadersHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetHttpHeadersExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setImmutabilityPolicyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetImmutabilityPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetImmutabilityPolicyExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp12],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifUnmodifiedSince,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst deleteImmutabilityPolicyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobDeleteImmutabilityPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDeleteImmutabilityPolicyExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp12],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setLegalHoldOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetLegalHoldHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetLegalHoldExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp13],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.legalHold\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetMetadataExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp6],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst acquireLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobAcquireLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action,\n    Parameters.duration,\n    Parameters.proposedLeaseId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst releaseLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobReleaseLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action1,\n    Parameters.leaseId1,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst renewLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobRenewLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobRenewLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action2,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst changeLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobChangeLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.leaseId1,\n    Parameters.action4,\n    Parameters.proposedLeaseId1,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst breakLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobBreakLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp10],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.action3,\n    Parameters.breakPeriod,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst createSnapshotOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobCreateSnapshotHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobCreateSnapshotExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp14],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst startCopyFromURLOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobStartCopyFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobStartCopyFromURLExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.tier,\n    Parameters.rehydratePriority,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceIfTags,\n    Parameters.copySource,\n    Parameters.blobTagsString,\n    Parameters.sealBlob,\n    Parameters.legalHold1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst copyFromURLOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobCopyFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobCopyFromURLExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.copySource,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.xMsRequiresSync,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.copySourceTags\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst abortCopyFromURLOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    204: {\n      headersMapper: Mappers.BlobAbortCopyFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobAbortCopyFromURLExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp15,\n    Parameters.copyId\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.copyActionAbortConstant\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setTierOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetTierHeaders\n    },\n    202: {\n      headersMapper: Mappers.BlobSetTierHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetTierExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp16\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifTags,\n    Parameters.rehydratePriority,\n    Parameters.tier1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getAccountInfoOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetAccountInfoExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.comp, Parameters.restype1],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst queryOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\"\n      },\n      headersMapper: Mappers.BlobQueryHeaders\n    },\n    206: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\"\n      },\n      headersMapper: Mappers.BlobQueryHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobQueryExceptionHeaders\n    }\n  },\n  requestBody: Parameters.queryRequest,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.comp17\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\nconst getTagsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobTags,\n      headersMapper: Mappers.BlobGetTagsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetTagsExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.versionId,\n    Parameters.comp18\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifTags\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setTagsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    204: {\n      headersMapper: Mappers.BlobSetTagsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetTagsExceptionHeaders\n    }\n  },\n  requestBody: Parameters.tags,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.versionId,\n    Parameters.comp18\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId,\n    Parameters.ifTags,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { generateUuid, HttpResponse } from \"@azure/core-http\";\nimport { StorageClientContext } from \"./generated/src/index\";\nimport { ContainerBreakLeaseOptionalParams } from \"./generatedModels\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { Blob as StorageBlob, Container } from \"./generated/src/operations\";\nimport { ModifiedAccessConditions } from \"./models\";\nimport { CommonOptions } from \"./StorageClient\";\nimport { ETagNone } from \"./utils/constants\";\nimport { convertTracingToRequestOptionsBase, createSpan } from \"./utils/tracing\";\nimport { BlobClient } from \"./Clients\";\nimport { ContainerClient } from \"./ContainerClient\";\n\n/**\n * The details for a specific lease.\n */\nexport interface Lease {\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally. If the request version is 2011-08-18 or\n   * newer, the ETag value will be in quotes.\n   */\n  etag?: string;\n  /**\n   * Returns the date and time the container was\n   * last modified. Any operation that modifies the blob, including an update\n   * of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a container's lease\n   */\n  leaseId?: string;\n  /**\n   * Approximate time remaining in the lease\n   * period, in seconds.\n   */\n  leaseTime?: number;\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used\n   * to execute the request. This header is returned for requests made against\n   * version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated\n   */\n  date?: Date;\n  /**\n   * Error code if any associated with the response that returned\n   * the Lease information.\n   */\n  errorCode?: string;\n}\n\n/**\n * Contains the response data for operations that create, modify, or delete a lease.\n *\n * See {@link BlobLeaseClient}.\n */\nexport type LeaseOperationResponse = Lease & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: Lease;\n  };\n};\n\n/**\n * Configures lease operations.\n */\nexport interface LeaseOperationOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * A client that manages leases for a {@link ContainerClient} or a {@link BlobClient}.\n */\nexport class BlobLeaseClient {\n  private _leaseId: string;\n  private _url: string;\n  private _containerOrBlobOperation: Container | StorageBlob;\n  private _isContainer: boolean;\n\n  /**\n   * Gets the lease Id.\n   *\n   * @readonly\n   */\n  public get leaseId(): string {\n    return this._leaseId;\n  }\n\n  /**\n   * Gets the url.\n   *\n   * @readonly\n   */\n  public get url(): string {\n    return this._url;\n  }\n\n  /**\n   * Creates an instance of BlobLeaseClient.\n   * @param client - The client to make the lease operation requests.\n   * @param leaseId - Initial proposed lease id.\n   */\n  constructor(client: ContainerClient | BlobClient, leaseId?: string) {\n    const clientContext = new StorageClientContext(\n      client.url,\n      (client as any).pipeline.toServiceClientOptions()\n    );\n    this._url = client.url;\n\n    if ((client as BlobClient).name === undefined) {\n      this._isContainer = true;\n      this._containerOrBlobOperation = new Container(clientContext);\n    } else {\n      this._isContainer = false;\n      this._containerOrBlobOperation = new StorageBlob(clientContext);\n    }\n\n    if (!leaseId) {\n      leaseId = generateUuid();\n    }\n    this._leaseId = leaseId;\n  }\n\n  /**\n   * Establishes and manages a lock on a container for delete operations, or on a blob\n   * for write and delete operations.\n   * The lock duration can be 15 to 60 seconds, or can be infinite.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param duration - Must be between 15 to 60 seconds, or infinite (-1)\n   * @param options - option to configure lease management operations.\n   * @returns Response data for acquire lease operation.\n   */\n  public async acquireLease(\n    duration: number,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobLeaseClient-acquireLease\", options);\n\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\"\n      );\n    }\n\n    try {\n      return await this._containerOrBlobOperation.acquireLease({\n        abortSignal: options.abortSignal,\n        duration,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        proposedLeaseId: this._leaseId,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To change the ID of the lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param proposedLeaseId - the proposed new lease Id.\n   * @param options - option to configure lease management operations.\n   * @returns Response data for change lease operation.\n   */\n  public async changeLease(\n    proposedLeaseId: string,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobLeaseClient-changeLease\", options);\n\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\"\n      );\n    }\n\n    try {\n      const response = await this._containerOrBlobOperation.changeLease(\n        this._leaseId,\n        proposedLeaseId,\n        {\n          abortSignal: options.abortSignal,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        }\n      );\n      this._leaseId = proposedLeaseId;\n      return response;\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To free the lease if it is no longer needed so that another client may\n   * immediately acquire a lease against the container or the blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param options - option to configure lease management operations.\n   * @returns Response data for release lease operation.\n   */\n  public async releaseLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobLeaseClient-releaseLease\", options);\n\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\"\n      );\n    }\n\n    try {\n      return await this._containerOrBlobOperation.releaseLease(this._leaseId, {\n        abortSignal: options.abortSignal,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To renew the lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param options - Optional option to configure lease management operations.\n   * @returns Response data for renew lease operation.\n   */\n  public async renewLease(options: LeaseOperationOptions = {}): Promise<Lease> {\n    const { span, updatedOptions } = createSpan(\"BlobLeaseClient-renewLease\", options);\n\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\"\n      );\n    }\n\n    try {\n      return await this._containerOrBlobOperation.renewLease(this._leaseId, {\n        abortSignal: options.abortSignal,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To end the lease but ensure that another client cannot acquire a new lease\n   * until the current lease period has expired.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param breakPeriod - Break period\n   * @param options - Optional options to configure lease management operations.\n   * @returns Response data for break lease operation.\n   */\n  public async breakLease(\n    breakPeriod: number,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobLeaseClient-breakLease\", options);\n\n    if (\n      this._isContainer &&\n      ((options.conditions?.ifMatch && options.conditions?.ifMatch !== ETagNone) ||\n        (options.conditions?.ifNoneMatch && options.conditions?.ifNoneMatch !== ETagNone) ||\n        options.conditions?.tagConditions)\n    ) {\n      throw new RangeError(\n        \"The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.\"\n      );\n    }\n\n    try {\n      const operationOptions: ContainerBreakLeaseOptionalParams = {\n        abortSignal: options.abortSignal,\n        breakPeriod,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      };\n      return await this._containerOrBlobOperation.breakLease(operationOptions);\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TransferProgressEvent } from \"@azure/core-http\";\nimport { Readable } from \"stream\";\n\nexport type ReadableStreamGetter = (offset: number) => Promise<NodeJS.ReadableStream>;\n\nexport interface RetriableReadableStreamOptions {\n  /**\n   * Max retry count (greater than or equal to 0), undefined or invalid value means no retry\n   */\n  maxRetryRequests?: number;\n\n  /**\n   * Read progress event handler\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Debug purpose only. Used to inject an unexpected end to existing internal stream,\n   * to test stream retry works well or not.\n   *\n   * When assign it to true, for next incoming \"data\" event of internal stream,\n   * RetriableReadableStream will try to emit an \"end\" event to existing internal\n   * stream to force it end and start retry from the breaking point.\n   * The value will then update to \"undefined\", once the injection works.\n   */\n  doInjectErrorOnce?: boolean;\n\n  /**\n   * A threshold, not a limit. Dictates the amount of data that a stream buffers before it stops asking for more data.\n   */\n  highWaterMark?: number;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * A Node.js ReadableStream will internally retry when internal ReadableStream unexpected ends.\n */\nexport class RetriableReadableStream extends Readable {\n  private start: number;\n  private offset: number;\n  private end: number;\n  private getter: ReadableStreamGetter;\n  private source: NodeJS.ReadableStream;\n  private retries: number = 0;\n  private maxRetryRequests: number;\n  private onProgress?: (progress: TransferProgressEvent) => void;\n  private options: RetriableReadableStreamOptions;\n\n  /**\n   * Creates an instance of RetriableReadableStream.\n   *\n   * @param source - The current ReadableStream returned from getter\n   * @param getter - A method calling downloading request returning\n   *                                      a new ReadableStream from specified offset\n   * @param offset - Offset position in original data source to read\n   * @param count - How much data in original data source to read\n   * @param options -\n   */\n  public constructor(\n    source: NodeJS.ReadableStream,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {}\n  ) {\n    super({ highWaterMark: options.highWaterMark });\n    this.getter = getter;\n    this.source = source;\n    this.start = offset;\n    this.offset = offset;\n    this.end = offset + count - 1;\n    this.maxRetryRequests =\n      options.maxRetryRequests && options.maxRetryRequests >= 0 ? options.maxRetryRequests : 0;\n    this.onProgress = options.onProgress;\n    this.options = options;\n\n    this.setSourceEventHandlers();\n  }\n\n  public _read(): void {\n    this.source.resume();\n  }\n\n  private setSourceEventHandlers() {\n    this.source.on(\"data\", this.sourceDataHandler);\n    this.source.on(\"end\", this.sourceErrorOrEndHandler);\n    this.source.on(\"error\", this.sourceErrorOrEndHandler);\n  }\n\n  private removeSourceEventHandlers() {\n    this.source.removeListener(\"data\", this.sourceDataHandler);\n    this.source.removeListener(\"end\", this.sourceErrorOrEndHandler);\n    this.source.removeListener(\"error\", this.sourceErrorOrEndHandler);\n  }\n\n  private sourceDataHandler = (data: Buffer) => {\n    if (this.options.doInjectErrorOnce) {\n      this.options.doInjectErrorOnce = undefined;\n      this.source.pause();\n      this.source.removeAllListeners(\"data\");\n      this.source.emit(\"end\");\n      return;\n    }\n\n    // console.log(\n    //   `Offset: ${this.offset}, Received ${data.length} from internal stream`\n    // );\n    this.offset += data.length;\n    if (this.onProgress) {\n      this.onProgress({ loadedBytes: this.offset - this.start });\n    }\n    if (!this.push(data)) {\n      this.source.pause();\n    }\n  };\n\n  private sourceErrorOrEndHandler = (err?: Error) => {\n    if (err && err.name === \"AbortError\") {\n      this.destroy(err);\n      return;\n    }\n\n    // console.log(\n    //   `Source stream emits end or error, offset: ${\n    //     this.offset\n    //   }, dest end : ${this.end}`\n    // );\n    this.removeSourceEventHandlers();\n    if (this.offset - 1 === this.end) {\n      this.push(null);\n    } else if (this.offset <= this.end) {\n      // console.log(\n      //   `retries: ${this.retries}, max retries: ${this.maxRetries}`\n      // );\n      if (this.retries < this.maxRetryRequests) {\n        this.retries += 1;\n        this.getter(this.offset)\n          .then((newSource) => {\n            this.source = newSource;\n            this.setSourceEventHandlers();\n            return;\n          })\n          .catch((error) => {\n            this.destroy(error);\n          });\n      } else {\n        this.destroy(\n          new Error(\n            `Data corruption failure: received less data than required and reached maxRetires limitation. Received data offset: ${\n              this.offset - 1\n            }, data needed offset: ${this.end}, retries: ${this.retries}, max retries: ${\n              this.maxRetryRequests\n            }`\n          )\n        );\n      }\n    } else {\n      this.destroy(\n        new Error(\n          `Data corruption failure: Received more data than original request, data needed offset is ${\n            this.end\n          }, received offset: ${this.offset - 1}`\n        )\n      );\n    }\n  };\n\n  _destroy(error: Error | null, callback: (error?: Error) => void): void {\n    // remove listener from source and release source\n    this.removeSourceEventHandlers();\n    (this.source as Readable).destroy();\n\n    callback(error === null ? undefined : error);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { HttpResponse, isNode } from \"@azure/core-http\";\nimport { BlobImmutabilityPolicyMode } from \"./generatedModels\";\n\nimport {\n  BlobDownloadHeaders,\n  BlobType,\n  CopyStatusType,\n  LeaseDurationType,\n  LeaseStateType,\n  LeaseStatusType,\n} from \"./generatedModels\";\nimport { BlobDownloadResponseParsed, Metadata, ObjectReplicationPolicy } from \"./models\";\nimport {\n  ReadableStreamGetter,\n  RetriableReadableStream,\n  RetriableReadableStreamOptions,\n} from \"./utils/RetriableReadableStream\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobDownloadResponse implements BlobDownloadResponseParsed interface, and in Node.js runtime it will\n * automatically retry when internal read stream unexpected ends. (This kind of unexpected ends cannot\n * trigger retries defined in pipeline retry policy.)\n *\n * The {@link readableStreamBody} stream will retry underlayer, you can just use it as a normal Node.js\n * Readable stream.\n */\nexport class BlobDownloadResponse implements BlobDownloadResponseParsed {\n  /**\n   * Indicates that the service supports\n   * requests for partial file content.\n   *\n   * @readonly\n   */\n  public get acceptRanges(): string | undefined {\n    return this.originalResponse.acceptRanges;\n  }\n\n  /**\n   * Returns if it was previously specified\n   * for the file.\n   *\n   * @readonly\n   */\n  public get cacheControl(): string | undefined {\n    return this.originalResponse.cacheControl;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the 'x-ms-content-disposition' header and specifies how to process the\n   * response.\n   *\n   * @readonly\n   */\n  public get contentDisposition(): string | undefined {\n    return this.originalResponse.contentDisposition;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Encoding request header.\n   *\n   * @readonly\n   */\n  public get contentEncoding(): string | undefined {\n    return this.originalResponse.contentEncoding;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Language request header.\n   *\n   * @readonly\n   */\n  public get contentLanguage(): string | undefined {\n    return this.originalResponse.contentLanguage;\n  }\n\n  /**\n   * The current sequence number for a\n   * page blob. This header is not returned for block blobs or append blobs.\n   *\n   * @readonly\n   */\n  public get blobSequenceNumber(): number | undefined {\n    return this.originalResponse.blobSequenceNumber;\n  }\n\n  /**\n   * The blob's type. Possible values include:\n   * 'BlockBlob', 'PageBlob', 'AppendBlob'.\n   *\n   * @readonly\n   */\n  public get blobType(): BlobType | undefined {\n    return this.originalResponse.blobType;\n  }\n\n  /**\n   * The number of bytes present in the\n   * response body.\n   *\n   * @readonly\n   */\n  public get contentLength(): number | undefined {\n    return this.originalResponse.contentLength;\n  }\n\n  /**\n   * If the file has an MD5 hash and the\n   * request is to read the full file, this response header is returned so that\n   * the client can check for message content integrity. If the request is to\n   * read a specified range and the 'x-ms-range-get-content-md5' is set to\n   * true, then the request returns an MD5 hash for the range, as long as the\n   * range size is less than or equal to 4 MB. If neither of these sets of\n   * conditions is true, then no value is returned for the 'Content-MD5'\n   * header.\n   *\n   * @readonly\n   */\n  public get contentMD5(): Uint8Array | undefined {\n    return this.originalResponse.contentMD5;\n  }\n\n  /**\n   * Indicates the range of bytes returned if\n   * the client requested a subset of the file by setting the Range request\n   * header.\n   *\n   * @readonly\n   */\n  public get contentRange(): string | undefined {\n    return this.originalResponse.contentRange;\n  }\n\n  /**\n   * The content type specified for the file.\n   * The default content type is 'application/octet-stream'\n   *\n   * @readonly\n   */\n  public get contentType(): string | undefined {\n    return this.originalResponse.contentType;\n  }\n\n  /**\n   * Conclusion time of the last attempted\n   * Copy File operation where this file was the destination file. This value\n   * can specify the time of a completed, aborted, or failed copy attempt.\n   *\n   * @readonly\n   */\n  public get copyCompletedOn(): Date | undefined {\n    return this.originalResponse.copyCompletedOn;\n  }\n\n  /**\n   * String identifier for the last attempted Copy\n   * File operation where this file was the destination file.\n   *\n   * @readonly\n   */\n  public get copyId(): string | undefined {\n    return this.originalResponse.copyId;\n  }\n\n  /**\n   * Contains the number of bytes copied and\n   * the total bytes in the source in the last attempted Copy File operation\n   * where this file was the destination file. Can show between 0 and\n   * Content-Length bytes copied.\n   *\n   * @readonly\n   */\n  public get copyProgress(): string | undefined {\n    return this.originalResponse.copyProgress;\n  }\n\n  /**\n   * URL up to 2KB in length that specifies the\n   * source file used in the last attempted Copy File operation where this file\n   * was the destination file.\n   *\n   * @readonly\n   */\n  public get copySource(): string | undefined {\n    return this.originalResponse.copySource;\n  }\n\n  /**\n   * State of the copy operation\n   * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   *\n   * @readonly\n   */\n  public get copyStatus(): CopyStatusType | undefined {\n    return this.originalResponse.copyStatus;\n  }\n\n  /**\n   * Only appears when\n   * x-ms-copy-status is failed or pending. Describes cause of fatal or\n   * non-fatal copy operation failure.\n   *\n   * @readonly\n   */\n  public get copyStatusDescription(): string | undefined {\n    return this.originalResponse.copyStatusDescription;\n  }\n\n  /**\n   * When a blob is leased,\n   * specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'.\n   *\n   * @readonly\n   */\n  public get leaseDuration(): LeaseDurationType | undefined {\n    return this.originalResponse.leaseDuration;\n  }\n\n  /**\n   * Lease state of the blob. Possible\n   * values include: 'available', 'leased', 'expired', 'breaking', 'broken'.\n   *\n   * @readonly\n   */\n  public get leaseState(): LeaseStateType | undefined {\n    return this.originalResponse.leaseState;\n  }\n\n  /**\n   * The current lease status of the\n   * blob. Possible values include: 'locked', 'unlocked'.\n   *\n   * @readonly\n   */\n  public get leaseStatus(): LeaseStatusType | undefined {\n    return this.originalResponse.leaseStatus;\n  }\n\n  /**\n   * A UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated.\n   *\n   * @readonly\n   */\n  public get date(): Date | undefined {\n    return this.originalResponse.date;\n  }\n\n  /**\n   * The number of committed blocks\n   * present in the blob. This header is returned only for append blobs.\n   *\n   * @readonly\n   */\n  public get blobCommittedBlockCount(): number | undefined {\n    return this.originalResponse.blobCommittedBlockCount;\n  }\n\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally, in quotes.\n   *\n   * @readonly\n   */\n  public get etag(): string | undefined {\n    return this.originalResponse.etag;\n  }\n\n  /**\n   * The number of tags associated with the blob\n   *\n   * @readonly\n   */\n  public get tagCount(): number | undefined {\n    return this.originalResponse.tagCount;\n  }\n\n  /**\n   * The error code.\n   *\n   * @readonly\n   */\n  public get errorCode(): string | undefined {\n    return this.originalResponse.errorCode;\n  }\n\n  /**\n   * The value of this header is set to\n   * true if the file data and application metadata are completely encrypted\n   * using the specified algorithm. Otherwise, the value is set to false (when\n   * the file is unencrypted, or if only parts of the file/application metadata\n   * are encrypted).\n   *\n   * @readonly\n   */\n  public get isServerEncrypted(): boolean | undefined {\n    return this.originalResponse.isServerEncrypted;\n  }\n\n  /**\n   * If the blob has a MD5 hash, and if\n   * request contains range header (Range or x-ms-range), this response header\n   * is returned with the value of the whole blob's MD5 value. This value may\n   * or may not be equal to the value returned in Content-MD5 header, with the\n   * latter calculated from the requested range.\n   *\n   * @readonly\n   */\n  public get blobContentMD5(): Uint8Array | undefined {\n    return this.originalResponse.blobContentMD5;\n  }\n\n  /**\n   * Returns the date and time the file was last\n   * modified. Any operation that modifies the file or its properties updates\n   * the last modified time.\n   *\n   * @readonly\n   */\n  public get lastModified(): Date | undefined {\n    return this.originalResponse.lastModified;\n  }\n\n  /**\n   * Returns the UTC date and time generated by the service that indicates the time at which the blob was\n   * last read or written to.\n   *\n   * @readonly\n   */\n  public get lastAccessed(): Date | undefined {\n    return this.originalResponse.lastAccessed;\n  }\n\n  /**\n   * A name-value pair\n   * to associate with a file storage object.\n   *\n   * @readonly\n   */\n  public get metadata(): Metadata | undefined {\n    return this.originalResponse.metadata;\n  }\n\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   *\n   * @readonly\n   */\n  public get requestId(): string | undefined {\n    return this.originalResponse.requestId;\n  }\n\n  /**\n   * If a client request id header is sent in the request, this header will be present in the\n   * response with the same value.\n   *\n   * @readonly\n   */\n  public get clientRequestId(): string | undefined {\n    return this.originalResponse.clientRequestId;\n  }\n\n  /**\n   * Indicates the version of the Blob service used\n   * to execute the request.\n   *\n   * @readonly\n   */\n  public get version(): string | undefined {\n    return this.originalResponse.version;\n  }\n\n  /**\n   * Indicates the versionId of the downloaded blob version.\n   *\n   * @readonly\n   */\n  public get versionId(): string | undefined {\n    return this.originalResponse.versionId;\n  }\n\n  /**\n   * Indicates whether version of this blob is a current version.\n   *\n   * @readonly\n   */\n  public get isCurrentVersion(): boolean | undefined {\n    return this.originalResponse.isCurrentVersion;\n  }\n\n  /**\n   * The SHA-256 hash of the encryption key used to encrypt the blob. This value is only returned\n   * when the blob was encrypted with a customer-provided key.\n   *\n   * @readonly\n   */\n  public get encryptionKeySha256(): string | undefined {\n    return this.originalResponse.encryptionKeySha256;\n  }\n\n  /**\n   * If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to\n   * true, then the request returns a crc64 for the range, as long as the range size is less than\n   * or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is\n   * specified in the same request, it will fail with 400(Bad Request)\n   */\n  public get contentCrc64(): Uint8Array | undefined {\n    return this.originalResponse.contentCrc64;\n  }\n\n  /**\n   * Object Replication Policy Id of the destination blob.\n   *\n   * @readonly\n   */\n  public get objectReplicationDestinationPolicyId(): string | undefined {\n    return this.originalResponse.objectReplicationDestinationPolicyId;\n  }\n\n  /**\n   * Parsed Object Replication Policy Id, Rule Id(s) and status of the source blob.\n   *\n   * @readonly\n   */\n  public get objectReplicationSourceProperties(): ObjectReplicationPolicy[] | undefined {\n    return this.originalResponse.objectReplicationSourceProperties;\n  }\n\n  /**\n   * If this blob has been sealed.\n   *\n   * @readonly\n   */\n  public get isSealed(): boolean | undefined {\n    return this.originalResponse.isSealed;\n  }\n\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the blob immutability policy will expire.\n   *\n   * @readonly\n   */\n  public get immutabilityPolicyExpiresOn(): Date | undefined {\n    return this.originalResponse.immutabilityPolicyExpiresOn;\n  }\n\n  /**\n   * Indicates immutability policy mode.\n   *\n   * @readonly\n   */\n  public get immutabilityPolicyMode(): BlobImmutabilityPolicyMode | undefined {\n    return this.originalResponse.immutabilityPolicyMode;\n  }\n\n  /**\n   * Indicates if a legal hold is present on the blob.\n   *\n   * @readonly\n   */\n  public get legalHold(): boolean | undefined {\n    return this.originalResponse.legalHold;\n  }\n\n  /**\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   *\n   * @readonly\n   */\n  public get contentAsBlob(): Promise<Blob> | undefined {\n    return this.originalResponse.blobBody;\n  }\n\n  /**\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   *\n   * It will automatically retry when internal read stream unexpected ends.\n   *\n   * @readonly\n   */\n  public get readableStreamBody(): NodeJS.ReadableStream | undefined {\n    return isNode ? this.blobDownloadStream : undefined;\n  }\n\n  /**\n   * The HTTP response.\n   */\n  public get _response(): HttpResponse & {\n    parsedHeaders: BlobDownloadHeaders;\n  } {\n    return this.originalResponse._response;\n  }\n\n  private originalResponse: BlobDownloadResponseParsed;\n  private blobDownloadStream?: RetriableReadableStream;\n\n  /**\n   * Creates an instance of BlobDownloadResponse.\n   *\n   * @param originalResponse -\n   * @param getter -\n   * @param offset -\n   * @param count -\n   * @param options -\n   */\n  public constructor(\n    originalResponse: BlobDownloadResponseParsed,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {}\n  ) {\n    this.originalResponse = originalResponse;\n    this.blobDownloadStream = new RetriableReadableStream(\n      this.originalResponse.readableStreamBody!,\n      getter,\n      offset,\n      count,\n      options\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const AVRO_SYNC_MARKER_SIZE: number = 16;\nexport const AVRO_INIT_BYTES: Uint8Array = new Uint8Array([79, 98, 106, 1]);\nexport const AVRO_CODEC_KEY: string = \"avro.codec\";\nexport const AVRO_SCHEMA_KEY: string = \"avro.schema\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// TODO: Do a review of the Object usage and non-interfaces\n/* eslint-disable @typescript-eslint/ban-types, @azure/azure-sdk/ts-use-interface-parameters */\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { AvroReadable } from \"./AvroReadable\";\nimport { KeyValuePair } from \"./utils/utils.common\";\n\n/**\n * Options to configure the AvroParser read methods.\n * See {@link AvroParser.readFixedBytes}, {@link AvroParser.readMap} and etc.\n */\ninterface AvroParserReadOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\nexport class AvroParser {\n  /**\n   * Reads a fixed number of bytes from the stream.\n   *\n   * @param stream -\n   * @param length -\n   * @param options -\n   */\n  public static async readFixedBytes(\n    stream: AvroReadable,\n    length: number,\n    options: AvroParserReadOptions = {}\n  ): Promise<Uint8Array> {\n    const bytes = await stream.read(length, { abortSignal: options.abortSignal });\n    if (bytes.length !== length) {\n      throw new Error(\"Hit stream end.\");\n    }\n    return bytes;\n  }\n\n  /**\n   * Reads a single byte from the stream.\n   *\n   * @param stream -\n   * @param options -\n   */\n  private static async readByte(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {}\n  ): Promise<number> {\n    const buf = await AvroParser.readFixedBytes(stream, 1, options);\n    return buf[0];\n  }\n\n  // int and long are stored in variable-length zig-zag coding.\n  // variable-length: https://lucene.apache.org/core/3_5_0/fileformats.html#VInt\n  // zig-zag: https://developers.google.com/protocol-buffers/docs/encoding?csw=1#types\n  private static async readZigZagLong(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {}\n  ): Promise<number> {\n    let zigZagEncoded = 0;\n    let significanceInBit = 0;\n    let byte, haveMoreByte, significanceInFloat;\n\n    do {\n      byte = await AvroParser.readByte(stream, options);\n      haveMoreByte = byte & 0x80;\n      zigZagEncoded |= (byte & 0x7f) << significanceInBit;\n      significanceInBit += 7;\n    } while (haveMoreByte && significanceInBit < 28); // bitwise operation only works for 32-bit integers\n\n    if (haveMoreByte) {\n      // Switch to float arithmetic\n      // eslint-disable-next-line no-self-assign\n      zigZagEncoded = zigZagEncoded;\n      significanceInFloat = 268435456; // 2 ** 28.\n      do {\n        byte = await AvroParser.readByte(stream, options);\n        zigZagEncoded += (byte & 0x7f) * significanceInFloat;\n        significanceInFloat *= 128; // 2 ** 7\n      } while (byte & 0x80);\n\n      const res = (zigZagEncoded % 2 ? -(zigZagEncoded + 1) : zigZagEncoded) / 2;\n      if (res < Number.MIN_SAFE_INTEGER || res > Number.MAX_SAFE_INTEGER) {\n        throw new Error(\"Integer overflow.\");\n      }\n      return res;\n    }\n\n    return (zigZagEncoded >> 1) ^ -(zigZagEncoded & 1);\n  }\n\n  public static async readLong(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {}\n  ): Promise<number> {\n    return AvroParser.readZigZagLong(stream, options);\n  }\n\n  public static async readInt(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {}\n  ): Promise<number> {\n    return AvroParser.readZigZagLong(stream, options);\n  }\n\n  public static async readNull(): Promise<null> {\n    return null;\n  }\n\n  public static async readBoolean(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {}\n  ): Promise<boolean> {\n    const b = await AvroParser.readByte(stream, options);\n    if (b === 1) {\n      return true;\n    } else if (b === 0) {\n      return false;\n    } else {\n      throw new Error(\"Byte was not a boolean.\");\n    }\n  }\n\n  public static async readFloat(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {}\n  ): Promise<number> {\n    const u8arr = await AvroParser.readFixedBytes(stream, 4, options);\n    const view = new DataView(u8arr.buffer, u8arr.byteOffset, u8arr.byteLength);\n    return view.getFloat32(0, true); // littleEndian = true\n  }\n\n  public static async readDouble(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {}\n  ): Promise<number> {\n    const u8arr = await AvroParser.readFixedBytes(stream, 8, options);\n    const view = new DataView(u8arr.buffer, u8arr.byteOffset, u8arr.byteLength);\n    return view.getFloat64(0, true); // littleEndian = true\n  }\n\n  public static async readBytes(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {}\n  ): Promise<Uint8Array> {\n    const size = await AvroParser.readLong(stream, options);\n    if (size < 0) {\n      throw new Error(\"Bytes size was negative.\");\n    }\n\n    return stream.read(size, { abortSignal: options.abortSignal });\n  }\n\n  public static async readString(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {}\n  ): Promise<string> {\n    const u8arr = await AvroParser.readBytes(stream, options);\n    const utf8decoder = new TextDecoder();\n    return utf8decoder.decode(u8arr);\n  }\n\n  private static async readMapPair<T>(\n    stream: AvroReadable,\n    readItemMethod: (s: AvroReadable, options?: AvroParserReadOptions) => Promise<T>,\n    options: AvroParserReadOptions = {}\n  ): Promise<KeyValuePair<T>> {\n    const key = await AvroParser.readString(stream, options);\n    // FUTURE: this won't work with readFixed (currently not supported) which needs a length as the parameter.\n    const value = await readItemMethod(stream, options);\n    return { key, value };\n  }\n\n  public static async readMap<T>(\n    stream: AvroReadable,\n    readItemMethod: (s: AvroReadable, options?: AvroParserReadOptions) => Promise<T>,\n    options: AvroParserReadOptions = {}\n  ): Promise<Record<string, T>> {\n    const readPairMethod = (\n      s: AvroReadable,\n      opts: AvroParserReadOptions = {}\n    ): Promise<KeyValuePair<T>> => {\n      return AvroParser.readMapPair(s, readItemMethod, opts);\n    };\n\n    const pairs: KeyValuePair<T>[] = await AvroParser.readArray(stream, readPairMethod, options);\n\n    const dict: Record<string, T> = {};\n    for (const pair of pairs) {\n      dict[pair.key] = pair.value;\n    }\n    return dict;\n  }\n\n  private static async readArray<T>(\n    stream: AvroReadable,\n    readItemMethod: (s: AvroReadable, options?: AvroParserReadOptions) => Promise<T>,\n    options: AvroParserReadOptions = {}\n  ): Promise<T[]> {\n    const items: T[] = [];\n    for (\n      let count = await AvroParser.readLong(stream, options);\n      count !== 0;\n      count = await AvroParser.readLong(stream, options)\n    ) {\n      if (count < 0) {\n        // Ignore block sizes\n        await AvroParser.readLong(stream, options);\n        count = -count;\n      }\n\n      while (count--) {\n        const item: T = await readItemMethod(stream, options);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\n\ninterface RecordField {\n  name: string;\n  type: string | ObjectSchema | (string | ObjectSchema)[]; // Unions may not immediately contain other unions.\n}\n\nenum AvroComplex {\n  RECORD = \"record\",\n  ENUM = \"enum\",\n  ARRAY = \"array\",\n  MAP = \"map\",\n  UNION = \"union\",\n  FIXED = \"fixed\",\n}\n\ninterface ObjectSchema {\n  type: Exclude<AvroComplex, AvroComplex.UNION>;\n  name?: string;\n  aliases?: string;\n  fields?: RecordField[];\n  symbols?: string[];\n  values?: string;\n  size?: number;\n}\n\nenum AvroPrimitive {\n  NULL = \"null\",\n  BOOLEAN = \"boolean\",\n  INT = \"int\",\n  LONG = \"long\",\n  FLOAT = \"float\",\n  DOUBLE = \"double\",\n  BYTES = \"bytes\",\n  STRING = \"string\",\n}\n\nexport abstract class AvroType {\n  /**\n   * Reads an object from the stream.\n   */\n  public abstract read(\n    stream: AvroReadable,\n    options?: AvroParserReadOptions\n  ): Promise<Object | null>; // eslint-disable-line @typescript-eslint/ban-types\n\n  /**\n   * Determines the AvroType from the Avro Schema.\n   */\n  public static fromSchema(schema: string | Object): AvroType {\n    if (typeof schema === \"string\") {\n      return AvroType.fromStringSchema(schema);\n    } else if (Array.isArray(schema)) {\n      return AvroType.fromArraySchema(schema);\n    } else {\n      return AvroType.fromObjectSchema(schema as ObjectSchema);\n    }\n  }\n\n  private static fromStringSchema(schema: string): AvroType {\n    switch (schema) {\n      case AvroPrimitive.NULL:\n      case AvroPrimitive.BOOLEAN:\n      case AvroPrimitive.INT:\n      case AvroPrimitive.LONG:\n      case AvroPrimitive.FLOAT:\n      case AvroPrimitive.DOUBLE:\n      case AvroPrimitive.BYTES:\n      case AvroPrimitive.STRING:\n        return new AvroPrimitiveType(schema as AvroPrimitive);\n      default:\n        throw new Error(`Unexpected Avro type ${schema}`);\n    }\n  }\n\n  private static fromArraySchema(schema: any[]): AvroType {\n    return new AvroUnionType(schema.map(AvroType.fromSchema));\n  }\n\n  private static fromObjectSchema(schema: ObjectSchema): AvroType {\n    const type = schema.type;\n    // Primitives can be defined as strings or objects\n    try {\n      return AvroType.fromStringSchema(type);\n    } catch (err: any) {\n      // eslint-disable-line no-empty\n    }\n\n    switch (type) {\n      case AvroComplex.RECORD:\n        if (schema.aliases) {\n          throw new Error(`aliases currently is not supported, schema: ${schema}`);\n        }\n        if (!schema.name) {\n          throw new Error(`Required attribute 'name' doesn't exist on schema: ${schema}`);\n        }\n\n        // eslint-disable-next-line no-case-declarations\n        const fields: Record<string, AvroType> = {};\n        if (!schema.fields) {\n          throw new Error(`Required attribute 'fields' doesn't exist on schema: ${schema}`);\n        }\n        for (const field of schema.fields) {\n          fields[field.name] = AvroType.fromSchema(field.type);\n        }\n        return new AvroRecordType(fields, schema.name);\n      case AvroComplex.ENUM:\n        if (schema.aliases) {\n          throw new Error(`aliases currently is not supported, schema: ${schema}`);\n        }\n        if (!schema.symbols) {\n          throw new Error(`Required attribute 'symbols' doesn't exist on schema: ${schema}`);\n        }\n        return new AvroEnumType(schema.symbols);\n      case AvroComplex.MAP:\n        if (!schema.values) {\n          throw new Error(`Required attribute 'values' doesn't exist on schema: ${schema}`);\n        }\n        return new AvroMapType(AvroType.fromSchema(schema.values));\n      case AvroComplex.ARRAY: // Unused today\n      case AvroComplex.FIXED: // Unused today\n      default:\n        throw new Error(`Unexpected Avro type ${type} in ${schema}`);\n    }\n  }\n}\n\nclass AvroPrimitiveType extends AvroType {\n  private _primitive: AvroPrimitive;\n\n  constructor(primitive: AvroPrimitive) {\n    super();\n    this._primitive = primitive;\n  }\n\n  public read(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {}\n  ): Promise<Object | null> {\n    switch (this._primitive) {\n      case AvroPrimitive.NULL:\n        return AvroParser.readNull();\n      case AvroPrimitive.BOOLEAN:\n        return AvroParser.readBoolean(stream, options);\n      case AvroPrimitive.INT:\n        return AvroParser.readInt(stream, options);\n      case AvroPrimitive.LONG:\n        return AvroParser.readLong(stream, options);\n      case AvroPrimitive.FLOAT:\n        return AvroParser.readFloat(stream, options);\n      case AvroPrimitive.DOUBLE:\n        return AvroParser.readDouble(stream, options);\n      case AvroPrimitive.BYTES:\n        return AvroParser.readBytes(stream, options);\n      case AvroPrimitive.STRING:\n        return AvroParser.readString(stream, options);\n      default:\n        throw new Error(\"Unknown Avro Primitive\");\n    }\n  }\n}\n\nclass AvroEnumType extends AvroType {\n  private readonly _symbols: string[];\n\n  constructor(symbols: string[]) {\n    super();\n    this._symbols = symbols;\n  }\n\n  public async read(stream: AvroReadable, options: AvroParserReadOptions = {}): Promise<Object> {\n    const value = await AvroParser.readInt(stream, options);\n    return this._symbols[value];\n  }\n}\n\nclass AvroUnionType extends AvroType {\n  private readonly _types: AvroType[];\n\n  constructor(types: AvroType[]) {\n    super();\n    this._types = types;\n  }\n\n  public async read(\n    stream: AvroReadable,\n    options: AvroParserReadOptions = {}\n  ): Promise<Object | null> { // eslint-disable-line @typescript-eslint/ban-types\n    const typeIndex = await AvroParser.readInt(stream, options);\n    return this._types[typeIndex].read(stream, options);\n  }\n}\n\nclass AvroMapType extends AvroType {\n  private readonly _itemType: AvroType;\n\n  constructor(itemType: AvroType) {\n    super();\n    this._itemType = itemType;\n  }\n\n  public read(stream: AvroReadable, options: AvroParserReadOptions = {}): Promise<Object> {\n    const readItemMethod = (\n      s: AvroReadable,\n      opts?: AvroParserReadOptions\n    ): Promise<Object | null> => { \n      return this._itemType.read(s, opts);\n    };\n    return AvroParser.readMap(stream, readItemMethod, options);\n  }\n}\n\nclass AvroRecordType extends AvroType {\n  private readonly _name: string;\n  private readonly _fields: Record<string, AvroType>;\n\n  constructor(fields: Record<string, AvroType>, name: string) {\n    super();\n    this._fields = fields;\n    this._name = name;\n  }\n\n  public async read(stream: AvroReadable, options: AvroParserReadOptions = {}): Promise<Object> {\n    const record: Record<string, Object | null> = {};\n    record[\"$schema\"] = this._name;\n    for (const key in this._fields) {\n      if (Object.prototype.hasOwnProperty.call(this._fields, key)) {\n        record[key] = await this._fields[key].read(stream, options);\n      }\n    }\n    return record;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport interface KeyValuePair<T> {\n  key: string;\n  value: T;\n}\n\nexport function arraysEqual(a: Uint8Array, b: Uint8Array): boolean {\n  if (a === b) return true;\n  // eslint-disable-next-line eqeqeq\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// TODO: Do a review of non-interfaces\n/* eslint-disable @azure/azure-sdk/ts-use-interface-parameters */\n\nimport \"@azure/core-paging\";\nimport {\n  AVRO_CODEC_KEY,\n  AVRO_INIT_BYTES,\n  AVRO_SCHEMA_KEY,\n  AVRO_SYNC_MARKER_SIZE,\n} from \"./AvroConstants\";\nimport { AvroParser, AvroType } from \"./AvroParser\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { AvroReadable } from \"./AvroReadable\";\nimport { arraysEqual } from \"./utils/utils.common\";\n\n/**\n * Options to configure the {@link AvroReader.parseObjects} operation.\n */\nexport interface AvroParseOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\nexport class AvroReader {\n  private readonly _dataStream: AvroReadable;\n\n  private readonly _headerStream: AvroReadable;\n\n  private _syncMarker?: Uint8Array;\n\n  private _metadata?: Record<string, string>;\n\n  private _itemType?: AvroType;\n\n  private _itemsRemainingInBlock?: number;\n\n  // Remembers where we started if partial data stream was provided.\n  private readonly _initialBlockOffset: number;\n\n  /// The byte offset within the Avro file (both header and data)\n  /// of the start of the current block.\n  private _blockOffset: number;\n  public get blockOffset(): number {\n    return this._blockOffset;\n  }\n\n  private _objectIndex: number;\n  public get objectIndex(): number {\n    return this._objectIndex;\n  }\n\n  private _initialized: boolean;\n\n  constructor(dataStream: AvroReadable);\n\n  constructor(\n    dataStream: AvroReadable,\n    headerStream: AvroReadable,\n    currentBlockOffset: number,\n    indexWithinCurrentBlock: number\n  );\n\n  constructor(\n    dataStream: AvroReadable,\n    headerStream?: AvroReadable,\n    currentBlockOffset?: number,\n    indexWithinCurrentBlock?: number\n  ) {\n    this._dataStream = dataStream;\n    this._headerStream = headerStream || dataStream;\n    this._initialized = false;\n    this._blockOffset = currentBlockOffset || 0;\n    this._objectIndex = indexWithinCurrentBlock || 0;\n    this._initialBlockOffset = currentBlockOffset || 0;\n  }\n\n  private async initialize(options: AvroParseOptions = {}): Promise<void> {\n    const header = await AvroParser.readFixedBytes(this._headerStream, AVRO_INIT_BYTES.length, {\n      abortSignal: options.abortSignal,\n    });\n    if (!arraysEqual(header, AVRO_INIT_BYTES)) {\n      throw new Error(\"Stream is not an Avro file.\");\n    }\n\n    // File metadata is written as if defined by the following map schema:\n    // { \"type\": \"map\", \"values\": \"bytes\"}\n    this._metadata = await AvroParser.readMap(this._headerStream, AvroParser.readString, {\n      abortSignal: options.abortSignal,\n    });\n\n    // Validate codec\n    const codec = this._metadata![AVRO_CODEC_KEY];\n    if (!(codec === undefined || codec === null || codec === \"null\")) {\n      throw new Error(\"Codecs are not supported\");\n    }\n\n    // The 16-byte, randomly-generated sync marker for this file.\n    this._syncMarker = await AvroParser.readFixedBytes(this._headerStream, AVRO_SYNC_MARKER_SIZE, {\n      abortSignal: options.abortSignal,\n    });\n\n    // Parse the schema\n    const schema = JSON.parse(this._metadata![AVRO_SCHEMA_KEY]);\n    this._itemType = AvroType.fromSchema(schema);\n\n    if (this._blockOffset === 0) {\n      this._blockOffset = this._initialBlockOffset + this._dataStream.position;\n    }\n\n    this._itemsRemainingInBlock = await AvroParser.readLong(this._dataStream, {\n      abortSignal: options.abortSignal,\n    });\n    // skip block length\n    await AvroParser.readLong(this._dataStream, { abortSignal: options.abortSignal });\n\n    this._initialized = true;\n    if (this._objectIndex && this._objectIndex > 0) {\n      for (let i = 0; i < this._objectIndex; i++) {\n        await this._itemType.read(this._dataStream, { abortSignal: options.abortSignal });\n        this._itemsRemainingInBlock!--;\n      }\n    }\n  }\n\n  public hasNext(): boolean {\n    return !this._initialized || this._itemsRemainingInBlock! > 0;\n  }\n\n  public async *parseObjects(\n    options: AvroParseOptions = {}\n  ): AsyncIterableIterator<Record<string, any> | null> {\n    if (!this._initialized) {\n      await this.initialize(options);\n    }\n\n    while (this.hasNext()) {\n      const result = await this._itemType!.read(this._dataStream, {\n        abortSignal: options.abortSignal,\n      });\n\n      this._itemsRemainingInBlock!--;\n      this._objectIndex!++;\n\n      if (this._itemsRemainingInBlock === 0) {\n        const marker = await AvroParser.readFixedBytes(this._dataStream, AVRO_SYNC_MARKER_SIZE, {\n          abortSignal: options.abortSignal,\n        });\n\n        this._blockOffset = this._initialBlockOffset + this._dataStream.position;\n        this._objectIndex = 0;\n\n        if (!arraysEqual(this._syncMarker!, marker)) {\n          throw new Error(\"Stream is not a valid Avro file.\");\n        }\n\n        try {\n          this._itemsRemainingInBlock = await AvroParser.readLong(this._dataStream, {\n            abortSignal: options.abortSignal,\n          });\n        } catch (err: any) {\n          // We hit the end of the stream.\n          this._itemsRemainingInBlock = 0;\n        }\n\n        if (this._itemsRemainingInBlock! > 0) {\n          // Ignore block size\n          await AvroParser.readLong(this._dataStream, { abortSignal: options.abortSignal });\n        }\n      }\n      yield result;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\n\n/**\n * Options to configure the {@link AvroReadable.read} operation.\n */\nexport interface AvroReadableReadOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\nexport abstract class AvroReadable {\n  public abstract get position(): number;\n  public abstract read(size: number, options?: AvroReadableReadOptions): Promise<Uint8Array>;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AvroReadable, AvroReadableReadOptions } from \"./AvroReadable\";\nimport { AbortError } from \"@azure/abort-controller\";\n\nconst ABORT_ERROR = new AbortError(\"Reading from the avro stream was aborted.\");\n\nexport class AvroReadableFromStream extends AvroReadable {\n  private _position: number;\n  private _readable: NodeJS.ReadableStream;\n\n  private toUint8Array(data: string | Buffer): Uint8Array {\n    if (typeof data === \"string\") {\n      return Buffer.from(data);\n    }\n    return data;\n  }\n\n  constructor(readable: NodeJS.ReadableStream) {\n    super();\n    this._readable = readable;\n    this._position = 0;\n  }\n  public get position(): number {\n    return this._position;\n  }\n  public async read(size: number, options: AvroReadableReadOptions = {}): Promise<Uint8Array> {\n    if (options.abortSignal?.aborted) {\n      throw ABORT_ERROR;\n    }\n\n    if (size < 0) {\n      throw new Error(`size parameter should be positive: ${size}`);\n    }\n\n    if (size === 0) {\n      return new Uint8Array();\n    }\n\n    if (!this._readable.readable) {\n      throw new Error(\"Stream no longer readable.\");\n    }\n    // See if there is already enough data.\n    const chunk = this._readable.read(size);\n    if (chunk) {\n      this._position += chunk.length;\n      // chunk.length maybe less than desired size if the stream ends.\n      return this.toUint8Array(chunk);\n    } else {\n      // register callback to wait for enough data to read\n      return new Promise((resolve, reject) => {\n        /* eslint-disable @typescript-eslint/no-use-before-define */\n        const cleanUp: () => void = () => {\n          this._readable.removeListener(\"readable\", readableCallback);\n          this._readable.removeListener(\"error\", rejectCallback);\n          this._readable.removeListener(\"end\", rejectCallback);\n          this._readable.removeListener(\"close\", rejectCallback);\n\n          if (options.abortSignal) {\n            options.abortSignal!.removeEventListener(\"abort\", abortHandler);\n          }\n        };\n\n        const readableCallback: () => void = () => {\n          const callbackChunk = this._readable.read(size);\n          if (callbackChunk) {\n            this._position += callbackChunk.length;\n            cleanUp();\n            // callbackChunk.length maybe less than desired size if the stream ends.\n            resolve(this.toUint8Array(callbackChunk));\n          }\n        };\n\n        const rejectCallback: () => void = () => {\n          cleanUp();\n          reject();\n        };\n\n        const abortHandler: () => void = () => {\n          cleanUp();\n          reject(ABORT_ERROR);\n        };\n\n        this._readable.on(\"readable\", readableCallback);\n        this._readable.once(\"error\", rejectCallback);\n        this._readable.once(\"end\", rejectCallback);\n        this._readable.once(\"close\", rejectCallback);\n        if (options.abortSignal) {\n          options.abortSignal!.addEventListener(\"abort\", abortHandler);\n        }\n        /* eslint-enable @typescript-eslint/no-use-before-define */\n      });\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Readable } from \"stream\";\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { TransferProgressEvent } from \"@azure/core-http\";\n\nimport { AvroReadableFromStream, AvroReader } from \"../../../storage-internal-avro/src\";\nimport { BlobQueryError } from \"../Clients\";\n\nexport interface BlobQuickQueryStreamOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Read progress event handler\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback to receive error events during the query operaiton.\n   */\n  onError?: (error: BlobQueryError) => void;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * A Node.js BlobQuickQueryStream will internally parse avro data stream for blob query.\n */\nexport class BlobQuickQueryStream extends Readable {\n  private source: NodeJS.ReadableStream;\n  private avroReader: AvroReader;\n  private avroIter: AsyncIterableIterator<unknown | null>;\n  private avroPaused: boolean = true;\n  private onProgress?: (progress: TransferProgressEvent) => void;\n  private onError?: (error: BlobQueryError) => void;\n\n  /**\n   * Creates an instance of BlobQuickQueryStream.\n   *\n   * @param source - The current ReadableStream returned from getter\n   * @param options -\n   */\n  public constructor(source: NodeJS.ReadableStream, options: BlobQuickQueryStreamOptions = {}) {\n    super();\n    this.source = source;\n    this.onProgress = options.onProgress;\n    this.onError = options.onError;\n    this.avroReader = new AvroReader(new AvroReadableFromStream(this.source));\n    this.avroIter = this.avroReader.parseObjects({ abortSignal: options.abortSignal });\n  }\n\n  public _read(): void {\n    if (this.avroPaused) {\n      this.readInternal().catch((err) => {\n        this.emit(\"error\", err);\n      });\n    }\n  }\n\n  private async readInternal() {\n    this.avroPaused = false;\n    let avroNext;\n    do {\n      avroNext = await this.avroIter.next();\n      if (avroNext.done) {\n        break;\n      }\n      const obj = avroNext.value;\n      const schema = (obj as any).$schema;\n      if (typeof schema !== \"string\") {\n        throw Error(\"Missing schema in avro record.\");\n      }\n\n      switch (schema) {\n        case \"com.microsoft.azure.storage.queryBlobContents.resultData\":\n          {\n            const data = (obj as any).data;\n            if (data instanceof Uint8Array === false) {\n              throw Error(\"Invalid data in avro result record.\");\n            }\n            if (!this.push(Buffer.from(data))) {\n              this.avroPaused = true;\n            }\n          }\n          break;\n        case \"com.microsoft.azure.storage.queryBlobContents.progress\":\n          {\n            const bytesScanned = (obj as any).bytesScanned;\n            if (typeof bytesScanned !== \"number\") {\n              throw Error(\"Invalid bytesScanned in avro progress record.\");\n            }\n            if (this.onProgress) {\n              this.onProgress({ loadedBytes: bytesScanned });\n            }\n          }\n          break;\n        case \"com.microsoft.azure.storage.queryBlobContents.end\":\n          if (this.onProgress) {\n            const totalBytes = (obj as any).totalBytes;\n            if (typeof totalBytes !== \"number\") {\n              throw Error(\"Invalid totalBytes in avro end record.\");\n            }\n            this.onProgress({ loadedBytes: totalBytes });\n          }\n          this.push(null);\n          break;\n        case \"com.microsoft.azure.storage.queryBlobContents.error\":\n          if (this.onError) {\n            const fatal = (obj as any).fatal;\n            if (typeof fatal !== \"boolean\") {\n              throw Error(\"Invalid fatal in avro error record.\");\n            }\n            const name = (obj as any).name;\n            if (typeof name !== \"string\") {\n              throw Error(\"Invalid name in avro error record.\");\n            }\n            const description = (obj as any).description;\n            if (typeof description !== \"string\") {\n              throw Error(\"Invalid description in avro error record.\");\n            }\n            const position = (obj as any).position;\n            if (typeof position !== \"number\") {\n              throw Error(\"Invalid position in avro error record.\");\n            }\n            this.onError({\n              position,\n              name,\n              isFatal: fatal,\n              description,\n            });\n          }\n          break;\n        default:\n          throw Error(`Unknown schema ${schema} in avro progress record.`);\n      }\n    } while (!avroNext.done && !this.avroPaused);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpResponse, isNode } from \"@azure/core-http\";\n\nimport {\n  BlobDownloadResponseModel,\n  BlobType,\n  CopyStatusType,\n  LeaseDurationType,\n  LeaseStateType,\n  LeaseStatusType,\n  BlobDownloadHeaders,\n  BlobQueryResponseModel,\n} from \"./generatedModels\";\nimport { Metadata } from \"./models\";\nimport { BlobQuickQueryStream, BlobQuickQueryStreamOptions } from \"./utils/BlobQuickQueryStream\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobQueryResponse implements BlobDownloadResponseModel interface, and in Node.js runtime it will\n * parse avor data returned by blob query.\n */\nexport class BlobQueryResponse implements BlobDownloadResponseModel {\n  /**\n   * Indicates that the service supports\n   * requests for partial file content.\n   *\n   * @readonly\n   */\n  public get acceptRanges(): string | undefined {\n    return this.originalResponse.acceptRanges;\n  }\n\n  /**\n   * Returns if it was previously specified\n   * for the file.\n   *\n   * @readonly\n   */\n  public get cacheControl(): string | undefined {\n    return this.originalResponse.cacheControl;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the 'x-ms-content-disposition' header and specifies how to process the\n   * response.\n   *\n   * @readonly\n   */\n  public get contentDisposition(): string | undefined {\n    return this.originalResponse.contentDisposition;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Encoding request header.\n   *\n   * @readonly\n   */\n  public get contentEncoding(): string | undefined {\n    return this.originalResponse.contentEncoding;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Language request header.\n   *\n   * @readonly\n   */\n  public get contentLanguage(): string | undefined {\n    return this.originalResponse.contentLanguage;\n  }\n\n  /**\n   * The current sequence number for a\n   * page blob. This header is not returned for block blobs or append blobs.\n   *\n   * @readonly\n   */\n  public get blobSequenceNumber(): number | undefined {\n    return this.originalResponse.blobSequenceNumber;\n  }\n\n  /**\n   * The blob's type. Possible values include:\n   * 'BlockBlob', 'PageBlob', 'AppendBlob'.\n   *\n   * @readonly\n   */\n  public get blobType(): BlobType | undefined {\n    return this.originalResponse.blobType;\n  }\n\n  /**\n   * The number of bytes present in the\n   * response body.\n   *\n   * @readonly\n   */\n  public get contentLength(): number | undefined {\n    return this.originalResponse.contentLength;\n  }\n\n  /**\n   * If the file has an MD5 hash and the\n   * request is to read the full file, this response header is returned so that\n   * the client can check for message content integrity. If the request is to\n   * read a specified range and the 'x-ms-range-get-content-md5' is set to\n   * true, then the request returns an MD5 hash for the range, as long as the\n   * range size is less than or equal to 4 MB. If neither of these sets of\n   * conditions is true, then no value is returned for the 'Content-MD5'\n   * header.\n   *\n   * @readonly\n   */\n  public get contentMD5(): Uint8Array | undefined {\n    return this.originalResponse.contentMD5;\n  }\n\n  /**\n   * Indicates the range of bytes returned if\n   * the client requested a subset of the file by setting the Range request\n   * header.\n   *\n   * @readonly\n   */\n  public get contentRange(): string | undefined {\n    return this.originalResponse.contentRange;\n  }\n\n  /**\n   * The content type specified for the file.\n   * The default content type is 'application/octet-stream'\n   *\n   * @readonly\n   */\n  public get contentType(): string | undefined {\n    return this.originalResponse.contentType;\n  }\n\n  /**\n   * Conclusion time of the last attempted\n   * Copy File operation where this file was the destination file. This value\n   * can specify the time of a completed, aborted, or failed copy attempt.\n   *\n   * @readonly\n   */\n  public get copyCompletedOn(): Date | undefined {\n    return undefined;\n  }\n\n  /**\n   * String identifier for the last attempted Copy\n   * File operation where this file was the destination file.\n   *\n   * @readonly\n   */\n  public get copyId(): string | undefined {\n    return this.originalResponse.copyId;\n  }\n\n  /**\n   * Contains the number of bytes copied and\n   * the total bytes in the source in the last attempted Copy File operation\n   * where this file was the destination file. Can show between 0 and\n   * Content-Length bytes copied.\n   *\n   * @readonly\n   */\n  public get copyProgress(): string | undefined {\n    return this.originalResponse.copyProgress;\n  }\n\n  /**\n   * URL up to 2KB in length that specifies the\n   * source file used in the last attempted Copy File operation where this file\n   * was the destination file.\n   *\n   * @readonly\n   */\n  public get copySource(): string | undefined {\n    return this.originalResponse.copySource;\n  }\n\n  /**\n   * State of the copy operation\n   * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   *\n   * @readonly\n   */\n  public get copyStatus(): CopyStatusType | undefined {\n    return this.originalResponse.copyStatus;\n  }\n\n  /**\n   * Only appears when\n   * x-ms-copy-status is failed or pending. Describes cause of fatal or\n   * non-fatal copy operation failure.\n   *\n   * @readonly\n   */\n  public get copyStatusDescription(): string | undefined {\n    return this.originalResponse.copyStatusDescription;\n  }\n\n  /**\n   * When a blob is leased,\n   * specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'.\n   *\n   * @readonly\n   */\n  public get leaseDuration(): LeaseDurationType | undefined {\n    return this.originalResponse.leaseDuration;\n  }\n\n  /**\n   * Lease state of the blob. Possible\n   * values include: 'available', 'leased', 'expired', 'breaking', 'broken'.\n   *\n   * @readonly\n   */\n  public get leaseState(): LeaseStateType | undefined {\n    return this.originalResponse.leaseState;\n  }\n\n  /**\n   * The current lease status of the\n   * blob. Possible values include: 'locked', 'unlocked'.\n   *\n   * @readonly\n   */\n  public get leaseStatus(): LeaseStatusType | undefined {\n    return this.originalResponse.leaseStatus;\n  }\n\n  /**\n   * A UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated.\n   *\n   * @readonly\n   */\n  public get date(): Date | undefined {\n    return this.originalResponse.date;\n  }\n\n  /**\n   * The number of committed blocks\n   * present in the blob. This header is returned only for append blobs.\n   *\n   * @readonly\n   */\n  public get blobCommittedBlockCount(): number | undefined {\n    return this.originalResponse.blobCommittedBlockCount;\n  }\n\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally, in quotes.\n   *\n   * @readonly\n   */\n  public get etag(): string | undefined {\n    return this.originalResponse.etag;\n  }\n\n  /**\n   * The error code.\n   *\n   * @readonly\n   */\n  public get errorCode(): string | undefined {\n    return this.originalResponse.errorCode;\n  }\n\n  /**\n   * The value of this header is set to\n   * true if the file data and application metadata are completely encrypted\n   * using the specified algorithm. Otherwise, the value is set to false (when\n   * the file is unencrypted, or if only parts of the file/application metadata\n   * are encrypted).\n   *\n   * @readonly\n   */\n  public get isServerEncrypted(): boolean | undefined {\n    return this.originalResponse.isServerEncrypted;\n  }\n\n  /**\n   * If the blob has a MD5 hash, and if\n   * request contains range header (Range or x-ms-range), this response header\n   * is returned with the value of the whole blob's MD5 value. This value may\n   * or may not be equal to the value returned in Content-MD5 header, with the\n   * latter calculated from the requested range.\n   *\n   * @readonly\n   */\n  public get blobContentMD5(): Uint8Array | undefined {\n    return this.originalResponse.blobContentMD5;\n  }\n\n  /**\n   * Returns the date and time the file was last\n   * modified. Any operation that modifies the file or its properties updates\n   * the last modified time.\n   *\n   * @readonly\n   */\n  public get lastModified(): Date | undefined {\n    return this.originalResponse.lastModified;\n  }\n\n  /**\n   * A name-value pair\n   * to associate with a file storage object.\n   *\n   * @readonly\n   */\n  public get metadata(): Metadata | undefined {\n    return this.originalResponse.metadata;\n  }\n\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   *\n   * @readonly\n   */\n  public get requestId(): string | undefined {\n    return this.originalResponse.requestId;\n  }\n\n  /**\n   * If a client request id header is sent in the request, this header will be present in the\n   * response with the same value.\n   *\n   * @readonly\n   */\n  public get clientRequestId(): string | undefined {\n    return this.originalResponse.clientRequestId;\n  }\n\n  /**\n   * Indicates the version of the File service used\n   * to execute the request.\n   *\n   * @readonly\n   */\n  public get version(): string | undefined {\n    return this.originalResponse.version;\n  }\n\n  /**\n   * The SHA-256 hash of the encryption key used to encrypt the blob. This value is only returned\n   * when the blob was encrypted with a customer-provided key.\n   *\n   * @readonly\n   */\n  public get encryptionKeySha256(): string | undefined {\n    return this.originalResponse.encryptionKeySha256;\n  }\n\n  /**\n   * If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to\n   * true, then the request returns a crc64 for the range, as long as the range size is less than\n   * or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is\n   * specified in the same request, it will fail with 400(Bad Request)\n   */\n  public get contentCrc64(): Uint8Array | undefined {\n    return this.originalResponse.contentCrc64;\n  }\n\n  /**\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   *\n   * @readonly\n   */\n  public get blobBody(): Promise<Blob> | undefined {\n    return undefined;\n  }\n\n  /**\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   *\n   * It will parse avor data returned by blob query.\n   *\n   * @readonly\n   */\n  public get readableStreamBody(): NodeJS.ReadableStream | undefined {\n    return isNode ? this.blobDownloadStream : undefined;\n  }\n\n  /**\n   * The HTTP response.\n   */\n  public get _response(): HttpResponse & {\n    parsedHeaders: BlobDownloadHeaders;\n  } {\n    return this.originalResponse._response;\n  }\n\n  private originalResponse: BlobQueryResponseModel;\n  private blobDownloadStream?: BlobQuickQueryStream;\n\n  /**\n   * Creates an instance of BlobQueryResponse.\n   *\n   * @param originalResponse -\n   * @param options -\n   */\n  public constructor(\n    originalResponse: BlobQueryResponseModel,\n    options: BlobQuickQueryStreamOptions = {}\n  ) {\n    this.originalResponse = originalResponse;\n    this.blobDownloadStream = new BlobQuickQueryStream(\n      this.originalResponse.readableStreamBody!,\n      options\n    );\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  AppendBlobCreateOptionalParams,\n  AppendBlobCreateResponse,\n  AppendBlobAppendBlockOptionalParams,\n  AppendBlobAppendBlockResponse,\n  AppendBlobAppendBlockFromUrlOptionalParams,\n  AppendBlobAppendBlockFromUrlResponse,\n  AppendBlobSealOptionalParams,\n  AppendBlobSealResponse\n} from \"../models\";\n\n/** Class representing a AppendBlob. */\nexport class AppendBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class AppendBlob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Create Append Blob operation creates a new append blob.\n   * @param contentLength The length of the request.\n   * @param options The options parameters.\n   */\n  create(\n    contentLength: number,\n    options?: AppendBlobCreateOptionalParams\n  ): Promise<AppendBlobCreateResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      contentLength,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createOperationSpec\n    ) as Promise<AppendBlobCreateResponse>;\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob. The\n   * Append Block operation is permitted only if the blob was created with x-ms-blob-type set to\n   * AppendBlob. Append Block is supported only on version 2015-02-21 version or later.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  appendBlock(\n    contentLength: number,\n    body: coreHttp.HttpRequestBody,\n    options?: AppendBlobAppendBlockOptionalParams\n  ): Promise<AppendBlobAppendBlockResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      contentLength,\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      appendBlockOperationSpec\n    ) as Promise<AppendBlobAppendBlockResponse>;\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob where\n   * the contents are read from a source url. The Append Block operation is permitted only if the blob\n   * was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on version\n   * 2015-02-21 version or later.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param contentLength The length of the request.\n   * @param options The options parameters.\n   */\n  appendBlockFromUrl(\n    sourceUrl: string,\n    contentLength: number,\n    options?: AppendBlobAppendBlockFromUrlOptionalParams\n  ): Promise<AppendBlobAppendBlockFromUrlResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      sourceUrl,\n      contentLength,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      appendBlockFromUrlOperationSpec\n    ) as Promise<AppendBlobAppendBlockFromUrlResponse>;\n  }\n\n  /**\n   * The Seal operation seals the Append Blob to make it read-only. Seal is supported only on version\n   * 2019-12-12 version or later.\n   * @param options The options parameters.\n   */\n  seal(\n    options?: AppendBlobSealOptionalParams\n  ): Promise<AppendBlobSealResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      sealOperationSpec\n    ) as Promise<AppendBlobSealResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobCreateExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.blobType1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst appendBlockOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobAppendBlockExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp22],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n    Parameters.maxSize,\n    Parameters.appendPosition\n  ],\n  mediaType: \"binary\",\n  serializer\n};\nconst appendBlockFromUrlOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockFromUrlHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobAppendBlockFromUrlExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp22],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.transactionalContentMD5,\n    Parameters.sourceUrl,\n    Parameters.sourceContentCrc64,\n    Parameters.maxSize,\n    Parameters.appendPosition,\n    Parameters.sourceRange1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst sealOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.AppendBlobSealHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobSealExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp23],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.appendPosition\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  BlockBlobUploadOptionalParams,\n  BlockBlobUploadResponse,\n  BlockBlobPutBlobFromUrlOptionalParams,\n  BlockBlobPutBlobFromUrlResponse,\n  BlockBlobStageBlockOptionalParams,\n  BlockBlobStageBlockResponse,\n  BlockBlobStageBlockFromURLOptionalParams,\n  BlockBlobStageBlockFromURLResponse,\n  BlockLookupList,\n  BlockBlobCommitBlockListOptionalParams,\n  BlockBlobCommitBlockListResponse,\n  BlockListType,\n  BlockBlobGetBlockListOptionalParams,\n  BlockBlobGetBlockListResponse\n} from \"../models\";\n\n/** Class representing a BlockBlob. */\nexport class BlockBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class BlockBlob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Upload Block Blob operation updates the content of an existing block blob. Updating an existing\n   * block blob overwrites any existing metadata on the blob. Partial updates are not supported with Put\n   * Blob; the content of the existing blob is overwritten with the content of the new blob. To perform a\n   * partial update of the content of a block blob, use the Put Block List operation.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  upload(\n    contentLength: number,\n    body: coreHttp.HttpRequestBody,\n    options?: BlockBlobUploadOptionalParams\n  ): Promise<BlockBlobUploadResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      contentLength,\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      uploadOperationSpec\n    ) as Promise<BlockBlobUploadResponse>;\n  }\n\n  /**\n   * The Put Blob from URL operation creates a new Block Blob where the contents of the blob are read\n   * from a given URL.  This API is supported beginning with the 2020-04-08 version. Partial updates are\n   * not supported with Put Blob from URL; the content of an existing blob is overwritten with the\n   * content of the new blob.  To perform partial updates to a block blob’s contents using a source URL,\n   * use the Put Block from URL API in conjunction with Put Block List.\n   * @param contentLength The length of the request.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  putBlobFromUrl(\n    contentLength: number,\n    copySource: string,\n    options?: BlockBlobPutBlobFromUrlOptionalParams\n  ): Promise<BlockBlobPutBlobFromUrlResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      contentLength,\n      copySource,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      putBlobFromUrlOperationSpec\n    ) as Promise<BlockBlobPutBlobFromUrlResponse>;\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the string\n   *                must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n   *                for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  stageBlock(\n    blockId: string,\n    contentLength: number,\n    body: coreHttp.HttpRequestBody,\n    options?: BlockBlobStageBlockOptionalParams\n  ): Promise<BlockBlobStageBlockResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      blockId,\n      contentLength,\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      stageBlockOperationSpec\n    ) as Promise<BlockBlobStageBlockResponse>;\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob where the contents\n   * are read from a URL.\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the string\n   *                must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified\n   *                for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param options The options parameters.\n   */\n  stageBlockFromURL(\n    blockId: string,\n    contentLength: number,\n    sourceUrl: string,\n    options?: BlockBlobStageBlockFromURLOptionalParams\n  ): Promise<BlockBlobStageBlockFromURLResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      blockId,\n      contentLength,\n      sourceUrl,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      stageBlockFromURLOperationSpec\n    ) as Promise<BlockBlobStageBlockFromURLResponse>;\n  }\n\n  /**\n   * The Commit Block List operation writes a blob by specifying the list of block IDs that make up the\n   * blob. In order to be written as part of a blob, a block must have been successfully written to the\n   * server in a prior Put Block operation. You can call Put Block List to update a blob by uploading\n   * only those blocks that have changed, then committing the new and existing blocks together. You can\n   * do this by specifying whether to commit a block from the committed block list or from the\n   * uncommitted block list, or to commit the most recently uploaded version of the block, whichever list\n   * it may belong to.\n   * @param blocks Blob Blocks.\n   * @param options The options parameters.\n   */\n  commitBlockList(\n    blocks: BlockLookupList,\n    options?: BlockBlobCommitBlockListOptionalParams\n  ): Promise<BlockBlobCommitBlockListResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      blocks,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      commitBlockListOperationSpec\n    ) as Promise<BlockBlobCommitBlockListResponse>;\n  }\n\n  /**\n   * The Get Block List operation retrieves the list of blocks that have been uploaded as part of a block\n   * blob\n   * @param listType Specifies whether to return the list of committed blocks, the list of uncommitted\n   *                 blocks, or both lists together.\n   * @param options The options parameters.\n   */\n  getBlockList(\n    listType: BlockListType,\n    options?: BlockBlobGetBlockListOptionalParams\n  ): Promise<BlockBlobGetBlockListResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      listType,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getBlockListOperationSpec\n    ) as Promise<BlockBlobGetBlockListResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst uploadOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobUploadHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobUploadExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.transactionalContentMD5,\n    Parameters.contentType1,\n    Parameters.accept2,\n    Parameters.blobType2\n  ],\n  mediaType: \"binary\",\n  serializer\n};\nconst putBlobFromUrlOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobPutBlobFromUrlHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobPutBlobFromUrlExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceIfTags,\n    Parameters.copySource,\n    Parameters.blobTagsString,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.copySourceTags,\n    Parameters.transactionalContentMD5,\n    Parameters.blobType2,\n    Parameters.copySourceBlobProperties\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst stageBlockOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobStageBlockExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp24,\n    Parameters.blockId\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.encryptionScope,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2\n  ],\n  mediaType: \"binary\",\n  serializer\n};\nconst stageBlockFromURLOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobStageBlockFromURLExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp24,\n    Parameters.blockId\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.encryptionScope,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.sourceUrl,\n    Parameters.sourceContentCrc64,\n    Parameters.sourceRange1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst commitBlockListOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobCommitBlockListHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobCommitBlockListExceptionHeaders\n    }\n  },\n  requestBody: Parameters.blocks,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp25],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\nconst getBlockListOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlockList,\n      headersMapper: Mappers.BlockBlobGetBlockListHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobGetBlockListExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.snapshot,\n    Parameters.comp25,\n    Parameters.listType\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifTags\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  PageBlobCreateOptionalParams,\n  PageBlobCreateResponse,\n  PageBlobUploadPagesOptionalParams,\n  PageBlobUploadPagesResponse,\n  PageBlobClearPagesOptionalParams,\n  PageBlobClearPagesResponse,\n  PageBlobUploadPagesFromURLOptionalParams,\n  PageBlobUploadPagesFromURLResponse,\n  PageBlobGetPageRangesOptionalParams,\n  PageBlobGetPageRangesResponse,\n  PageBlobGetPageRangesDiffOptionalParams,\n  PageBlobGetPageRangesDiffResponse,\n  PageBlobResizeOptionalParams,\n  PageBlobResizeResponse,\n  SequenceNumberActionType,\n  PageBlobUpdateSequenceNumberOptionalParams,\n  PageBlobUpdateSequenceNumberResponse,\n  PageBlobCopyIncrementalOptionalParams,\n  PageBlobCopyIncrementalResponse\n} from \"../models\";\n\n/** Class representing a PageBlob. */\nexport class PageBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class PageBlob class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Create operation creates a new page blob.\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The\n   *                          page blob size must be aligned to a 512-byte boundary.\n   * @param options The options parameters.\n   */\n  create(\n    contentLength: number,\n    blobContentLength: number,\n    options?: PageBlobCreateOptionalParams\n  ): Promise<PageBlobCreateResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      contentLength,\n      blobContentLength,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createOperationSpec\n    ) as Promise<PageBlobCreateResponse>;\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The options parameters.\n   */\n  uploadPages(\n    contentLength: number,\n    body: coreHttp.HttpRequestBody,\n    options?: PageBlobUploadPagesOptionalParams\n  ): Promise<PageBlobUploadPagesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      contentLength,\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      uploadPagesOperationSpec\n    ) as Promise<PageBlobUploadPagesResponse>;\n  }\n\n  /**\n   * The Clear Pages operation clears a set of pages from a page blob\n   * @param contentLength The length of the request.\n   * @param options The options parameters.\n   */\n  clearPages(\n    contentLength: number,\n    options?: PageBlobClearPagesOptionalParams\n  ): Promise<PageBlobClearPagesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      contentLength,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      clearPagesOperationSpec\n    ) as Promise<PageBlobClearPagesResponse>;\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the contents are read from a\n   * URL\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   *                    match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be 512\n   *              aligned and range-end is required.\n   * @param options The options parameters.\n   */\n  uploadPagesFromURL(\n    sourceUrl: string,\n    sourceRange: string,\n    contentLength: number,\n    range: string,\n    options?: PageBlobUploadPagesFromURLOptionalParams\n  ): Promise<PageBlobUploadPagesFromURLResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      sourceUrl,\n      sourceRange,\n      contentLength,\n      range,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      uploadPagesFromURLOperationSpec\n    ) as Promise<PageBlobUploadPagesFromURLResponse>;\n  }\n\n  /**\n   * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot of a\n   * page blob\n   * @param options The options parameters.\n   */\n  getPageRanges(\n    options?: PageBlobGetPageRangesOptionalParams\n  ): Promise<PageBlobGetPageRangesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPageRangesOperationSpec\n    ) as Promise<PageBlobGetPageRangesResponse>;\n  }\n\n  /**\n   * The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob that were\n   * changed between target blob and previous snapshot.\n   * @param options The options parameters.\n   */\n  getPageRangesDiff(\n    options?: PageBlobGetPageRangesDiffOptionalParams\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPageRangesDiffOperationSpec\n    ) as Promise<PageBlobGetPageRangesDiffResponse>;\n  }\n\n  /**\n   * Resize the Blob\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB. The\n   *                          page blob size must be aligned to a 512-byte boundary.\n   * @param options The options parameters.\n   */\n  resize(\n    blobContentLength: number,\n    options?: PageBlobResizeOptionalParams\n  ): Promise<PageBlobResizeResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      blobContentLength,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      resizeOperationSpec\n    ) as Promise<PageBlobResizeResponse>;\n  }\n\n  /**\n   * Update the sequence number of the blob\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the request.\n   *                             This property applies to page blobs only. This property indicates how the service should modify the\n   *                             blob's sequence number\n   * @param options The options parameters.\n   */\n  updateSequenceNumber(\n    sequenceNumberAction: SequenceNumberActionType,\n    options?: PageBlobUpdateSequenceNumberOptionalParams\n  ): Promise<PageBlobUpdateSequenceNumberResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      sequenceNumberAction,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      updateSequenceNumberOperationSpec\n    ) as Promise<PageBlobUpdateSequenceNumberResponse>;\n  }\n\n  /**\n   * The Copy Incremental operation copies a snapshot of the source page blob to a destination page blob.\n   * The snapshot is copied such that only the differential changes between the previously copied\n   * snapshot are transferred to the destination. The copied snapshots are complete copies of the\n   * original snapshot and can be read or copied from as usual. This API is supported since REST version\n   * 2016-05-31.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up to\n   *                   2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would\n   *                   appear in a request URI. The source blob must either be public or must be authenticated via a shared\n   *                   access signature.\n   * @param options The options parameters.\n   */\n  copyIncremental(\n    copySource: string,\n    options?: PageBlobCopyIncrementalOptionalParams\n  ): Promise<PageBlobCopyIncrementalResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      copySource,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      copyIncrementalOperationSpec\n    ) as Promise<PageBlobCopyIncrementalResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobCreateExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.immutabilityPolicyExpiry,\n    Parameters.immutabilityPolicyMode,\n    Parameters.encryptionScope,\n    Parameters.tier,\n    Parameters.blobTagsString,\n    Parameters.legalHold1,\n    Parameters.blobType,\n    Parameters.blobContentLength,\n    Parameters.blobSequenceNumber\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst uploadPagesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUploadPagesExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.contentType1,\n    Parameters.accept2,\n    Parameters.pageWrite,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo\n  ],\n  mediaType: \"binary\",\n  serializer\n};\nconst clearPagesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobClearPagesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobClearPagesExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.pageWrite1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst uploadPagesFromURLOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUploadPagesFromURLExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp19],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.contentLength,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceContentMD5,\n    Parameters.copySourceAuthorization,\n    Parameters.pageWrite,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.sourceUrl,\n    Parameters.sourceRange,\n    Parameters.sourceContentCrc64,\n    Parameters.range1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getPageRangesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobGetPageRangesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.snapshot,\n    Parameters.comp20\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getPageRangesDiffOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxPageSize,\n    Parameters.snapshot,\n    Parameters.comp20,\n    Parameters.prevsnapshot\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.range,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.prevSnapshotUrl\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst resizeOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobResizeHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobResizeExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.encryptionScope,\n    Parameters.blobContentLength\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst updateSequenceNumberOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.blobSequenceNumber,\n    Parameters.sequenceNumberAction\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst copyIncrementalOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{containerName}/{blob}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.PageBlobCopyIncrementalHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobCopyIncrementalExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp21],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.accept1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifTags,\n    Parameters.copySource\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { CancelOnProgress, PollOperationState } from \"@azure/core-lro\";\nimport { BlobImmutabilityPolicyMode } from \"./generatedModels\";\nimport {\n  LeaseAccessConditions,\n  SequenceNumberAccessConditions,\n  AppendPositionAccessConditions,\n  AccessTier,\n  CpkInfo,\n  BlobDownloadResponseModel,\n} from \"./generatedModels\";\nimport { EncryptionAlgorithmAES25 } from \"./utils/constants\";\n\n/**\n * Blob tags.\n */\nexport type Tags = Record<string, string>;\n\n/**\n * A map of name-value pairs to associate with the resource.\n */\nexport interface Metadata {\n  /**\n   * A name-value pair.\n   */\n  [propertyName: string]: string;\n}\n\n/**\n * standard HTTP conditional headers and tags condition.\n */\nexport interface ModifiedAccessConditions\n  extends MatchConditions,\n    ModificationConditions,\n    TagConditions {}\n\n/**\n * standard HTTP conditional headers, tags condition and lease condition\n */\nexport interface BlobRequestConditions extends ModifiedAccessConditions, LeaseAccessConditions {}\n\n/**\n * Conditions to add to the creation of this page blob.\n */\nexport interface PageBlobRequestConditions\n  extends BlobRequestConditions,\n    SequenceNumberAccessConditions {}\n\n/**\n * Conditions to add to the creation of this append blob.\n */\nexport interface AppendBlobRequestConditions\n  extends BlobRequestConditions,\n    AppendPositionAccessConditions {}\n\n/**\n * Specifies HTTP options for conditional requests based on modification time.\n */\nexport interface ModificationConditions {\n  /**\n   * Specify this header value to operate only on a blob if it has been modified since the\n   * specified date/time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * Specify this header value to operate only on a blob if it has not been modified since the\n   * specified date/time.\n   */\n  ifUnmodifiedSince?: Date;\n}\n\n/**\n * Specifies HTTP options for conditional requests based on ETag matching.\n */\nexport interface MatchConditions {\n  /**\n   * Specify an ETag value to operate only on blobs with a matching value.\n   */\n  ifMatch?: string;\n  /**\n   * Specify an ETag value to operate only on blobs without a matching value.\n   */\n  ifNoneMatch?: string;\n}\n\n/**\n * Specifies HTTP options for conditional requests based on blob tags.\n */\nexport interface TagConditions {\n  /**\n   * Optional SQL statement to apply to the tags of the blob.\n   */\n  tagConditions?: string;\n}\n\n/**\n * Conditions to meet for the container.\n */\nexport interface ContainerRequestConditions extends LeaseAccessConditions, ModificationConditions {}\n\n/**\n * Represents the access tier on a blob.\n * For detailed information about block blob level tiering see {@link https://docs.microsoft.com/azure/storage/blobs/storage-blob-storage-tiers|Hot, cool and archive storage tiers.}\n */\nexport enum BlockBlobTier {\n  /**\n   * Optimized for storing data that is accessed frequently.\n   */\n  Hot = \"Hot\",\n  /**\n   * Optimized for storing data that is infrequently accessed and stored for at least 30 days.\n   */\n  Cool = \"Cool\",\n  /**\n   * Optimized for storing data that is rarely accessed and stored for at least 180 days\n   * with flexible latency requirements (on the order of hours).\n   */\n  Archive = \"Archive\",\n}\n\n/**\n * Specifies the page blob tier to set the blob to. This is only applicable to page blobs on premium storage accounts.\n * Please see {@link https://docs.microsoft.com/azure/storage/storage-premium-storage#scalability-and-performance-targets|here}\n * for detailed information on the corresponding IOPS and throughput per PageBlobTier.\n */\nexport enum PremiumPageBlobTier {\n  /**\n   * P4 Tier.\n   */\n  P4 = \"P4\",\n  /**\n   * P6 Tier.\n   */\n  P6 = \"P6\",\n  /**\n   * P10 Tier.\n   */\n  P10 = \"P10\",\n  /**\n   * P15 Tier.\n   */\n  P15 = \"P15\",\n  /**\n   * P20 Tier.\n   */\n  P20 = \"P20\",\n  /**\n   * P30 Tier.\n   */\n  P30 = \"P30\",\n  /**\n   * P40 Tier.\n   */\n  P40 = \"P40\",\n  /**\n   * P50 Tier.\n   */\n  P50 = \"P50\",\n  /**\n   * P60 Tier.\n   */\n  P60 = \"P60\",\n  /**\n   * P70 Tier.\n   */\n  P70 = \"P70\",\n  /**\n   * P80 Tier.\n   */\n  P80 = \"P80\",\n}\n\nexport function toAccessTier(\n  tier: BlockBlobTier | PremiumPageBlobTier | string | undefined\n): AccessTier | undefined {\n  if (tier === undefined) {\n    return undefined;\n  }\n\n  return tier as AccessTier; // No more check if string is a valid AccessTier, and left this to underlay logic to decide(service).\n}\n\nexport function ensureCpkIfSpecified(cpk: CpkInfo | undefined, isHttps: boolean): void {\n  if (cpk && !isHttps) {\n    throw new RangeError(\"Customer-provided encryption key must be used over HTTPS.\");\n  }\n\n  if (cpk && !cpk.encryptionAlgorithm) {\n    cpk.encryptionAlgorithm = EncryptionAlgorithmAES25;\n  }\n}\n\n/**\n * Specifies the Replication Status of a blob. This is used when a storage account has\n * Object Replication Policy(s) applied. See {@link ObjectReplicationPolicy} and {@link ObjectReplicationRule}.\n */\nexport type ObjectReplicationStatus = \"complete\" | \"failed\";\n\n/**\n * Contains the Object Replication Rule ID and {@link ObjectReplicationStatus} of a blob.\n * There can be more than one {@link ObjectReplicationRule} under a {@link ObjectReplicationPolicy}.\n */\nexport interface ObjectReplicationRule {\n  /**\n   * The Object Replication Rule ID.\n   */\n  ruleId: string;\n\n  /**\n   * The Replication Status\n   */\n  replicationStatus: ObjectReplicationStatus;\n}\n\n/**\n * Contains Object Replication Policy ID and the respective list of {@link ObjectReplicationRule}.\n * This is used when retrieving the Object Replication Properties on the source blob. The policy id for the\n * destination blob is set in ObjectReplicationDestinationPolicyId of the respective method responses\n * (e.g. {@link BlobProperties.ObjectReplicationDestinationPolicyId}.\n */\nexport interface ObjectReplicationPolicy {\n  /**\n   * The Object Replication Policy ID.\n   */\n  policyId: string;\n\n  /**\n   * The Rule ID(s) and respective Replication Status(s) that are under the Policy ID.\n   */\n  rules: ObjectReplicationRule[];\n}\n\n/**\n * Contains response data for the {@link BlobClient.download} operation.\n */\nexport interface BlobDownloadResponseParsed extends BlobDownloadResponseModel {\n  /**\n   * Parsed Object Replication Policy Id, Rule Id(s) and status of the source blob.\n   */\n  objectReplicationSourceProperties?: ObjectReplicationPolicy[];\n\n  /**\n   * Object Replication Policy Id of the destination blob.\n   */\n  objectReplicationDestinationPolicyId?: string;\n}\n\n/**\n * The type of a {@link BlobQueryArrowField}.\n */\nexport type BlobQueryArrowFieldType =\n  | \"int64\"\n  | \"bool\"\n  | \"timestamp[ms]\"\n  | \"string\"\n  | \"double\"\n  | \"decimal\";\n\n/**\n * Describe a field in {@link BlobQueryArrowConfiguration}.\n */\nexport interface BlobQueryArrowField {\n  /**\n   * The type of the field.\n   */\n  type: BlobQueryArrowFieldType;\n\n  /**\n   * The name of the field.\n   */\n  name?: string;\n\n  /**\n   * The precision of the field. Required if type is \"decimal\".\n   */\n  precision?: number;\n\n  /**\n   * The scale of the field.  Required if type is is \"decimal\".\n   */\n  scale?: number;\n}\n\n/**\n * Describe immutable policy for blob.\n */\nexport interface BlobImmutabilityPolicy {\n  /**\n   * Specifies the date time when the blobs immutability policy is set to expire.\n   */\n  expiriesOn?: Date;\n  /**\n   * Specifies the immutability policy mode to set on the blob.\n   */\n  policyMode?: BlobImmutabilityPolicyMode;\n}\n\n/**\n * Represents authentication information in Authorization, ProxyAuthorization,\n * WWW-Authenticate, and Proxy-Authenticate header values.\n */\nexport interface HttpAuthorization {\n  /**\n   * The scheme to use for authorization.\n   */\n  scheme: string;\n\n  /**\n   * the credentials containing the authentication information of the user agent for the resource being requested.\n   */\n  value: string;\n}\n\n/**\n * Defines the known cloud audiences for Storage.\n */\nexport enum StorageBlobAudience {\n  /**\n   * The OAuth scope to use to retrieve an AAD token for Azure Storage.\n   */\n  StorageOAuthScopes = \"https://storage.azure.com/.default\",\n  /**\n   * The OAuth scope to use to retrieve an AAD token for Azure Disk.\n   */\n  DiskComputeOAuthScopes = \"https://disk.compute.azure.com/.default\",\n}\n\n/**\n * Abstract representation of a poller, intended to expose just the minimal API that the user needs to work with.\n */\nexport interface PollerLikeWithCancellation<TState extends PollOperationState<TResult>, TResult> {\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   */\n  poll(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  pollUntilDone(): Promise<TResult>;\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  onProgress(callback: (state: TState) => void): CancelOnProgress;\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  isDone(): boolean;\n  /**\n   * Stops the poller. After this, no manual or automated requests can be sent.\n   */\n  stopPolling(): void;\n  /**\n   * Returns true if the poller is stopped.\n   */\n  isStopped(): boolean;\n  /**\n   * Attempts to cancel the underlying operation.\n   */\n  cancelOperation(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns the state of the operation.\n   * The TState defined in PollerLike can be a subset of the TState defined in\n   * the Poller implementation.\n   */\n  getOperationState(): TState;\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  getResult(): TResult | undefined;\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  toString(): string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpResponse } from \"@azure/core-http\";\nimport {\n  PageBlobGetPageRangesHeaders,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesResponseModel,\n  PageBlobGetPageRangesDiffResponseModel,\n} from \"./generatedModels\";\nimport { Range } from \"./Range\";\n\n/**\n * List of page ranges for a blob.\n */\nexport interface PageList {\n  /**\n   * Valid non-overlapping page ranges.\n   */\n  pageRange?: Range[];\n  /**\n   * Present if the prevSnapshot parameter was specified and there were cleared\n   * pages between the previous snapshot and the target snapshot.\n   */\n  clearRange?: Range[];\n}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRanges} operation.\n */\nexport interface PageBlobGetPageRangesResponse extends PageList, PageBlobGetPageRangesHeaders {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: PageBlobGetPageRangesHeaders;\n\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: PageList;\n  };\n}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRangesDiff} operation.\n */\nexport interface PageBlobGetPageRangesDiffResponse\n  extends PageList,\n    PageBlobGetPageRangesDiffHeaders {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: PageBlobGetPageRangesDiffHeaders;\n\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: PageList;\n  };\n}\n\n/**\n * Function that converts PageRange and ClearRange to a common Range object.\n * PageRange and ClearRange have start and end while Range offset and count\n * this function normalizes to Range.\n * @param response - Model PageBlob Range response\n */\nexport function rangeResponseFromModel(\n  response: PageBlobGetPageRangesResponseModel | PageBlobGetPageRangesDiffResponseModel\n): PageBlobGetPageRangesResponse | PageBlobGetPageRangesDiffResponse {\n  const pageRange = (response._response.parsedBody.pageRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start,\n  }));\n\n  const clearRange = (response._response.parsedBody.clearRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start,\n  }));\n\n  return {\n    ...response,\n    pageRange,\n    clearRange,\n    _response: {\n      ...response._response,\n      parsedBody: {\n        pageRange,\n        clearRange,\n      },\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PollOperation, PollOperationState } from \"./pollOperation\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { CancelOnProgress } from \"../poller/models\";\nimport { PollerLike } from \"./models\";\n\n/**\n * PollProgressCallback<TState> is the type of the callback functions sent to onProgress.\n * These functions will receive a TState that is defined by your implementation of\n * the Poller class.\n */\nexport type PollProgressCallback<TState> = (state: TState) => void;\n\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nexport class PollerStoppedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerStoppedError\";\n    Object.setPrototypeOf(this, PollerStoppedError.prototype);\n  }\n}\n\n/**\n * When the operation is cancelled, the poller will be rejected with an instance\n * of the PollerCancelledError.\n */\nexport class PollerCancelledError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerCancelledError\";\n    Object.setPrototypeOf(this, PollerCancelledError.prototype);\n  }\n}\n\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\n// eslint-disable-next-line no-use-before-define\nexport abstract class Poller<TState extends PollOperationState<TResult>, TResult>\n  implements PollerLike<TState, TResult>\n{\n  /** controls whether to throw an error if the operation failed or was canceled. */\n  protected resolveOnUnsuccessful: boolean = false;\n  private stopped: boolean = true;\n  private resolve?: (value: TResult) => void;\n  private reject?: (error: PollerStoppedError | PollerCancelledError | Error) => void;\n  private pollOncePromise?: Promise<void>;\n  private cancelPromise?: Promise<void>;\n  private promise: Promise<TResult>;\n  private pollProgressCallbacks: PollProgressCallback<TState>[] = [];\n\n  /**\n   * The poller's operation is available in full to any of the methods of the Poller class\n   * and any class extending the Poller class.\n   */\n  protected operation: PollOperation<TState, TResult>;\n\n  /**\n   * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.\n   *\n   * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n   * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n   * operation has already been defined, at least its basic properties. The code below shows how to approach\n   * the definition of the constructor of a new custom poller.\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor({\n   *     // Anything you might need outside of the basics\n   *   }) {\n   *     let state: MyOperationState = {\n   *       privateProperty: private,\n   *       publicProperty: public,\n   *     };\n   *\n   *     const operation = {\n   *       state,\n   *       update,\n   *       cancel,\n   *       toString\n   *     }\n   *\n   *     // Sending the operation to the parent's constructor.\n   *     super(operation);\n   *\n   *     // You can assign more local properties here.\n   *   }\n   * }\n   * ```\n   *\n   * Inside of this constructor, a new promise is created. This will be used to\n   * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n   * resolve and reject methods are also used internally to control when to resolve\n   * or reject anyone waiting for the poller to finish.\n   *\n   * The constructor of a custom implementation of a poller is where any serialized version of\n   * a previous poller's operation should be deserialized into the operation sent to the\n   * base constructor. For example:\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor(\n   *     baseOperation: string | undefined\n   *   ) {\n   *     let state: MyOperationState = {};\n   *     if (baseOperation) {\n   *       state = {\n   *         ...JSON.parse(baseOperation).state,\n   *         ...state\n   *       };\n   *     }\n   *     const operation = {\n   *       state,\n   *       // ...\n   *     }\n   *     super(operation);\n   *   }\n   * }\n   * ```\n   *\n   * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.\n   */\n  constructor(operation: PollOperation<TState, TResult>) {\n    this.operation = operation;\n    this.promise = new Promise<TResult>(\n      (\n        resolve: (result: TResult) => void,\n        reject: (error: PollerStoppedError | PollerCancelledError | Error) => void\n      ) => {\n        this.resolve = resolve;\n        this.reject = reject;\n      }\n    );\n    // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n    // The above warning would get thrown if `poller.poll` is called, it returns an error,\n    // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n    this.promise.catch(() => {\n      /* intentionally blank */\n    });\n  }\n\n  /**\n   * Defines how much to wait between each poll request.\n   * This has to be implemented by your custom poller.\n   *\n   * \\@azure/core-util has a simple implementation of a delay function that waits as many milliseconds as specified.\n   * This can be used as follows:\n   *\n   * ```ts\n   * import { delay } from \"@azure/core-util\";\n   *\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   // The other necessary definitions.\n   *\n   *   async delay(): Promise<void> {\n   *     const milliseconds = 1000;\n   *     return delay(milliseconds);\n   *   }\n   * }\n   * ```\n   *\n   */\n  protected abstract delay(): Promise<void>;\n\n  /**\n   * Starts a loop that will break only if the poller is done\n   * or if the poller is stopped.\n   */\n  private async startPolling(pollOptions: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (this.stopped) {\n      this.stopped = false;\n    }\n    while (!this.isStopped() && !this.isDone()) {\n      await this.poll(pollOptions);\n      await this.delay();\n    }\n  }\n\n  /**\n   * pollOnce does one polling, by calling to the update method of the underlying\n   * poll operation to make any relevant change effective.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  private async pollOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.isDone()) {\n      this.operation = await this.operation.update({\n        abortSignal: options.abortSignal,\n        fireProgress: this.fireProgress.bind(this),\n      });\n    }\n    this.processUpdatedState();\n  }\n\n  /**\n   * fireProgress calls the functions passed in via onProgress the method of the poller.\n   *\n   * It loops over all of the callbacks received from onProgress, and executes them, sending them\n   * the current operation state.\n   *\n   * @param state - The current operation state.\n   */\n  private fireProgress(state: TState): void {\n    for (const callback of this.pollProgressCallbacks) {\n      callback(state);\n    }\n  }\n\n  /**\n   * Invokes the underlying operation's cancel method.\n   */\n  private async cancelOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    this.operation = await this.operation.cancel(options);\n  }\n\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public poll(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.pollOncePromise) {\n      this.pollOncePromise = this.pollOnce(options);\n      const clearPollOncePromise = (): void => {\n        this.pollOncePromise = undefined;\n      };\n      this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise).catch(this.reject);\n    }\n    return this.pollOncePromise;\n  }\n\n  private processUpdatedState(): void {\n    if (this.operation.state.error) {\n      this.stopped = true;\n      if (!this.resolveOnUnsuccessful) {\n        this.reject!(this.operation.state.error);\n        throw this.operation.state.error;\n      }\n    }\n    if (this.operation.state.isCancelled) {\n      this.stopped = true;\n      if (!this.resolveOnUnsuccessful) {\n        const error = new PollerCancelledError(\"Operation was canceled\");\n        this.reject!(error);\n        throw error;\n      }\n    }\n    if (this.isDone() && this.resolve) {\n      // If the poller has finished polling, this means we now have a result.\n      // However, it can be the case that TResult is instantiated to void, so\n      // we are not expecting a result anyway. To assert that we might not\n      // have a result eventually after finishing polling, we cast the result\n      // to TResult.\n      this.resolve(this.getResult() as TResult);\n    }\n  }\n\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  public async pollUntilDone(\n    pollOptions: { abortSignal?: AbortSignalLike } = {}\n  ): Promise<TResult> {\n    if (this.stopped) {\n      this.startPolling(pollOptions).catch(this.reject);\n    }\n    // This is needed because the state could have been updated by\n    // `cancelOperation`, e.g. the operation is canceled or an error occurred.\n    this.processUpdatedState();\n    return this.promise;\n  }\n\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  public onProgress(callback: (state: TState) => void): CancelOnProgress {\n    this.pollProgressCallbacks.push(callback);\n    return (): void => {\n      this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n    };\n  }\n\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  public isDone(): boolean {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return Boolean(state.isCompleted || state.isCancelled || state.error);\n  }\n\n  /**\n   * Stops the poller from continuing to poll.\n   */\n  public stopPolling(): void {\n    if (!this.stopped) {\n      this.stopped = true;\n      if (this.reject) {\n        this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n      }\n    }\n  }\n\n  /**\n   * Returns true if the poller is stopped.\n   */\n  public isStopped(): boolean {\n    return this.stopped;\n  }\n\n  /**\n   * Attempts to cancel the underlying operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * If it's called again before it finishes, it will throw an error.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public cancelOperation(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.cancelPromise) {\n      this.cancelPromise = this.cancelOnce(options);\n    } else if (options.abortSignal) {\n      throw new Error(\"A cancel request is currently pending\");\n    }\n    return this.cancelPromise;\n  }\n\n  /**\n   * Returns the state of the operation.\n   *\n   * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n   * implementations of the pollers can customize what's shared with the public by writing their own\n   * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n   * and a public type representing a safe to share subset of the properties of the internal state.\n   * Their definition of getOperationState can then return their public type.\n   *\n   * Example:\n   *\n   * ```ts\n   * // Let's say we have our poller's operation state defined as:\n   * interface MyOperationState extends PollOperationState<ResultType> {\n   *   privateProperty?: string;\n   *   publicProperty?: string;\n   * }\n   *\n   * // To allow us to have a true separation of public and private state, we have to define another interface:\n   * interface PublicState extends PollOperationState<ResultType> {\n   *   publicProperty?: string;\n   * }\n   *\n   * // Then, we define our Poller as follows:\n   * export class MyPoller extends Poller<MyOperationState, ResultType> {\n   *   // ... More content is needed here ...\n   *\n   *   public getOperationState(): PublicState {\n   *     const state: PublicState = this.operation.state;\n   *     return {\n   *       // Properties from PollOperationState<TResult>\n   *       isStarted: state.isStarted,\n   *       isCompleted: state.isCompleted,\n   *       isCancelled: state.isCancelled,\n   *       error: state.error,\n   *       result: state.result,\n   *\n   *       // The only other property needed by PublicState.\n   *       publicProperty: state.publicProperty\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * You can see this in the tests of this repository, go to the file:\n   * `../test/utils/testPoller.ts`\n   * and look for the getOperationState implementation.\n   */\n  public getOperationState(): TState {\n    return this.operation.state;\n  }\n\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  public getResult(): TResult | undefined {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return state.result;\n  }\n\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  public toString(): string {\n    return this.operation.toString();\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { delay } from \"@azure/core-http\";\nimport { PollOperation, PollOperationState, Poller } from \"@azure/core-lro\";\nimport { BlobClient, BlobStartCopyFromURLOptions, BlobBeginCopyFromURLResponse } from \"../Clients\";\n\n/**\n * Defines the operations from a {@link BlobClient} that are needed for the poller\n * returned by {@link BlobClient.beginCopyFromURL} to work.\n */\nexport type CopyPollerBlobClient = Pick<BlobClient, \"abortCopyFromURL\" | \"getProperties\"> & {\n  startCopyFromURL(\n    copySource: string,\n    options?: BlobStartCopyFromURLOptions\n  ): Promise<BlobBeginCopyFromURLResponse>;\n};\n\n/**\n * The state used by the poller returned from {@link BlobClient.beginCopyFromURL}.\n *\n * This state is passed into the user-specified `onProgress` callback\n * whenever copy progress is detected.\n */\nexport interface BlobBeginCopyFromUrlPollState\n  extends PollOperationState<BlobBeginCopyFromURLResponse> {\n  /**\n   * The instance of {@link BlobClient} that was used when calling {@link BlobClient.beginCopyFromURL}.\n   */\n  readonly blobClient: CopyPollerBlobClient;\n  /**\n   * The copyId that identifies the in-progress blob copy.\n   */\n  copyId?: string;\n  /**\n   * the progress of the blob copy as reported by the service.\n   */\n  copyProgress?: string;\n  /**\n   * The source URL provided in {@link BlobClient.beginCopyFromURL}.\n   */\n  copySource: string;\n  /**\n   * The options that were passed to the initial {@link BlobClient.beginCopyFromURL} call.\n   * This is exposed for the poller and should not be modified directly.\n   */\n  readonly startCopyFromURLOptions?: BlobStartCopyFromURLOptions;\n}\n\n/**\n * The PollOperation responsible for:\n *  - performing the initial startCopyFromURL\n *  - checking the copy status via getProperties\n *  - cancellation via abortCopyFromURL\n * @hidden\n */\nexport interface BlobBeginCopyFromURLPollOperation\n  extends PollOperation<BlobBeginCopyFromUrlPollState, BlobBeginCopyFromURLResponse> {}\n\n/**\n * The set of options used to configure the poller.\n * This is an internal interface populated by {@link BlobClient.beginCopyFromURL}.\n *\n * @hidden\n */\nexport interface BlobBeginCopyFromUrlPollerOptions {\n  blobClient: CopyPollerBlobClient;\n  copySource: string;\n  intervalInMs?: number;\n  onProgress?: (state: BlobBeginCopyFromUrlPollState) => void;\n  resumeFrom?: string;\n  startCopyFromURLOptions?: BlobStartCopyFromURLOptions;\n}\n\n/**\n * This is the poller returned by {@link BlobClient.beginCopyFromURL}.\n * This can not be instantiated directly outside of this package.\n *\n * @hidden\n */\nexport class BlobBeginCopyFromUrlPoller extends Poller<\n  BlobBeginCopyFromUrlPollState,\n  BlobBeginCopyFromURLResponse\n> {\n  public intervalInMs: number;\n\n  constructor(options: BlobBeginCopyFromUrlPollerOptions) {\n    const {\n      blobClient,\n      copySource,\n      intervalInMs = 15000,\n      onProgress,\n      resumeFrom,\n      startCopyFromURLOptions,\n    } = options;\n\n    let state: BlobBeginCopyFromUrlPollState | undefined;\n\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n\n    const operation = makeBlobBeginCopyFromURLPollOperation({\n      ...state,\n      blobClient,\n      copySource,\n      startCopyFromURLOptions,\n    });\n\n    super(operation);\n\n    if (typeof onProgress === \"function\") {\n      this.onProgress(onProgress);\n    }\n\n    this.intervalInMs = intervalInMs;\n  }\n\n  public delay(): Promise<void> {\n    return delay(this.intervalInMs);\n  }\n}\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst cancel: BlobBeginCopyFromURLPollOperation[\"cancel\"] = async function cancel(\n  this: BlobBeginCopyFromURLPollOperation,\n  options = {}\n) {\n  const state = this.state;\n  const { copyId } = state;\n  if (state.isCompleted) {\n    return makeBlobBeginCopyFromURLPollOperation(state);\n  }\n\n  if (!copyId) {\n    state.isCancelled = true;\n    return makeBlobBeginCopyFromURLPollOperation(state);\n  }\n\n  // if abortCopyFromURL throws, it will bubble up to user's poller.cancelOperation call\n  await state.blobClient.abortCopyFromURL(copyId, {\n    abortSignal: options.abortSignal,\n  });\n  state.isCancelled = true;\n\n  return makeBlobBeginCopyFromURLPollOperation(state);\n};\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst update: BlobBeginCopyFromURLPollOperation[\"update\"] = async function update(\n  this: BlobBeginCopyFromURLPollOperation,\n  options = {}\n): Promise<BlobBeginCopyFromURLPollOperation> {\n  const state = this.state;\n  const { blobClient, copySource, startCopyFromURLOptions } = state;\n\n  if (!state.isStarted) {\n    state.isStarted = true;\n    const result = await blobClient.startCopyFromURL(copySource, startCopyFromURLOptions);\n\n    // copyId is needed to abort\n    state.copyId = result.copyId;\n    if (result.copyStatus === \"success\") {\n      state.result = result;\n      state.isCompleted = true;\n    }\n  } else if (!state.isCompleted) {\n    try {\n      const result = await state.blobClient.getProperties({ abortSignal: options.abortSignal });\n      const { copyStatus, copyProgress } = result;\n      const prevCopyProgress = state.copyProgress;\n      if (copyProgress) {\n        state.copyProgress = copyProgress;\n      }\n      if (\n        copyStatus === \"pending\" &&\n        copyProgress !== prevCopyProgress &&\n        typeof options.fireProgress === \"function\"\n      ) {\n        // trigger in setTimeout, or swallow error?\n        options.fireProgress(state);\n      } else if (copyStatus === \"success\") {\n        state.result = result;\n        state.isCompleted = true;\n      } else if (copyStatus === \"failed\") {\n        state.error = new Error(\n          `Blob copy failed with reason: \"${result.copyStatusDescription || \"unknown\"}\"`\n        );\n        state.isCompleted = true;\n      }\n    } catch (err: any) {\n      state.error = err;\n      state.isCompleted = true;\n    }\n  }\n\n  return makeBlobBeginCopyFromURLPollOperation(state);\n};\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @hidden\n */\nconst toString: BlobBeginCopyFromURLPollOperation[\"toString\"] = function toString(\n  this: BlobBeginCopyFromURLPollOperation\n) {\n  return JSON.stringify({ state: this.state }, (key, value) => {\n    // remove blobClient from serialized state since a client can't be hydrated from this info.\n    if (key === \"blobClient\") {\n      return undefined;\n    }\n    return value;\n  });\n};\n\n/**\n * Creates a poll operation given the provided state.\n * @hidden\n */\nfunction makeBlobBeginCopyFromURLPollOperation(\n  state: BlobBeginCopyFromUrlPollState\n): BlobBeginCopyFromURLPollOperation {\n  return {\n    state: { ...state },\n    cancel,\n    toString,\n    update,\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Range for Blob Service Operations.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-the-range-header-for-blob-service-operations\n */\nexport interface Range {\n  /**\n   * StartByte, larger than or equal 0.\n   */\n  offset: number;\n  /**\n   * Optional. Count of bytes, larger than 0.\n   * If not provided, will return bytes from offset to the end.\n   */\n  count?: number;\n}\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @param iRange -\n */\nexport function rangeToString(iRange: Range): string {\n  if (iRange.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n  if (iRange.count && iRange.count <= 0) {\n    throw new RangeError(\n      `Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`\n    );\n  }\n  return iRange.count\n    ? `bytes=${iRange.offset}-${iRange.offset + iRange.count - 1}`\n    : `bytes=${iRange.offset}-`;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n\n/**\n * Operation is an async function to be executed and managed by Batch.\n */\nexport declare type Operation = () => Promise<any>;\n\n/**\n * States for Batch.\n */\nenum BatchStates {\n  Good,\n  Error,\n}\n\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n */\nexport class Batch {\n  /**\n   * Concurrency. Must be lager than 0.\n   */\n  private concurrency: number;\n\n  /**\n   * Number of active operations under execution.\n   */\n  private actives: number = 0;\n\n  /**\n   * Number of completed operations under execution.\n   */\n  private completed: number = 0;\n\n  /**\n   * Offset of next operation to be executed.\n   */\n  private offset: number = 0;\n\n  /**\n   * Operation array to be executed.\n   */\n  private operations: Operation[] = [];\n\n  /**\n   * States of Batch. When an error happens, state will turn into error.\n   * Batch will stop execute left operations.\n   */\n  private state: BatchStates = BatchStates.Good;\n\n  /**\n   * A private emitter used to pass events inside this class.\n   */\n  private emitter: EventEmitter;\n\n  /**\n   * Creates an instance of Batch.\n   * @param concurrency -\n   */\n  public constructor(concurrency: number = 5) {\n    if (concurrency < 1) {\n      throw new RangeError(\"concurrency must be larger than 0\");\n    }\n    this.concurrency = concurrency;\n    this.emitter = new EventEmitter();\n  }\n\n  /**\n   * Add a operation into queue.\n   *\n   * @param operation -\n   */\n  public addOperation(operation: Operation): void {\n    this.operations.push(async () => {\n      try {\n        this.actives++;\n        await operation();\n        this.actives--;\n        this.completed++;\n        this.parallelExecute();\n      } catch (error: any) {\n        this.emitter.emit(\"error\", error);\n      }\n    });\n  }\n\n  /**\n   * Start execute operations in the queue.\n   *\n   */\n  public async do(): Promise<void> {\n    if (this.operations.length === 0) {\n      return Promise.resolve();\n    }\n\n    this.parallelExecute();\n\n    return new Promise<void>((resolve, reject) => {\n      this.emitter.on(\"finish\", resolve);\n\n      this.emitter.on(\"error\", (error) => {\n        this.state = BatchStates.Error;\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Get next operation to be executed. Return null when reaching ends.\n   *\n   */\n  private nextOperation(): Operation | null {\n    if (this.offset < this.operations.length) {\n      return this.operations[this.offset++];\n    }\n    return null;\n  }\n\n  /**\n   * Start execute operations. One one the most important difference between\n   * this method with do() is that do() wraps as an sync method.\n   *\n   */\n  private parallelExecute(): void {\n    if (this.state === BatchStates.Error) {\n      return;\n    }\n\n    if (this.completed >= this.operations.length) {\n      this.emitter.emit(\"finish\");\n      return;\n    }\n\n    while (this.actives < this.concurrency) {\n      const operation = this.nextOperation();\n      if (operation) {\n        operation();\n      } else {\n        return;\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Readable, ReadableOptions } from \"stream\";\n\n/**\n * Options to configure the BuffersStream.\n */\nexport interface BuffersStreamOptions extends ReadableOptions {}\n\n/**\n * This class generates a readable stream from the data in an array of buffers.\n */\nexport class BuffersStream extends Readable {\n  /**\n   * The offset of data to be read in the current buffer.\n   */\n  private byteOffsetInCurrentBuffer: number;\n\n  /**\n   * The index of buffer to be read in the array of buffers.\n   */\n  private bufferIndex: number;\n\n  /**\n   * The total length of data already read.\n   */\n  private pushedBytesLength: number;\n\n  /**\n   * Creates an instance of BuffersStream that will emit the data\n   * contained in the array of buffers.\n   *\n   * @param buffers - Array of buffers containing the data\n   * @param byteLength - The total length of data contained in the buffers\n   */\n  constructor(\n    private buffers: Buffer[],\n    private byteLength: number,\n    options?: BuffersStreamOptions\n  ) {\n    super(options);\n    this.byteOffsetInCurrentBuffer = 0;\n    this.bufferIndex = 0;\n    this.pushedBytesLength = 0;\n\n    // check byteLength is no larger than buffers[] total length\n    let buffersLength = 0;\n    for (const buf of this.buffers) {\n      buffersLength += buf.byteLength;\n    }\n    if (buffersLength < this.byteLength) {\n      throw new Error(\"Data size shouldn't be larger than the total length of buffers.\");\n    }\n  }\n\n  /**\n   * Internal _read() that will be called when the stream wants to pull more data in.\n   *\n   * @param size - Optional. The size of data to be read\n   */\n  public _read(size?: number) {\n    if (this.pushedBytesLength >= this.byteLength) {\n      this.push(null);\n    }\n\n    if (!size) {\n      size = this.readableHighWaterMark;\n    }\n\n    const outBuffers: Buffer[] = [];\n    let i = 0;\n    while (i < size && this.pushedBytesLength < this.byteLength) {\n      // The last buffer may be longer than the data it contains.\n      const remainingDataInAllBuffers = this.byteLength - this.pushedBytesLength;\n      const remainingCapacityInThisBuffer =\n        this.buffers[this.bufferIndex].byteLength - this.byteOffsetInCurrentBuffer;\n      const remaining = Math.min(remainingCapacityInThisBuffer, remainingDataInAllBuffers);\n      if (remaining > size - i) {\n        // chunkSize = size - i\n        const end = this.byteOffsetInCurrentBuffer + size - i;\n        outBuffers.push(this.buffers[this.bufferIndex].slice(this.byteOffsetInCurrentBuffer, end));\n        this.pushedBytesLength += size - i;\n        this.byteOffsetInCurrentBuffer = end;\n        i = size;\n        break;\n      } else {\n        // chunkSize = remaining\n        const end = this.byteOffsetInCurrentBuffer + remaining;\n        outBuffers.push(this.buffers[this.bufferIndex].slice(this.byteOffsetInCurrentBuffer, end));\n        if (remaining === remainingCapacityInThisBuffer) {\n          // this.buffers[this.bufferIndex] used up, shift to next one\n          this.byteOffsetInCurrentBuffer = 0;\n          this.bufferIndex++;\n        } else {\n          this.byteOffsetInCurrentBuffer = end;\n        }\n        this.pushedBytesLength += remaining;\n        i += remaining;\n      }\n    }\n\n    if (outBuffers.length > 1) {\n      this.push(Buffer.concat(outBuffers));\n    } else if (outBuffers.length === 1) {\n      this.push(outBuffers[0]);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { BuffersStream } from \"./BuffersStream\";\nimport { Readable } from \"stream\";\n\n/**\n * maxBufferLength is max size of each buffer in the pooled buffers.\n */\n// Can't use import as Typescript doesn't recognize \"buffer\".\nconst maxBufferLength = require(\"buffer\").constants.MAX_LENGTH;\n\n/**\n * This class provides a buffer container which conceptually has no hard size limit.\n * It accepts a capacity, an array of input buffers and the total length of input data.\n * It will allocate an internal \"buffer\" of the capacity and fill the data in the input buffers\n * into the internal \"buffer\" serially with respect to the total length.\n * Then by calling PooledBuffer.getReadableStream(), you can get a readable stream\n * assembled from all the data in the internal \"buffer\".\n */\nexport class PooledBuffer {\n  /**\n   * Internal buffers used to keep the data.\n   * Each buffer has a length of the maxBufferLength except last one.\n   */\n  private buffers: Buffer[] = [];\n\n  /**\n   * The total size of internal buffers.\n   */\n  private readonly capacity: number;\n\n  /**\n   * The total size of data contained in internal buffers.\n   */\n  private _size: number;\n\n  /**\n   * The size of the data contained in the pooled buffers.\n   */\n  public get size(): number {\n    return this._size;\n  }\n\n  /**\n   * Creates an instance of PooledBuffer with given capacity.\n   * Internal buffers are allocated but contains no data.\n   * Users may call the {@link PooledBuffer.fill} method to fill this\n   * pooled buffer with data.\n   *\n   * @param capacity - Total capacity of the internal buffers\n   */\n  constructor(capacity: number);\n\n  /**\n   * Creates an instance of PooledBuffer with given capacity.\n   * Internal buffers are allocated and filled with data in the input buffers serially\n   * with respect to the total length.\n   *\n   * @param capacity - Total capacity of the internal buffers\n   * @param buffers - Input buffers containing the data to be filled in the pooled buffer\n   * @param totalLength - Total length of the data to be filled in.\n   */\n  constructor(capacity: number, buffers: Buffer[], totalLength: number);\n  constructor(capacity: number, buffers?: Buffer[], totalLength?: number) {\n    this.capacity = capacity;\n    this._size = 0;\n\n    // allocate\n    const bufferNum = Math.ceil(capacity / maxBufferLength);\n    for (let i = 0; i < bufferNum; i++) {\n      let len = i === bufferNum - 1 ? capacity % maxBufferLength : maxBufferLength;\n      if (len === 0) {\n        len = maxBufferLength;\n      }\n      this.buffers.push(Buffer.allocUnsafe(len));\n    }\n\n    if (buffers) {\n      this.fill(buffers, totalLength!);\n    }\n  }\n\n  /**\n   * Fill the internal buffers with data in the input buffers serially\n   * with respect to the total length and the total capacity of the internal buffers.\n   * Data copied will be shift out of the input buffers.\n   *\n   * @param buffers - Input buffers containing the data to be filled in the pooled buffer\n   * @param totalLength - Total length of the data to be filled in.\n   *\n   */\n  public fill(buffers: Buffer[], totalLength: number) {\n    this._size = Math.min(this.capacity, totalLength);\n\n    let i = 0,\n      j = 0,\n      targetOffset = 0,\n      sourceOffset = 0,\n      totalCopiedNum = 0;\n    while (totalCopiedNum < this._size) {\n      const source = buffers[i];\n      const target = this.buffers[j];\n      const copiedNum = source.copy(target, targetOffset, sourceOffset);\n\n      totalCopiedNum += copiedNum;\n      sourceOffset += copiedNum;\n      targetOffset += copiedNum;\n      if (sourceOffset === source.length) {\n        i++;\n        sourceOffset = 0;\n      }\n      if (targetOffset === target.length) {\n        j++;\n        targetOffset = 0;\n      }\n    }\n\n    // clear copied from source buffers\n    buffers.splice(0, i);\n    if (buffers.length > 0) {\n      buffers[0] = buffers[0].slice(sourceOffset);\n    }\n  }\n\n  /**\n   * Get the readable stream assembled from all the data in the internal buffers.\n   *\n   */\n  public getReadableStream(): Readable {\n    return new BuffersStream(this.buffers, this.size);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { EventEmitter } from \"events\";\nimport { Readable } from \"stream\";\nimport { PooledBuffer } from \"./PooledBuffer\";\n\n/**\n * OutgoingHandler is an async function triggered by BufferScheduler.\n */\nexport declare type OutgoingHandler = (\n  body: () => NodeJS.ReadableStream,\n  length: number,\n  offset?: number\n) => Promise<any>;\n\n/**\n * This class accepts a Node.js Readable stream as input, and keeps reading data\n * from the stream into the internal buffer structure, until it reaches maxBuffers.\n * Every available buffer will try to trigger outgoingHandler.\n *\n * The internal buffer structure includes an incoming buffer array, and a outgoing\n * buffer array. The incoming buffer array includes the \"empty\" buffers can be filled\n * with new incoming data. The outgoing array includes the filled buffers to be\n * handled by outgoingHandler. Every above buffer size is defined by parameter bufferSize.\n *\n * NUM_OF_ALL_BUFFERS = BUFFERS_IN_INCOMING + BUFFERS_IN_OUTGOING + BUFFERS_UNDER_HANDLING\n *\n * NUM_OF_ALL_BUFFERS lesser than or equal to maxBuffers\n *\n * PERFORMANCE IMPROVEMENT TIPS:\n * 1. Input stream highWaterMark is better to set a same value with bufferSize\n *    parameter, which will avoid Buffer.concat() operations.\n * 2. concurrency should set a smaller value than maxBuffers, which is helpful to\n *    reduce the possibility when a outgoing handler waits for the stream data.\n *    in this situation, outgoing handlers are blocked.\n *    Outgoing queue shouldn't be empty.\n */\nexport class BufferScheduler {\n  /**\n   * Size of buffers in incoming and outgoing queues. This class will try to align\n   * data read from Readable stream into buffer chunks with bufferSize defined.\n   */\n  private readonly bufferSize: number;\n\n  /**\n   * How many buffers can be created or maintained.\n   */\n  private readonly maxBuffers: number;\n\n  /**\n   * A Node.js Readable stream.\n   */\n  private readonly readable: Readable;\n\n  /**\n   * OutgoingHandler is an async function triggered by BufferScheduler when there\n   * are available buffers in outgoing array.\n   */\n  private readonly outgoingHandler: OutgoingHandler;\n\n  /**\n   * An internal event emitter.\n   */\n  private readonly emitter: EventEmitter = new EventEmitter();\n\n  /**\n   * Concurrency of executing outgoingHandlers. (0 lesser than concurrency lesser than or equal to maxBuffers)\n   */\n  private readonly concurrency: number;\n\n  /**\n   * An internal offset marker to track data offset in bytes of next outgoingHandler.\n   */\n  private offset: number = 0;\n\n  /**\n   * An internal marker to track whether stream is end.\n   */\n  private isStreamEnd: boolean = false;\n\n  /**\n   * An internal marker to track whether stream or outgoingHandler returns error.\n   */\n  private isError: boolean = false;\n\n  /**\n   * How many handlers are executing.\n   */\n  private executingOutgoingHandlers: number = 0;\n\n  /**\n   * Encoding of the input Readable stream which has string data type instead of Buffer.\n   */\n  private encoding?: BufferEncoding;\n\n  /**\n   * How many buffers have been allocated.\n   */\n  private numBuffers: number = 0;\n\n  /**\n   * Because this class doesn't know how much data every time stream pops, which\n   * is defined by highWaterMarker of the stream. So BufferScheduler will cache\n   * data received from the stream, when data in unresolvedDataArray exceeds the\n   * blockSize defined, it will try to concat a blockSize of buffer, fill into available\n   * buffers from incoming and push to outgoing array.\n   */\n  private unresolvedDataArray: Buffer[] = [];\n\n  /**\n   * How much data consisted in unresolvedDataArray.\n   */\n  private unresolvedLength: number = 0;\n\n  /**\n   * The array includes all the available buffers can be used to fill data from stream.\n   */\n  private incoming: PooledBuffer[] = [];\n\n  /**\n   * The array (queue) includes all the buffers filled from stream data.\n   */\n  private outgoing: PooledBuffer[] = [];\n\n  /**\n   * Creates an instance of BufferScheduler.\n   *\n   * @param readable - A Node.js Readable stream\n   * @param bufferSize - Buffer size of every maintained buffer\n   * @param maxBuffers - How many buffers can be allocated\n   * @param outgoingHandler - An async function scheduled to be\n   *                                          triggered when a buffer fully filled\n   *                                          with stream data\n   * @param concurrency - Concurrency of executing outgoingHandlers (>0)\n   * @param encoding - [Optional] Encoding of Readable stream when it's a string stream\n   */\n  constructor(\n    readable: Readable,\n    bufferSize: number,\n    maxBuffers: number,\n    outgoingHandler: OutgoingHandler,\n    concurrency: number,\n    encoding?: BufferEncoding\n  ) {\n    if (bufferSize <= 0) {\n      throw new RangeError(`bufferSize must be larger than 0, current is ${bufferSize}`);\n    }\n\n    if (maxBuffers <= 0) {\n      throw new RangeError(`maxBuffers must be larger than 0, current is ${maxBuffers}`);\n    }\n\n    if (concurrency <= 0) {\n      throw new RangeError(`concurrency must be larger than 0, current is ${concurrency}`);\n    }\n\n    this.bufferSize = bufferSize;\n    this.maxBuffers = maxBuffers;\n    this.readable = readable;\n    this.outgoingHandler = outgoingHandler;\n    this.concurrency = concurrency;\n    this.encoding = encoding;\n  }\n\n  /**\n   * Start the scheduler, will return error when stream of any of the outgoingHandlers\n   * returns error.\n   *\n   */\n  public async do(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.readable.on(\"data\", (data) => {\n        data = typeof data === \"string\" ? Buffer.from(data, this.encoding) : data;\n        this.appendUnresolvedData(data);\n\n        if (!this.resolveData()) {\n          this.readable.pause();\n        }\n      });\n\n      this.readable.on(\"error\", (err) => {\n        this.emitter.emit(\"error\", err);\n      });\n\n      this.readable.on(\"end\", () => {\n        this.isStreamEnd = true;\n        this.emitter.emit(\"checkEnd\");\n      });\n\n      this.emitter.on(\"error\", (err) => {\n        this.isError = true;\n        this.readable.pause();\n        reject(err);\n      });\n\n      this.emitter.on(\"checkEnd\", () => {\n        if (this.outgoing.length > 0) {\n          this.triggerOutgoingHandlers();\n          return;\n        }\n\n        if (this.isStreamEnd && this.executingOutgoingHandlers === 0) {\n          if (this.unresolvedLength > 0 && this.unresolvedLength < this.bufferSize) {\n            const buffer = this.shiftBufferFromUnresolvedDataArray();\n            this.outgoingHandler(() => buffer.getReadableStream(), buffer.size, this.offset)\n              .then(resolve)\n              .catch(reject);\n          } else if (this.unresolvedLength >= this.bufferSize) {\n            return;\n          } else {\n            resolve();\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Insert a new data into unresolved array.\n   *\n   * @param data -\n   */\n  private appendUnresolvedData(data: Buffer) {\n    this.unresolvedDataArray.push(data);\n    this.unresolvedLength += data.length;\n  }\n\n  /**\n   * Try to shift a buffer with size in blockSize. The buffer returned may be less\n   * than blockSize when data in unresolvedDataArray is less than bufferSize.\n   *\n   */\n  private shiftBufferFromUnresolvedDataArray(buffer?: PooledBuffer): PooledBuffer {\n    if (!buffer) {\n      buffer = new PooledBuffer(this.bufferSize, this.unresolvedDataArray, this.unresolvedLength);\n    } else {\n      buffer.fill(this.unresolvedDataArray, this.unresolvedLength);\n    }\n\n    this.unresolvedLength -= buffer.size;\n    return buffer;\n  }\n\n  /**\n   * Resolve data in unresolvedDataArray. For every buffer with size in blockSize\n   * shifted, it will try to get (or allocate a buffer) from incoming, and fill it,\n   * then push it into outgoing to be handled by outgoing handler.\n   *\n   * Return false when available buffers in incoming are not enough, else true.\n   *\n   * @returns Return false when buffers in incoming are not enough, else true.\n   */\n  private resolveData(): boolean {\n    while (this.unresolvedLength >= this.bufferSize) {\n      let buffer: PooledBuffer;\n\n      if (this.incoming.length > 0) {\n        buffer = this.incoming.shift()!;\n        this.shiftBufferFromUnresolvedDataArray(buffer);\n      } else {\n        if (this.numBuffers < this.maxBuffers) {\n          buffer = this.shiftBufferFromUnresolvedDataArray();\n          this.numBuffers++;\n        } else {\n          // No available buffer, wait for buffer returned\n          return false;\n        }\n      }\n\n      this.outgoing.push(buffer);\n      this.triggerOutgoingHandlers();\n    }\n    return true;\n  }\n\n  /**\n   * Try to trigger a outgoing handler for every buffer in outgoing. Stop when\n   * concurrency reaches.\n   */\n  private async triggerOutgoingHandlers() {\n    let buffer: PooledBuffer | undefined;\n    do {\n      if (this.executingOutgoingHandlers >= this.concurrency) {\n        return;\n      }\n\n      buffer = this.outgoing.shift();\n      if (buffer) {\n        this.triggerOutgoingHandler(buffer);\n      }\n    } while (buffer);\n  }\n\n  /**\n   * Trigger a outgoing handler for a buffer shifted from outgoing.\n   *\n   * @param buffer -\n   */\n  private async triggerOutgoingHandler(buffer: PooledBuffer): Promise<any> {\n    const bufferLength = buffer.size;\n\n    this.executingOutgoingHandlers++;\n    this.offset += bufferLength;\n\n    try {\n      await this.outgoingHandler(\n        () => buffer.getReadableStream(),\n        bufferLength,\n        this.offset - bufferLength\n      );\n    } catch (err: any) {\n      this.emitter.emit(\"error\", err);\n      return;\n    }\n\n    this.executingOutgoingHandlers--;\n    this.reuseBuffer(buffer);\n    this.emitter.emit(\"checkEnd\");\n  }\n\n  /**\n   * Return buffer used by outgoing handler into incoming.\n   *\n   * @param buffer -\n   */\n  private reuseBuffer(buffer: PooledBuffer) {\n    this.incoming.push(buffer);\n    if (!this.isError && this.resolveData() && !this.isStreamEnd) {\n      this.readable.resume();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as fs from \"fs\";\nimport * as util from \"util\";\nimport { REQUEST_TIMEOUT } from \"./constants\";\n\n/**\n * Reads a readable stream into buffer. Fill the buffer from offset to end.\n *\n * @param stream - A Node.js Readable stream\n * @param buffer - Buffer to be filled, length must greater than or equal to offset\n * @param offset - From which position in the buffer to be filled, inclusive\n * @param end - To which position in the buffer to be filled, exclusive\n * @param encoding - Encoding of the Readable stream\n */\nexport async function streamToBuffer(\n  stream: NodeJS.ReadableStream,\n  buffer: Buffer,\n  offset: number,\n  end: number,\n  encoding?: BufferEncoding\n): Promise<void> {\n  let pos = 0; // Position in stream\n  const count = end - offset; // Total amount of data needed in stream\n\n  return new Promise<void>((resolve, reject) => {\n    const timeout = setTimeout(\n      () => reject(new Error(`The operation cannot be completed in timeout.`)),\n      REQUEST_TIMEOUT\n    );\n\n    stream.on(\"readable\", () => {\n      if (pos >= count) {\n        clearTimeout(timeout);\n        resolve();\n        return;\n      }\n\n      let chunk = stream.read();\n      if (!chunk) {\n        return;\n      }\n      if (typeof chunk === \"string\") {\n        chunk = Buffer.from(chunk, encoding);\n      }\n\n      // How much data needed in this chunk\n      const chunkLength = pos + chunk.length > count ? count - pos : chunk.length;\n\n      buffer.fill(chunk.slice(0, chunkLength), offset + pos, offset + pos + chunkLength);\n      pos += chunkLength;\n    });\n\n    stream.on(\"end\", () => {\n      clearTimeout(timeout);\n      if (pos < count) {\n        reject(\n          new Error(\n            `Stream drains before getting enough data needed. Data read: ${pos}, data need: ${count}`\n          )\n        );\n      }\n      resolve();\n    });\n\n    stream.on(\"error\", (msg) => {\n      clearTimeout(timeout);\n      reject(msg);\n    });\n  });\n}\n\n/**\n * Reads a readable stream into buffer entirely.\n *\n * @param stream - A Node.js Readable stream\n * @param buffer - Buffer to be filled, length must greater than or equal to offset\n * @param encoding - Encoding of the Readable stream\n * @returns with the count of bytes read.\n * @throws `RangeError` If buffer size is not big enough.\n */\nexport async function streamToBuffer2(\n  stream: NodeJS.ReadableStream,\n  buffer: Buffer,\n  encoding?: BufferEncoding\n): Promise<number> {\n  let pos = 0; // Position in stream\n  const bufferSize = buffer.length;\n\n  return new Promise<number>((resolve, reject) => {\n    stream.on(\"readable\", () => {\n      let chunk = stream.read();\n      if (!chunk) {\n        return;\n      }\n      if (typeof chunk === \"string\") {\n        chunk = Buffer.from(chunk, encoding);\n      }\n\n      if (pos + chunk.length > bufferSize) {\n        reject(new Error(`Stream exceeds buffer size. Buffer size: ${bufferSize}`));\n        return;\n      }\n\n      buffer.fill(chunk, pos, pos + chunk.length);\n      pos += chunk.length;\n    });\n\n    stream.on(\"end\", () => {\n      resolve(pos);\n    });\n\n    stream.on(\"error\", reject);\n  });\n}\n\n/**\n * Reads a readable stream into a buffer.\n *\n * @param stream - A Node.js Readable stream\n * @param encoding - Encoding of the Readable stream\n * @returns with the count of bytes read.\n */\nexport async function streamToBuffer3(\n  readableStream: NodeJS.ReadableStream,\n  encoding?: BufferEncoding\n): Promise<Buffer> {\n  return new Promise((resolve, reject) => {\n    const chunks: Buffer[] = [];\n    readableStream.on(\"data\", (data: Buffer | string) => {\n      chunks.push(data instanceof Buffer ? data : Buffer.from(data, encoding));\n    });\n    readableStream.on(\"end\", () => {\n      resolve(Buffer.concat(chunks));\n    });\n    readableStream.on(\"error\", reject);\n  });\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Writes the content of a readstream to a local file. Returns a Promise which is completed after the file handle is closed.\n *\n * @param rs - The read stream.\n * @param file - Destination file path.\n */\nexport async function readStreamToLocalFile(\n  rs: NodeJS.ReadableStream,\n  file: string\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    const ws = fs.createWriteStream(file);\n\n    rs.on(\"error\", (err: Error) => {\n      reject(err);\n    });\n\n    ws.on(\"error\", (err: Error) => {\n      reject(err);\n    });\n\n    ws.on(\"close\", resolve);\n\n    rs.pipe(ws);\n  });\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Promisified version of fs.stat().\n */\nexport const fsStat = util.promisify(fs.stat);\n\nexport const fsCreateReadStream = fs.createReadStream;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  generateUuid,\n  getDefaultProxySettings,\n  HttpRequestBody,\n  HttpResponse,\n  isNode,\n  isTokenCredential,\n  TokenCredential,\n  TransferProgressEvent,\n  URLBuilder,\n} from \"@azure/core-http\";\nimport { PollOperationState } from \"@azure/core-lro\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { Readable } from \"stream\";\n\nimport { BlobDownloadResponse } from \"./BlobDownloadResponse\";\nimport { BlobQueryResponse } from \"./BlobQueryResponse\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AppendBlob, Blob as StorageBlob, BlockBlob, PageBlob } from \"./generated/src/operations\";\nimport {\n  AppendBlobAppendBlockFromUrlResponse,\n  AppendBlobAppendBlockResponse,\n  AppendBlobCreateResponse,\n  BlobAbortCopyFromURLResponse,\n  BlobCopyFromURLResponse,\n  BlobCreateSnapshotResponse,\n  BlobDeleteResponse,\n  BlobDownloadOptionalParams,\n  BlobDownloadResponseModel,\n  BlobGetPropertiesResponseModel,\n  BlobGetTagsHeaders,\n  BlobSetHTTPHeadersResponse,\n  BlobSetMetadataResponse,\n  BlobSetTagsResponse,\n  BlobSetTierResponse,\n  BlobStartCopyFromURLResponse,\n  BlobTags,\n  BlobUndeleteResponse,\n  BlockBlobCommitBlockListResponse,\n  BlockBlobGetBlockListResponse,\n  BlockBlobStageBlockFromURLResponse,\n  BlockBlobStageBlockResponse,\n  BlockBlobUploadHeaders,\n  BlockBlobUploadResponse,\n  BlockListType,\n  CpkInfo,\n  DeleteSnapshotsOptionType,\n  LeaseAccessConditions,\n  PageBlobClearPagesResponse,\n  PageBlobCopyIncrementalResponse,\n  PageBlobCreateResponse,\n  PageBlobResizeResponse,\n  PageBlobUpdateSequenceNumberResponse,\n  PageBlobUploadPagesFromURLResponse,\n  PageBlobUploadPagesResponse,\n  RehydratePriority,\n  SequenceNumberActionType,\n  BlockBlobPutBlobFromUrlResponse,\n  BlobHTTPHeaders,\n  PageBlobGetPageRangesResponseModel,\n  PageRangeInfo,\n  PageBlobGetPageRangesDiffResponseModel,\n  BlobCopySourceTags,\n} from \"./generatedModels\";\nimport {\n  AppendBlobRequestConditions,\n  BlobDownloadResponseParsed,\n  BlobRequestConditions,\n  BlockBlobTier,\n  ensureCpkIfSpecified,\n  Metadata,\n  ObjectReplicationPolicy,\n  PageBlobRequestConditions,\n  PremiumPageBlobTier,\n  Tags,\n  toAccessTier,\n  TagConditions,\n  MatchConditions,\n  ModificationConditions,\n  ModifiedAccessConditions,\n  BlobQueryArrowField,\n  BlobImmutabilityPolicy,\n  HttpAuthorization,\n  PollerLikeWithCancellation,\n} from \"./models\";\nimport {\n  PageBlobGetPageRangesDiffResponse,\n  PageBlobGetPageRangesResponse,\n  rangeResponseFromModel,\n} from \"./PageBlobRangeResponse\";\nimport { newPipeline, PipelineLike, isPipelineLike, StoragePipelineOptions } from \"./Pipeline\";\nimport {\n  BlobBeginCopyFromUrlPoller,\n  BlobBeginCopyFromUrlPollState,\n  CopyPollerBlobClient,\n} from \"./pollers/BlobStartCopyFromUrlPoller\";\nimport { Range, rangeToString } from \"./Range\";\nimport { CommonOptions, StorageClient } from \"./StorageClient\";\nimport { Batch } from \"./utils/Batch\";\nimport { BufferScheduler } from \"../../storage-common/src\";\nimport {\n  BlobDoesNotUseCustomerSpecifiedEncryption,\n  BlobUsesCustomerSpecifiedEncryptionMsg,\n  BLOCK_BLOB_MAX_BLOCKS,\n  BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES,\n  BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES,\n  DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES,\n  DEFAULT_BLOCK_BUFFER_SIZE_BYTES,\n  DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS,\n  ETagAny,\n  URLConstants,\n} from \"./utils/constants\";\nimport { createSpan, convertTracingToRequestOptionsBase } from \"./utils/tracing\";\nimport {\n  appendToURLPath,\n  appendToURLQuery,\n  extractConnectionStringParts,\n  ExtractPageRangeInfoItems,\n  generateBlockID,\n  getURLParameter,\n  httpAuthorizationToString,\n  isIpEndpointStyle,\n  parseObjectReplicationRecord,\n  setURLParameter,\n  toBlobTags,\n  toBlobTagsString,\n  toQuerySerialization,\n  toTags,\n} from \"./utils/utils.common\";\nimport {\n  fsCreateReadStream,\n  fsStat,\n  readStreamToLocalFile,\n  streamToBuffer,\n} from \"./utils/utils.node\";\nimport { SASProtocol } from \"./sas/SASQueryParameters\";\nimport { SasIPRange } from \"./sas/SasIPRange\";\nimport { generateBlobSASQueryParameters } from \"./sas/BlobSASSignatureValues\";\nimport { BlobSASPermissions } from \"./sas/BlobSASPermissions\";\nimport { BlobLeaseClient } from \"./BlobLeaseClient\";\nimport {\n  BlobDeleteImmutabilityPolicyResponse,\n  BlobSetImmutabilityPolicyResponse,\n  BlobSetLegalHoldResponse,\n} from \"./generatedModels\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\n\n/**\n * Options to configure the {@link BlobClient.beginCopyFromURL} operation.\n */\nexport interface BlobBeginCopyFromURLOptions extends BlobStartCopyFromURLOptions {\n  /**\n   * The amount of time in milliseconds the poller should wait between\n   * calls to the service to determine the status of the Blob copy.\n   * Defaults to 15 seconds.\n   */\n  intervalInMs?: number;\n  /**\n   * Callback to receive the state of the copy progress.\n   */\n  onProgress?: (state: BlobBeginCopyFromUrlPollState) => void;\n  /**\n   * Serialized poller state that can be used to resume polling from.\n   * This may be useful when starting a copy on one process or thread\n   * and you wish to continue polling on another process or thread.\n   *\n   * To get serialized poller state, call `poller.toString()` on an existing\n   * poller.\n   */\n  resumeFrom?: string;\n}\n\n/**\n * Contains response data for the {@link BlobClient.beginCopyFromURL} operation.\n */\nexport interface BlobBeginCopyFromURLResponse extends BlobStartCopyFromURLResponse {}\n\n/**\n * Options to configure the {@link BlobClient.download} operation.\n */\nexport interface BlobDownloadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * An opaque DateTime string value that, when present, specifies the blob snapshot to retrieve.\n   */\n  snapshot?: string;\n  /**\n   * When this is set to true and download range of blob, the service returns the MD5 hash for the range,\n   * as long as the range is less than or equal to 4 MB in size.\n   *\n   * rangeGetContentCrc64 and rangeGetContentMD5 cannot be set at same time.\n   */\n  rangeGetContentMD5?: boolean;\n  /**\n   * When this is set to true and download range of blob, the service returns the CRC64 hash for the range,\n   * as long as the range is less than or equal to 4 MB in size.\n   *\n   * rangeGetContentCrc64 and rangeGetContentMD5 cannot be set at same time.\n   */\n  rangeGetContentCrc64?: boolean;\n  /**\n   * Conditions to meet when downloading blobs.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Call back to receive events on the progress of download operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original body download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional `FileClient.download()` request will be made\n   * from the broken point, until the requested range has been successfully downloaded or maxRetryRequests is reached.\n   *\n   * Default value is 5, please set a larger value when loading large files in poor network.\n   */\n  maxRetryRequests?: number;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.exists} operation.\n */\nexport interface BlobExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Conditions to meet.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.getProperties} operation.\n */\nexport interface BlobGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting blob properties.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.delete} operation.\n */\nexport interface BlobDeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when deleting blobs.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies options to delete blobs that have associated snapshots.\n   * - `include`: Delete the base blob and all of its snapshots.\n   * - `only`: Delete only the blob's snapshots and not the blob itself.\n   */\n  deleteSnapshots?: DeleteSnapshotsOptionType;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.undelete} operation.\n */\nexport interface BlobUndeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.setHTTPHeaders} operation.\n */\nexport interface BlobSetHTTPHeadersOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting blob HTTP headers.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.setMetadata} operation.\n */\nexport interface BlobSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting blob metadata.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link BlobClient.setTags} operation.\n */\nexport interface BlobSetTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet for the blob to perform this operation.\n   */\n  conditions?: TagConditions & LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.getTags} operation.\n */\nexport interface BlobGetTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet for the blob to perform this operation.\n   */\n  conditions?: TagConditions & LeaseAccessConditions;\n}\n\n/**\n * Contains response data for the {@link BlobClient.getTags} operation.\n */\nexport type BlobGetTagsResponse = { tags: Tags } & BlobGetTagsHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobGetTagsHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: BlobTags;\n    };\n  };\n\n/**\n * Options to configure Blob - Acquire Lease operation.\n */\nexport interface BlobAcquireLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when acquiring the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Release Lease operation.\n */\nexport interface BlobReleaseLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when releasing the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Renew Lease operation.\n */\nexport interface BlobRenewLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when renewing the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Change Lease operation.\n */\nexport interface BlobChangeLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Break Lease operation.\n */\nexport interface BlobBreakLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when breaking the lease of a blob.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.createSnapshot} operation.\n */\nexport interface BlobCreateSnapshotOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the snapshot.\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet when creating blob snapshots.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link BlobClient.beginCopyFromURL} operation.\n */\nexport interface BlobStartCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the blob that are being copied.\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet for the destination blob when copying from a URL to the blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: ModifiedAccessConditions;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | PremiumPageBlobTier | string;\n  /**\n   * Rehydrate Priority - possible values include 'High', 'Standard'.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-rehydration#rehydrate-an-archived-blob-to-an-online-tier\n   */\n  rehydratePriority?: RehydratePriority;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n  /**\n   * Overrides the sealed state of the destination blob. Default true.\n   */\n  sealBlob?: boolean;\n}\n\n/**\n * Options to configure the {@link BlobClient.abortCopyFromURL} operation.\n */\nexport interface BlobAbortCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.syncCopyFromURL} operation.\n */\nexport interface BlobSyncCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the snapshot.\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet for the destination blob when copying from a URL to the blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: MatchConditions & ModificationConditions;\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Default 'REPLACE'.  Indicates if source tags should be copied or replaced with the tags specified by {@link tags}.\n   */\n  copySourceTags?: BlobCopySourceTags;\n}\n\n/**\n * Options to configure the {@link BlobClient.setAccessTier} operation.\n */\nexport interface BlobSetTierOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions & TagConditions;\n  /**\n   * Rehydrate Priority - possible values include 'High', 'Standard'.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-rehydration#rehydrate-an-archived-blob-to-an-online-tier\n   */\n  rehydratePriority?: RehydratePriority;\n}\n\n/**\n * Option interface for the {@link BlobClient.downloadToBuffer} operation.\n */\nexport interface BlobDownloadToBufferOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * blockSize is the data every request trying to download.\n   * Must be greater than or equal to 0.\n   * If set to 0 or undefined, blockSize will automatically calculated according to the blob size.\n   */\n  blockSize?: number;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original block download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional FileClient.download() request will be made\n   * from the broken point, until the requested block has been successfully downloaded or\n   * maxRetryRequestsPerBlock is reached.\n   *\n   * Default value is 5, please set a larger value when in poor network.\n   */\n  maxRetryRequestsPerBlock?: number;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Access conditions headers.\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Concurrency of parallel download.\n   */\n  concurrency?: number;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Contains response data for the {@link BlobClient.deleteIfExists} operation.\n */\nexport interface BlobDeleteIfExistsResponse extends BlobDeleteResponse {\n  /**\n   * Indicate whether the blob is successfully deleted. Is false if the blob does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link BlobClient.getProperties} operation.\n */\nexport interface BlobGetPropertiesResponse extends BlobGetPropertiesResponseModel {\n  /**\n   * Parsed Object Replication Policy Id, Rule Id(s) and status of the source blob.\n   */\n  objectReplicationSourceProperties?: ObjectReplicationPolicy[];\n\n  /**\n   * Object Replication Policy Id of the destination blob.\n   */\n  objectReplicationDestinationPolicyId?: string;\n}\n\n/**\n * Common options of {@link BlobGenerateSasUrlOptions} and {@link ContainerGenerateSasUrlOptions}.\n */\nexport interface CommonGenerateSasUrlOptions {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * Optional. The name of the access policy on the container this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   */\n  contentType?: string;\n}\n\n/**\n * Options to configure {@link BlobClient.generateSasUrl} operation.\n */\nexport interface BlobGenerateSasUrlOptions extends CommonGenerateSasUrlOptions {\n  /**\n   * Optional only when identifier is provided. Specifies the list of permissions to be associated with the SAS.\n   */\n  permissions?: BlobSASPermissions;\n}\n\n/**\n * Options for deleting immutability policy {@link BlobClient.deleteImmutabilityPolicy} operation.\n */\nexport interface BlobDeleteImmutabilityPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options for setting immutability policy {@link BlobClient.setImmutabilityPolicy} operation.\n */\nexport interface BlobSetImmutabilityPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  modifiedAccessCondition?: ModificationConditions;\n}\n\n/**\n * Options for setting legal hold {@link BlobClient.setLegalHold} operation.\n */\nexport interface BlobSetLegalHoldOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * A BlobClient represents a URL to an Azure Storage blob; the blob may be a block blob,\n * append blob, or page blob.\n */\nexport class BlobClient extends StorageClient {\n  /**\n   * blobContext provided by protocol layer.\n   */\n  private blobContext: StorageBlob;\n\n  private _name: string;\n  private _containerName: string;\n\n  private _versionId?: string;\n  private _snapshot?: string;\n\n  /**\n   * The name of the blob.\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * The name of the storage container the blob is associated with.\n   */\n  public get containerName(): string {\n    return this._containerName;\n  }\n\n  /**\n   *\n   * Creates an instance of BlobClient from connection string.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of BlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of BlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  ) {\n    options = options || {};\n    let pipeline: PipelineLike;\n    let url: string;\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n\n    super(url, pipeline);\n    ({ blobName: this._name, containerName: this._containerName } =\n      this.getBlobAndContainerNamesFromUrl());\n    this.blobContext = new StorageBlob(this.storageClientContext);\n\n    this._snapshot = getURLParameter(this.url, URLConstants.Parameters.SNAPSHOT) as string;\n    this._versionId = getURLParameter(this.url, URLConstants.Parameters.VERSIONID) as string;\n  }\n\n  /**\n   * Creates a new BlobClient object identical to the source but with the specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new BlobClient object identical to the source but with the specified snapshot timestamp\n   */\n  public withSnapshot(snapshot: string): BlobClient {\n    return new BlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a new BlobClient object pointing to a version of this blob.\n   * Provide \"\" will remove the versionId and return a Client to the base blob.\n   *\n   * @param versionId - The versionId.\n   * @returns A new BlobClient object pointing to the version of this blob.\n   */\n  public withVersion(versionId: string): BlobClient {\n    return new BlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.VERSIONID,\n        versionId.length === 0 ? undefined : versionId\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a AppendBlobClient object.\n   *\n   */\n  public getAppendBlobClient(): AppendBlobClient {\n    return new AppendBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Creates a BlockBlobClient object.\n   *\n   */\n  public getBlockBlobClient(): BlockBlobClient {\n    return new BlockBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Creates a PageBlobClient object.\n   *\n   */\n  public getPageBlobClient(): PageBlobClient {\n    return new PageBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Reads or downloads a blob from the system, including its metadata and properties.\n   * You can also call Get Blob to read a snapshot.\n   *\n   * * In Node.js, data returns in a Readable stream readableStreamBody\n   * * In browsers, data returns in a promise blobBody\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob\n   *\n   * @param offset - From which position of the blob to download, greater than or equal to 0\n   * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined\n   * @param options - Optional options to Blob Download operation.\n   *\n   *\n   * Example usage (Node.js):\n   *\n   * ```js\n   * // Download and convert a blob to a string\n   * const downloadBlockBlobResponse = await blobClient.download();\n   * const downloaded = await streamToBuffer(downloadBlockBlobResponse.readableStreamBody);\n   * console.log(\"Downloaded blob content:\", downloaded.toString());\n   *\n   * async function streamToBuffer(readableStream) {\n   * return new Promise((resolve, reject) => {\n   * const chunks = [];\n   * readableStream.on(\"data\", (data) => {\n   * chunks.push(data instanceof Buffer ? data : Buffer.from(data));\n   * });\n   * readableStream.on(\"end\", () => {\n   * resolve(Buffer.concat(chunks));\n   * });\n   * readableStream.on(\"error\", reject);\n   * });\n   * }\n   * ```\n   *\n   * Example usage (browser):\n   *\n   * ```js\n   * // Download and convert a blob to a string\n   * const downloadBlockBlobResponse = await blobClient.download();\n   * const downloaded = await blobToString(await downloadBlockBlobResponse.blobBody);\n   * console.log(\n   *   \"Downloaded blob content\",\n   *   downloaded\n   * );\n   *\n   * async function blobToString(blob: Blob): Promise<string> {\n   *   const fileReader = new FileReader();\n   *   return new Promise<string>((resolve, reject) => {\n   *     fileReader.onloadend = (ev: any) => {\n   *       resolve(ev.target!.result);\n   *     };\n   *     fileReader.onerror = reject;\n   *     fileReader.readAsText(blob);\n   *   });\n   * }\n   * ```\n   */\n  public async download(\n    offset: number = 0,\n    count?: number,\n    options: BlobDownloadOptions = {}\n  ): Promise<BlobDownloadResponseParsed> {\n    options.conditions = options.conditions || {};\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n\n    const { span, updatedOptions } = createSpan(\"BlobClient-download\", options);\n\n    try {\n      const res = await this.blobContext.download({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        requestOptions: {\n          onDownloadProgress: isNode ? undefined : options.onProgress, // for Node.js, progress is reported by RetriableReadableStream\n        },\n        range: offset === 0 && !count ? undefined : rangeToString({ offset, count }),\n        rangeGetContentMD5: options.rangeGetContentMD5,\n        rangeGetContentCRC64: options.rangeGetContentCrc64,\n        snapshot: options.snapshot,\n        cpkInfo: options.customerProvidedKey,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      const wrappedRes = {\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n        objectReplicationDestinationPolicyId: res.objectReplicationPolicyId,\n        objectReplicationSourceProperties: parseObjectReplicationRecord(res.objectReplicationRules),\n      };\n      // Return browser response immediately\n      if (!isNode) {\n        return wrappedRes;\n      }\n\n      // We support retrying when download stream unexpected ends in Node.js runtime\n      // Following code shouldn't be bundled into browser build, however some\n      // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n      // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n      // The config is in package.json \"browser\" field\n      if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {\n        // TODO: Default value or make it a required parameter?\n        options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n      }\n\n      if (res.contentLength === undefined) {\n        throw new RangeError(`File download response doesn't contain valid content length header`);\n      }\n\n      if (!res.etag) {\n        throw new RangeError(`File download response doesn't contain valid etag header`);\n      }\n\n      return new BlobDownloadResponse(\n        wrappedRes,\n        async (start: number): Promise<NodeJS.ReadableStream> => {\n          const updatedDownloadOptions: BlobDownloadOptionalParams = {\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ifMatch: options.conditions!.ifMatch || res.etag,\n              ifModifiedSince: options.conditions!.ifModifiedSince,\n              ifNoneMatch: options.conditions!.ifNoneMatch,\n              ifUnmodifiedSince: options.conditions!.ifUnmodifiedSince,\n              ifTags: options.conditions?.tagConditions,\n            },\n            range: rangeToString({\n              count: offset + res.contentLength! - start,\n              offset: start,\n            }),\n            rangeGetContentMD5: options.rangeGetContentMD5,\n            rangeGetContentCRC64: options.rangeGetContentCrc64,\n            snapshot: options.snapshot,\n            cpkInfo: options.customerProvidedKey,\n          };\n\n          // Debug purpose only\n          // console.log(\n          //   `Read from internal stream, range: ${\n          //     updatedOptions.range\n          //   }, options: ${JSON.stringify(updatedOptions)}`\n          // );\n\n          return (\n            await this.blobContext.download({\n              abortSignal: options.abortSignal,\n              ...updatedDownloadOptions,\n            })\n          ).readableStreamBody!;\n        },\n        offset,\n        res.contentLength!,\n        {\n          maxRetryRequests: options.maxRetryRequests,\n          onProgress: options.onProgress,\n        }\n      );\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns true if the Azure blob resource represented by this client exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing blob might be deleted by other clients or\n   * applications. Vice versa new blobs might be added by other clients or applications after this\n   * function completes.\n   *\n   * @param options - options to Exists operation.\n   */\n  public async exists(options: BlobExistsOptions = {}): Promise<boolean> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-exists\", options);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      await this.getProperties({\n        abortSignal: options.abortSignal,\n        customerProvidedKey: options.customerProvidedKey,\n        conditions: options.conditions,\n        tracingOptions: updatedOptions.tracingOptions,\n      });\n      return true;\n    } catch (e: any) {\n      if (e.statusCode === 404) {\n        // Expected exception when checking blob existence\n        return false;\n      } else if (\n        e.statusCode === 409 &&\n        (e.details.errorCode === BlobUsesCustomerSpecifiedEncryptionMsg ||\n          e.details.errorCode === BlobDoesNotUseCustomerSpecifiedEncryption)\n      ) {\n        // Expected exception when checking blob existence\n        return true;\n      }\n\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties\n   * for the blob. It does not return the content of the blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the methods of {@link ContainerClient} that list blobs using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @param options - Optional options to Get Properties operation.\n   */\n  public async getProperties(\n    options: BlobGetPropertiesOptions = {}\n  ): Promise<BlobGetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-getProperties\", options);\n    try {\n      options.conditions = options.conditions || {};\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      const res = await this.blobContext.getProperties({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        cpkInfo: options.customerProvidedKey,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      return {\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n        objectReplicationDestinationPolicyId: res.objectReplicationPolicyId,\n        objectReplicationSourceProperties: parseObjectReplicationRecord(res.objectReplicationRules),\n      };\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param options - Optional options to Blob Delete operation.\n   */\n  public async delete(options: BlobDeleteOptions = {}): Promise<BlobDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-delete\", options);\n    options.conditions = options.conditions || {};\n    try {\n      return await this.blobContext.delete({\n        abortSignal: options.abortSignal,\n        deleteSnapshots: options.deleteSnapshots,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion if it exists. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param options - Optional options to Blob Delete operation.\n   */\n  public async deleteIfExists(\n    options: BlobDeleteOptions = {}\n  ): Promise<BlobDeleteIfExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-deleteIfExists\", options);\n    try {\n      const res = await this.delete(updatedOptions);\n      return {\n        succeeded: true,\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n      };\n    } catch (e: any) {\n      if (e.details?.errorCode === \"BlobNotFound\") {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when deleting a blob or snapshot only if it exists.\",\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response,\n        };\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Restores the contents and metadata of soft deleted blob and any associated\n   * soft deleted snapshots. Undelete Blob is supported only on version 2017-07-29\n   * or later.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob\n   *\n   * @param options - Optional options to Blob Undelete operation.\n   */\n  public async undelete(options: BlobUndeleteOptions = {}): Promise<BlobUndeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-undelete\", options);\n    try {\n      return await this.blobContext.undelete({\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets system properties on the blob.\n   *\n   * If no value provided, or no value provided for the specified blob HTTP headers,\n   * these blob HTTP headers without a value will be cleared.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param blobHTTPHeaders - If no value provided, or no value provided for\n   *                                                   the specified blob HTTP headers, these blob HTTP\n   *                                                   headers without a value will be cleared.\n   *                                                   A common header to set is `blobContentType`\n   *                                                   enabling the browser to provide functionality\n   *                                                   based on file type.\n   * @param options - Optional options to Blob Set HTTP Headers operation.\n   */\n  public async setHTTPHeaders(\n    blobHTTPHeaders?: BlobHTTPHeaders,\n    options: BlobSetHTTPHeadersOptions = {}\n  ): Promise<BlobSetHTTPHeadersResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-setHTTPHeaders\", options);\n    options.conditions = options.conditions || {};\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blobContext.setHttpHeaders({\n        abortSignal: options.abortSignal,\n        blobHttpHeaders: blobHTTPHeaders,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        // cpkInfo: options.customerProvidedKey, // CPK is not included in Swagger, should change this back when this issue is fixed in Swagger.\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets user-defined metadata for the specified blob as one or more name-value pairs.\n   *\n   * If no option provided, or no metadata defined in the parameter, the blob\n   * metadata will be removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata\n   *\n   * @param metadata - Replace existing metadata with this value.\n   *                               If no value provided the existing metadata will be removed.\n   * @param options - Optional options to Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: BlobSetMetadataOptions = {}\n  ): Promise<BlobSetMetadataResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-setMetadata\", options);\n    options.conditions = options.conditions || {};\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blobContext.setMetadata({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        metadata,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets tags on the underlying blob.\n   * A blob can have up to 10 tags. Tag keys must be between 1 and 128 characters.  Tag values must be between 0 and 256 characters.\n   * Valid tag key and value characters include lower and upper case letters, digits (0-9),\n   * space (' '), plus ('+'), minus ('-'), period ('.'), foward slash ('/'), colon (':'), equals ('='), and underscore ('_').\n   *\n   * @param tags -\n   * @param options -\n   */\n  public async setTags(tags: Tags, options: BlobSetTagsOptions = {}): Promise<BlobSetTagsResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-setTags\", options);\n    try {\n      return await this.blobContext.setTags({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n        tags: toBlobTags(tags),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the tags associated with the underlying blob.\n   *\n   * @param options -\n   */\n  public async getTags(options: BlobGetTagsOptions = {}): Promise<BlobGetTagsResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-getTags\", options);\n    try {\n      const response = await this.blobContext.getTags({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n      const wrappedResponse: BlobGetTagsResponse = {\n        ...response,\n        _response: response._response, // _response is made non-enumerable\n        tags: toTags({ blobTagSet: response.blobTagSet }) || {},\n      };\n      return wrappedResponse;\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Get a {@link BlobLeaseClient} that manages leases on the blob.\n   *\n   * @param proposeLeaseId - Initial proposed lease Id.\n   * @returns A new BlobLeaseClient object for managing leases on the blob.\n   */\n  public getBlobLeaseClient(proposeLeaseId?: string): BlobLeaseClient {\n    return new BlobLeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Creates a read-only snapshot of a blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob\n   *\n   * @param options - Optional options to the Blob Create Snapshot operation.\n   */\n  public async createSnapshot(\n    options: BlobCreateSnapshotOptions = {}\n  ): Promise<BlobCreateSnapshotResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-createSnapshot\", options);\n    options.conditions = options.conditions || {};\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blobContext.createSnapshot({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        metadata: options.metadata,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Asynchronously copies a blob to a destination within the storage account.\n   * This method returns a long running operation poller that allows you to wait\n   * indefinitely until the copy is completed.\n   * You can also cancel a copy before it is completed by calling `cancelOperation` on the poller.\n   * Note that the onProgress callback will not be invoked if the operation completes in the first\n   * request, and attempting to cancel a completed copy will result in an error being thrown.\n   *\n   * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n   * a committed blob in any Azure storage account.\n   * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n   * an Azure file in any Azure storage account.\n   * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n   * operation to copy from another storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n   *\n   * Example using automatic polling:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using manual polling:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * while (!poller.isDone()) {\n   *    await poller.poll();\n   * }\n   * const result = copyPoller.getResult();\n   * ```\n   *\n   * Example using progress updates:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url', {\n   *   onProgress(state) {\n   *     console.log(`Progress: ${state.copyProgress}`);\n   *   }\n   * });\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using a changing polling interval (default 15 seconds):\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url', {\n   *   intervalInMs: 1000 // poll blob every 1 second for copy progress\n   * });\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using copy cancellation:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * // cancel operation after starting it.\n   * try {\n   *   await copyPoller.cancelOperation();\n   *   // calls to get the result now throw PollerCancelledError\n   *   await copyPoller.getResult();\n   * } catch (err) {\n   *   if (err.name === 'PollerCancelledError') {\n   *     console.log('The copy was cancelled.');\n   *   }\n   * }\n   * ```\n   *\n   * @param copySource - url to the source Azure Blob/File.\n   * @param options - Optional options to the Blob Start Copy From URL operation.\n   */\n  public async beginCopyFromURL(\n    copySource: string,\n    options: BlobBeginCopyFromURLOptions = {}\n  ): Promise<\n    PollerLikeWithCancellation<\n      PollOperationState<BlobBeginCopyFromURLResponse>,\n      BlobBeginCopyFromURLResponse\n    >\n  > {\n    const client: CopyPollerBlobClient = {\n      abortCopyFromURL: (...args) => this.abortCopyFromURL(...args),\n      getProperties: (...args) => this.getProperties(...args),\n      startCopyFromURL: (...args) => this.startCopyFromURL(...args),\n    };\n    const poller = new BlobBeginCopyFromUrlPoller({\n      blobClient: client,\n      copySource,\n      intervalInMs: options.intervalInMs,\n      onProgress: options.onProgress,\n      resumeFrom: options.resumeFrom,\n      startCopyFromURLOptions: options,\n    });\n\n    // Trigger the startCopyFromURL call by calling poll.\n    // Any errors from this method should be surfaced to the user.\n    await poller.poll();\n\n    return poller;\n  }\n\n  /**\n   * Aborts a pending asynchronous Copy Blob operation, and leaves a destination blob with zero\n   * length and full metadata. Version 2012-02-12 and newer.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob\n   *\n   * @param copyId - Id of the Copy From URL operation.\n   * @param options - Optional options to the Blob Abort Copy From URL operation.\n   */\n  public async abortCopyFromURL(\n    copyId: string,\n    options: BlobAbortCopyFromURLOptions = {}\n  ): Promise<BlobAbortCopyFromURLResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-abortCopyFromURL\", options);\n    try {\n      return await this.blobContext.abortCopyFromURL(copyId, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The synchronous Copy From URL operation copies a blob or an internet resource to a new blob. It will not\n   * return a response until the copy is complete.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url\n   *\n   * @param copySource - The source URL to copy from, Shared Access Signature(SAS) maybe needed for authentication\n   * @param options -\n   */\n  public async syncCopyFromURL(\n    copySource: string,\n    options: BlobSyncCopyFromURLOptions = {}\n  ): Promise<BlobCopyFromURLResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-syncCopyFromURL\", options);\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n\n    try {\n      return await this.blobContext.copyFromURL(copySource, {\n        abortSignal: options.abortSignal,\n        metadata: options.metadata,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        sourceModifiedAccessConditions: {\n          sourceIfMatch: options.sourceConditions.ifMatch,\n          sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n          sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n          sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince,\n        },\n        sourceContentMD5: options.sourceContentMD5,\n        copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n        blobTagsString: toBlobTagsString(options.tags),\n        immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n        immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n        legalHold: options.legalHold,\n        encryptionScope: options.encryptionScope,\n        copySourceTags: options.copySourceTags,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets the tier on a blob. The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier\n   *\n   * @param tier - The tier to be set on the blob. Valid values are Hot, Cool, or Archive.\n   * @param options - Optional options to the Blob Set Tier operation.\n   */\n  public async setAccessTier(\n    tier: BlockBlobTier | PremiumPageBlobTier | string,\n    options: BlobSetTierOptions = {}\n  ): Promise<BlobSetTierResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-setAccessTier\", options);\n    try {\n      return await this.blobContext.setTier(toAccessTier(tier)!, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        rehydratePriority: options.rehydratePriority,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  // High level function\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob in parallel to a buffer.\n   * Offset and count are optional, downloads the entire blob if they are not provided.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For blobs larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param offset - From which position of the block blob to download(in bytes)\n   * @param count - How much data(in bytes) to be downloaded. Will download to the end when passing undefined\n   * @param options - BlobDownloadToBufferOptions\n   */\n  public async downloadToBuffer(\n    offset?: number,\n    count?: number,\n    options?: BlobDownloadToBufferOptions\n  ): Promise<Buffer>;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob in parallel to a buffer.\n   * Offset and count are optional, downloads the entire blob if they are not provided.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For blobs larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param buffer - Buffer to be fill, must have length larger than count\n   * @param offset - From which position of the block blob to download(in bytes)\n   * @param count - How much data(in bytes) to be downloaded. Will download to the end when passing undefined\n   * @param options - BlobDownloadToBufferOptions\n   */\n  public async downloadToBuffer(\n    buffer: Buffer,\n    offset?: number,\n    count?: number,\n    options?: BlobDownloadToBufferOptions\n  ): Promise<Buffer>;\n\n  public async downloadToBuffer(\n    param1?: Buffer | number,\n    param2?: number,\n    param3?: BlobDownloadToBufferOptions | number,\n    param4: BlobDownloadToBufferOptions = {}\n  ): Promise<Buffer | undefined> {\n    let buffer: Buffer | undefined;\n    let offset = 0;\n    let count = 0;\n    let options = param4;\n    if (param1 instanceof Buffer) {\n      buffer = param1;\n      offset = param2 || 0;\n      count = typeof param3 === \"number\" ? param3 : 0;\n    } else {\n      offset = typeof param1 === \"number\" ? param1 : 0;\n      count = typeof param2 === \"number\" ? param2 : 0;\n      options = (param3 as BlobDownloadToBufferOptions) || {};\n    }\n    const { span, updatedOptions } = createSpan(\"BlobClient-downloadToBuffer\", options);\n\n    try {\n      if (!options.blockSize) {\n        options.blockSize = 0;\n      }\n      if (options.blockSize < 0) {\n        throw new RangeError(\"blockSize option must be >= 0\");\n      }\n      if (options.blockSize === 0) {\n        options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n      }\n\n      if (offset < 0) {\n        throw new RangeError(\"offset option must be >= 0\");\n      }\n\n      if (count && count <= 0) {\n        throw new RangeError(\"count option must be greater than 0\");\n      }\n\n      if (!options.conditions) {\n        options.conditions = {};\n      }\n\n      // Customer doesn't specify length, get it\n      if (!count) {\n        const response = await this.getProperties({\n          ...options,\n          tracingOptions: {\n            ...options.tracingOptions,\n            ...convertTracingToRequestOptionsBase(updatedOptions),\n          },\n        });\n        count = response.contentLength! - offset;\n        if (count < 0) {\n          throw new RangeError(\n            `offset ${offset} shouldn't be larger than blob size ${response.contentLength!}`\n          );\n        }\n      }\n\n      // Allocate the buffer of size = count if the buffer is not provided\n      if (!buffer) {\n        try {\n          buffer = Buffer.alloc(count);\n        } catch (error: any) {\n          throw new Error(\n            `Unable to allocate the buffer of size: ${count}(in bytes). Please try passing your own buffer to the \"downloadToBuffer\" method or try using other methods like \"download\" or \"downloadToFile\".\\t ${error.message}`\n          );\n        }\n      }\n\n      if (buffer.length < count) {\n        throw new RangeError(\n          `The buffer's size should be equal to or larger than the request count of bytes: ${count}`\n        );\n      }\n\n      let transferProgress: number = 0;\n      const batch = new Batch(options.concurrency);\n      for (let off = offset; off < offset + count; off = off + options.blockSize) {\n        batch.addOperation(async () => {\n          // Exclusive chunk end position\n          let chunkEnd = offset + count!;\n          if (off + options.blockSize! < chunkEnd) {\n            chunkEnd = off + options.blockSize!;\n          }\n          const response = await this.download(off, chunkEnd - off, {\n            abortSignal: options.abortSignal,\n            conditions: options.conditions,\n            maxRetryRequests: options.maxRetryRequestsPerBlock,\n            customerProvidedKey: options.customerProvidedKey,\n            tracingOptions: {\n              ...options.tracingOptions,\n              ...convertTracingToRequestOptionsBase(updatedOptions),\n            },\n          });\n          const stream = response.readableStreamBody!;\n          await streamToBuffer(stream, buffer!, off - offset, chunkEnd - offset);\n          // Update progress after block is downloaded, in case of block trying\n          // Could provide finer grained progress updating inside HTTP requests,\n          // only if convenience layer download try is enabled\n          transferProgress += chunkEnd - off;\n          if (options.onProgress) {\n            options.onProgress({ loadedBytes: transferProgress });\n          }\n        });\n      }\n      await batch.do();\n      return buffer;\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob to a local file.\n   * Fails if the the given file path already exits.\n   * Offset and count are optional, pass 0 and undefined respectively to download the entire blob.\n   *\n   * @param filePath -\n   * @param offset - From which position of the block blob to download.\n   * @param count - How much data to be downloaded. Will download to the end when passing undefined.\n   * @param options - Options to Blob download options.\n   * @returns The response data for blob download operation,\n   *                                                 but with readableStreamBody set to undefined since its\n   *                                                 content is already read and written into a local file\n   *                                                 at the specified path.\n   */\n  public async downloadToFile(\n    filePath: string,\n    offset: number = 0,\n    count?: number,\n    options: BlobDownloadOptions = {}\n  ): Promise<BlobDownloadResponseParsed> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-downloadToFile\", options);\n    try {\n      const response = await this.download(offset, count, {\n        ...options,\n        tracingOptions: {\n          ...options.tracingOptions,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        },\n      });\n      if (response.readableStreamBody) {\n        await readStreamToLocalFile(response.readableStreamBody, filePath);\n      }\n\n      // The stream is no longer accessible so setting it to undefined.\n      (response as any).blobDownloadStream = undefined;\n      return response;\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  private getBlobAndContainerNamesFromUrl(): { blobName: string; containerName: string } {\n    let containerName;\n    let blobName;\n    try {\n      //  URL may look like the following\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt\";\n      // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername/blob`\n      // http://localhost:10001/devstoreaccount1/containername/blob\n\n      const parsedUrl = URLBuilder.parse(this.url);\n\n      if (parsedUrl.getHost()!.split(\".\")[1] === \"blob\") {\n        // \"https://myaccount.blob.core.windows.net/containername/blob\".\n        // .getPath() -> /containername/blob\n        const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)(/(.*))?\");\n        containerName = pathComponents![1];\n        blobName = pathComponents![3];\n      } else if (isIpEndpointStyle(parsedUrl)) {\n        // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername/blob\n        // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername/blob\n        // .getPath() -> /devstoreaccount1/containername/blob\n        const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)/([^/]*)(/(.*))?\");\n        containerName = pathComponents![2];\n        blobName = pathComponents![4];\n      } else {\n        // \"https://customdomain.com/containername/blob\".\n        // .getPath() -> /containername/blob\n        const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)(/(.*))?\");\n        containerName = pathComponents![1];\n        blobName = pathComponents![3];\n      }\n\n      // decode the encoded blobName, containerName - to get all the special characters that might be present in them\n      containerName = decodeURIComponent(containerName);\n      blobName = decodeURIComponent(blobName);\n\n      // Azure Storage Server will replace \"\\\" with \"/\" in the blob names\n      //   doing the same in the SDK side so that the user doesn't have to replace \"\\\" instances in the blobName\n      blobName = blobName.replace(/\\\\/g, \"/\");\n\n      if (!containerName) {\n        throw new Error(\"Provided containerName is invalid.\");\n      }\n\n      return { blobName, containerName };\n    } catch (error: any) {\n      throw new Error(\"Unable to extract blobName and containerName with provided information.\");\n    }\n  }\n\n  /**\n   * Asynchronously copies a blob to a destination within the storage account.\n   * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n   * a committed blob in any Azure storage account.\n   * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n   * an Azure file in any Azure storage account.\n   * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n   * operation to copy from another storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n   *\n   * @param copySource - url to the source Azure Blob/File.\n   * @param options - Optional options to the Blob Start Copy From URL operation.\n   */\n  private async startCopyFromURL(\n    copySource: string,\n    options: BlobStartCopyFromURLOptions = {}\n  ): Promise<BlobStartCopyFromURLResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-startCopyFromURL\", options);\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n\n    try {\n      return await this.blobContext.startCopyFromURL(copySource, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        metadata: options.metadata,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        sourceModifiedAccessConditions: {\n          sourceIfMatch: options.sourceConditions.ifMatch,\n          sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n          sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n          sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince,\n          sourceIfTags: options.sourceConditions.tagConditions,\n        },\n        immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n        immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n        legalHold: options.legalHold,\n        rehydratePriority: options.rehydratePriority,\n        tier: toAccessTier(options.tier),\n        blobTagsString: toBlobTagsString(options.tags),\n        sealBlob: options.sealBlob,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Only available for BlobClient constructed with a shared key credential.\n   *\n   * Generates a Blob Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasUrl(options: BlobGenerateSasUrlOptions): Promise<string> {\n    return new Promise((resolve) => {\n      if (!(this.credential instanceof StorageSharedKeyCredential)) {\n        throw new RangeError(\n          \"Can only generate the SAS when the client is initialized with a shared key credential\"\n        );\n      }\n\n      const sas = generateBlobSASQueryParameters(\n        {\n          containerName: this._containerName,\n          blobName: this._name,\n          snapshotTime: this._snapshot,\n          versionId: this._versionId,\n          ...options,\n        },\n        this.credential\n      ).toString();\n\n      resolve(appendToURLQuery(this.url, sas));\n    });\n  }\n\n  /**\n   * Delete the immutablility policy on the blob.\n   *\n   * @param options - Optional options to delete immutability policy on the blob.\n   */\n  public async deleteImmutabilityPolicy(\n    options?: BlobDeleteImmutabilityPolicyOptions\n  ): Promise<BlobDeleteImmutabilityPolicyResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-deleteImmutabilityPolicy\", options);\n    try {\n      return await this.blobContext.deleteImmutabilityPolicy({\n        abortSignal: options?.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Set immutablility policy on the blob.\n   *\n   * @param options - Optional options to set immutability policy on the blob.\n   */\n  public async setImmutabilityPolicy(\n    immutabilityPolicy: BlobImmutabilityPolicy,\n    options?: BlobSetImmutabilityPolicyOptions\n  ): Promise<BlobSetImmutabilityPolicyResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-setImmutabilityPolicy\", options);\n    try {\n      return await this.blobContext.setImmutabilityPolicy({\n        abortSignal: options?.abortSignal,\n        immutabilityPolicyExpiry: immutabilityPolicy.expiriesOn,\n        immutabilityPolicyMode: immutabilityPolicy.policyMode,\n        modifiedAccessConditions: options?.modifiedAccessCondition,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Set legal hold on the blob.\n   *\n   * @param options - Optional options to set legal hold on the blob.\n   */\n  public async setLegalHold(\n    legalHoldEnabled: boolean,\n    options?: BlobSetLegalHoldOptions\n  ): Promise<BlobSetLegalHoldResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobClient-setLegalHold\", options);\n    try {\n      return await this.blobContext.setLegalHold(legalHoldEnabled, {\n        abortSignal: options?.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * Options to configure {@link AppendBlobClient.create} operation.\n */\nexport interface AppendBlobCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Conditions to meet when creating append blobs.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when creating append blobs. A common header\n   * to set is `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure {@link AppendBlobClient.createIfNotExists} operation.\n */\nexport interface AppendBlobCreateIfNotExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * HTTP headers to set when creating append blobs. A common header to set is\n   * `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n}\n\n/**\n * Options to configure {@link AppendBlobClient.seal} operation.\n */\nexport interface AppendBlobSealOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet.\n   */\n  conditions?: AppendBlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link AppendBlobClient.appendBlock} operation.\n */\nexport interface AppendBlobAppendBlockOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when appending append blob blocks.\n   */\n  conditions?: AppendBlobRequestConditions;\n  /**\n   * Callback to receive events on the progress of append block operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the append block content. This hash is used to verify the integrity of the append block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link AppendBlobClient.appendBlockFromURL} operation.\n */\nexport interface AppendBlobAppendBlockFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when appending append blob blocks.\n   */\n  conditions?: AppendBlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: MatchConditions & ModificationConditions;\n  /**\n   * An MD5 hash of the append block content from the URI.\n   * This hash is used to verify the integrity of the append block during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the append block content from the URI.\n   * This hash is used to verify the integrity of the append block during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * Contains response data for the {@link appendBlobClient.createIfNotExists} operation.\n */\nexport interface AppendBlobCreateIfNotExistsResponse extends AppendBlobCreateResponse {\n  /**\n   * Indicate whether the blob is successfully created. Is false when the blob is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * AppendBlobClient defines a set of operations applicable to append blobs.\n */\nexport class AppendBlobClient extends BlobClient {\n  /**\n   * appendBlobsContext provided by protocol layer.\n   */\n  private appendBlobContext: AppendBlob;\n\n  /**\n   *\n   * Creates an instance of AppendBlobClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of AppendBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of AppendBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)      url = urlOrConnectionString;\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.appendBlobContext = new AppendBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new AppendBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new AppendBlobClient object identical to the source but with the specified snapshot timestamp.\n   */\n  public withSnapshot(snapshot: string): AppendBlobClient {\n    return new AppendBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param options - Options to the Append Block Create operation.\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const appendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await appendBlobClient.create();\n   * ```\n   */\n  public async create(options: AppendBlobCreateOptions = {}): Promise<AppendBlobCreateResponse> {\n    const { span, updatedOptions } = createSpan(\"AppendBlobClient-create\", options);\n    options.conditions = options.conditions || {};\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n\n      return await this.appendBlobContext.create(0, {\n        abortSignal: options.abortSignal,\n        blobHttpHeaders: options.blobHTTPHeaders,\n        leaseAccessConditions: options.conditions,\n        metadata: options.metadata,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n        immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n        legalHold: options.legalHold,\n        blobTagsString: toBlobTagsString(options.tags),\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n   * If the blob with the same name already exists, the content of the existing blob will remain unchanged.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param options -\n   */\n  public async createIfNotExists(\n    options: AppendBlobCreateIfNotExistsOptions = {}\n  ): Promise<AppendBlobCreateIfNotExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"AppendBlobClient-createIfNotExists\", options);\n    const conditions = { ifNoneMatch: ETagAny };\n    try {\n      const res = await this.create({\n        ...updatedOptions,\n        conditions,\n      });\n      return {\n        succeeded: true,\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n      };\n    } catch (e: any) {\n      if (e.details?.errorCode === \"BlobAlreadyExists\") {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when creating a blob only if it does not already exist.\",\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response,\n        };\n      }\n\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Seals the append blob, making it read only.\n   *\n   * @param options -\n   */\n  public async seal(options: AppendBlobSealOptions = {}): Promise<AppendBlobAppendBlockResponse> {\n    const { span, updatedOptions } = createSpan(\"AppendBlobClient-seal\", options);\n    options.conditions = options.conditions || {};\n    try {\n      return await this.appendBlobContext.seal({\n        abortSignal: options.abortSignal,\n        appendPositionAccessConditions: options.conditions,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Commits a new block of data to the end of the existing append blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/append-block\n   *\n   * @param body - Data to be appended.\n   * @param contentLength - Length of the body in bytes.\n   * @param options - Options to the Append Block operation.\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello World!\";\n   *\n   * // Create a new append blob and append data to the blob.\n   * const newAppendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await newAppendBlobClient.create();\n   * await newAppendBlobClient.appendBlock(content, content.length);\n   *\n   * // Append data to an existing append blob.\n   * const existingAppendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await existingAppendBlobClient.appendBlock(content, content.length);\n   * ```\n   */\n  public async appendBlock(\n    body: HttpRequestBody,\n    contentLength: number,\n    options: AppendBlobAppendBlockOptions = {}\n  ): Promise<AppendBlobAppendBlockResponse> {\n    const { span, updatedOptions } = createSpan(\"AppendBlobClient-appendBlock\", options);\n    options.conditions = options.conditions || {};\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n\n      return await this.appendBlobContext.appendBlock(contentLength, body, {\n        abortSignal: options.abortSignal,\n        appendPositionAccessConditions: options.conditions,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        requestOptions: {\n          onUploadProgress: options.onProgress,\n        },\n        transactionalContentMD5: options.transactionalContentMD5,\n        transactionalContentCrc64: options.transactionalContentCrc64,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob\n   * where the contents are read from a source url.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/append-block-from-url\n   *\n   * @param sourceURL -\n   *                 The url to the blob that will be the source of the copy. A source blob in the same storage account can\n   *                 be authenticated via Shared Key. However, if the source is a blob in another account, the source blob\n   *                 must either be public or must be authenticated via a shared access signature. If the source blob is\n   *                 public, no authentication is required to perform the operation.\n   * @param sourceOffset - Offset in source to be appended\n   * @param count - Number of bytes to be appended as a block\n   * @param options -\n   */\n  public async appendBlockFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    count: number,\n    options: AppendBlobAppendBlockFromURLOptions = {}\n  ): Promise<AppendBlobAppendBlockFromUrlResponse> {\n    const { span, updatedOptions } = createSpan(\"AppendBlobClient-appendBlockFromURL\", options);\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n\n      return await this.appendBlobContext.appendBlockFromUrl(sourceURL, 0, {\n        abortSignal: options.abortSignal,\n        sourceRange: rangeToString({ offset: sourceOffset, count }),\n        sourceContentMD5: options.sourceContentMD5,\n        sourceContentCrc64: options.sourceContentCrc64,\n        leaseAccessConditions: options.conditions,\n        appendPositionAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        sourceModifiedAccessConditions: {\n          sourceIfMatch: options.sourceConditions.ifMatch,\n          sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n          sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n          sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince,\n        },\n        copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * Options to configure {@link BlockBlobClient.upload} operation.\n */\nexport interface BlockBlobUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when uploading to the block blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when uploading to a block blob. A common header to set is\n   * `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when uploading to a block blob.\n   */\n  metadata?: Metadata;\n  /**\n   * Callback to receive events on the progress of upload operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.syncUploadFromURL} operation.\n */\nexport interface BlockBlobSyncUploadFromURLOptions extends CommonOptions {\n  /**\n   * Server timeout in seconds.\n   * For more information, @see https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\n   */\n  timeoutInSeconds?: number;\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: Metadata;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n  /**\n   * Optional, default is true.  Indicates if properties from the source blob should be copied.\n   */\n  copySourceBlobProperties?: boolean;\n  /**\n   * HTTP headers to set when uploading to a block blob.\n   *\n   * A common header to set is `blobContentType`, enabling the browser to provide functionality\n   * based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Conditions to meet for the destination Azure Blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Conditions to meet for the source Azure Blob.\n   */\n  sourceConditions?: ModifiedAccessConditions;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n  /**\n   * Optional, default 'replace'.  Indicates if source tags should be copied or replaced with the tags specified by {@link tags}.\n   */\n  copySourceTags?: BlobCopySourceTags;\n}\n\n/**\n * Blob query error type.\n */\nexport interface BlobQueryError {\n  /**\n   * Whether error is fatal. Fatal error will stop query.\n   */\n  isFatal: boolean;\n  /**\n   * Error name.\n   */\n  name: string;\n  /**\n   * Position in bytes of the query.\n   */\n  position: number;\n  /**\n   * Error description.\n   */\n  description: string;\n}\n\n/**\n * Options to query blob with JSON format.\n */\nexport interface BlobQueryJsonTextConfiguration {\n  /**\n   * Record separator.\n   */\n  recordSeparator: string;\n  /**\n   * Query for a JSON format blob.\n   */\n  kind: \"json\";\n}\n\n/**\n * Options to query blob with CSV format.\n */\nexport interface BlobQueryCsvTextConfiguration {\n  /**\n   * Record separator.\n   */\n  recordSeparator: string;\n  /**\n   * Query for a CSV format blob.\n   */\n  kind: \"csv\";\n  /**\n   * Column separator. Default is \",\".\n   */\n  columnSeparator?: string;\n  /**\n   * Field quote.\n   */\n  fieldQuote?: string;\n  /**\n   * Escape character.\n   */\n  escapeCharacter?: string;\n  /**\n   * Has headers. Default is false.\n   */\n  hasHeaders?: boolean;\n}\n\n/**\n * Options to query blob with Apache Arrow format. Only valid for {@link BlockBlobQueryOptions.outputTextConfiguration}.\n */\nexport interface BlobQueryArrowConfiguration {\n  /**\n   * Kind.\n   */\n  kind: \"arrow\";\n\n  /**\n   * List of {@link BlobQueryArrowField} describing the schema of the data.\n   */\n  schema: BlobQueryArrowField[];\n}\n\n/**\n * Options to query blob with Parquet format. Only valid for {@link BlockBlobQueryOptions.inputTextConfiguration}.\n */\nexport interface BlobQueryParquetConfiguration {\n  /**\n   * Kind.\n   */\n  kind: \"parquet\";\n}\n\n/**\n * Options to configure {@link BlockBlobClient.query} operation.\n */\nexport interface BlockBlobQueryOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Configurations for the query input.\n   */\n  inputTextConfiguration?:\n    | BlobQueryJsonTextConfiguration\n    | BlobQueryCsvTextConfiguration\n    | BlobQueryParquetConfiguration;\n  /**\n   * Configurations for the query output.\n   */\n  outputTextConfiguration?:\n    | BlobQueryJsonTextConfiguration\n    | BlobQueryCsvTextConfiguration\n    | BlobQueryArrowConfiguration;\n  /**\n   * Callback to receive events on the progress of query operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Callback to receive error events during the query operaiton.\n   */\n  onError?: (error: BlobQueryError) => void;\n  /**\n   * Conditions to meet when uploading to the block blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.stageBlock} operation.\n */\nexport interface BlockBlobStageBlockOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n  /**\n   * Callback to receive events on the progress of stage block operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentMD5?: Uint8Array;\n\n  /**\n   * A CRC64 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.stageBlockFromURL} operation.\n */\nexport interface BlockBlobStageBlockFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the bytes of the source Blob/File to upload.\n   * If not specified, the entire content is uploaded as a single block.\n   */\n  range?: Range;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n  /**\n   * An MD5 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.commitBlockList} operation.\n */\nexport interface BlockBlobCommitBlockListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when committing the block list.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when committing block list.\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when committing block list.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.getBlockList} operation.\n */\nexport interface BlockBlobGetBlockListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions & TagConditions;\n}\n\n/**\n * Option interface for the {@link BlockBlobClient.uploadStream} operation.\n */\nexport interface BlockBlobUploadStreamOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Blob HTTP Headers.\n   *\n   * A common header to set is `blobContentType`, enabling the\n   * browser to provide functionality based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n\n  /**\n   * Metadata of block blob.\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n}\n/**\n * Option interface for {@link BlockBlobClient.uploadFile} and {@link BlockBlobClient.uploadSeekableStream}.\n */\nexport interface BlockBlobParallelUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Destination block blob size in bytes.\n   */\n  blockSize?: number;\n\n  /**\n   * Blob size threshold in bytes to start concurrency uploading.\n   * Default value is 256MB, blob size less than this option will\n   * be uploaded via one I/O operation without concurrency.\n   * You can customize a value less equal than the default value.\n   */\n  maxSingleShotSize?: number;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Blob HTTP Headers. A common header to set is\n   * `blobContentType`, enabling the browser to provide\n   * functionality based on file type.\n   *\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n\n  /**\n   * Metadata of block blob.\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Concurrency of parallel uploading. Must be greater than or equal to 0.\n   */\n  concurrency?: number;\n\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: BlockBlobTier | string;\n}\n\n/**\n * Response type for {@link BlockBlobClient.uploadFile}, {@link BlockBlobClient.uploadStream}, and\n * {@link BlockBlobClient.uploadBrowserDate}.\n */\nexport type BlobUploadCommonResponse = BlockBlobUploadHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse;\n};\n\n/**\n * BlockBlobClient defines a set of operations applicable to block blobs.\n */\nexport class BlockBlobClient extends BlobClient {\n  /**\n   * blobContext provided by protocol layer.\n   *\n   * Note. Ideally BlobClient should set BlobClient.blobContext to protected. However, API\n   * extractor has issue blocking that. Here we redecelare _blobContext in BlockBlobClient.\n   */\n  private _blobContext: StorageBlob;\n\n  /**\n   * blockBlobContext provided by protocol layer.\n   */\n  private blockBlobContext: BlockBlob;\n\n  /**\n   *\n   * Creates an instance of BlockBlobClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of BlockBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of BlockBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.blockBlobContext = new BlockBlob(this.storageClientContext);\n    this._blobContext = new StorageBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new BlockBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new BlockBlobClient object identical to the source but with the specified snapshot timestamp.\n   */\n  public withSnapshot(snapshot: string): BlockBlobClient {\n    return new BlockBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Quick query for a JSON or CSV formatted blob.\n   *\n   * Example usage (Node.js):\n   *\n   * ```js\n   * // Query and convert a blob to a string\n   * const queryBlockBlobResponse = await blockBlobClient.query(\"select * from BlobStorage\");\n   * const downloaded = (await streamToBuffer(queryBlockBlobResponse.readableStreamBody)).toString();\n   * console.log(\"Query blob content:\", downloaded);\n   *\n   * async function streamToBuffer(readableStream) {\n   *   return new Promise((resolve, reject) => {\n   *     const chunks = [];\n   *     readableStream.on(\"data\", (data) => {\n   *       chunks.push(data instanceof Buffer ? data : Buffer.from(data));\n   *     });\n   *     readableStream.on(\"end\", () => {\n   *       resolve(Buffer.concat(chunks));\n   *     });\n   *     readableStream.on(\"error\", reject);\n   *   });\n   * }\n   * ```\n   *\n   * @param query -\n   * @param options -\n   */\n  public async query(\n    query: string,\n    options: BlockBlobQueryOptions = {}\n  ): Promise<BlobDownloadResponseModel> {\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n\n    const { span, updatedOptions } = createSpan(\"BlockBlobClient-query\", options);\n\n    try {\n      if (!isNode) {\n        throw new Error(\"This operation currently is only supported in Node.js.\");\n      }\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      const response = await this._blobContext.query({\n        abortSignal: options.abortSignal,\n        queryRequest: {\n          queryType: \"SQL\",\n          expression: query,\n          inputSerialization: toQuerySerialization(options.inputTextConfiguration),\n          outputSerialization: toQuerySerialization(options.outputTextConfiguration),\n        },\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        cpkInfo: options.customerProvidedKey,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n      return new BlobQueryResponse(response, {\n        abortSignal: options.abortSignal,\n        onProgress: options.onProgress,\n        onError: options.onError,\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use {@link stageBlock} and {@link commitBlockList}.\n   *\n   * This is a non-parallel uploading method, please use {@link uploadFile},\n   * {@link uploadStream} or {@link uploadBrowserData} for better performance\n   * with concurrency uploading.\n   *\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param options - Options to the Block Blob Upload operation.\n   * @returns Response data for the Block Blob Upload operation.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n   * ```\n   */\n  public async upload(\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobUploadOptions = {}\n  ): Promise<BlockBlobUploadResponse> {\n    options.conditions = options.conditions || {};\n    const { span, updatedOptions } = createSpan(\"BlockBlobClient-upload\", options);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blockBlobContext.upload(contentLength, body, {\n        abortSignal: options.abortSignal,\n        blobHttpHeaders: options.blobHTTPHeaders,\n        leaseAccessConditions: options.conditions,\n        metadata: options.metadata,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        requestOptions: {\n          onUploadProgress: options.onProgress,\n        },\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n        immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n        legalHold: options.legalHold,\n        tier: toAccessTier(options.tier),\n        blobTagsString: toBlobTagsString(options.tags),\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new Block Blob where the contents of the blob are read from a given URL.\n   * This API is supported beginning with the 2020-04-08 version. Partial updates\n   * are not supported with Put Blob from URL; the content of an existing blob is overwritten with\n   * the content of the new blob.  To perform partial updates to a block blob’s contents using a\n   * source URL, use {@link stageBlockFromURL} and {@link commitBlockList}.\n   *\n   * @param sourceURL - Specifies the URL of the blob. The value\n   *                           may be a URL of up to 2 KB in length that specifies a blob.\n   *                           The value should be URL-encoded as it would appear\n   *                           in a request URI. The source blob must either be public\n   *                           or must be authenticated via a shared access signature.\n   *                           If the source blob is public, no authentication is required\n   *                           to perform the operation. Here are some examples of source object URLs:\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param options - Optional parameters.\n   */\n\n  public async syncUploadFromURL(\n    sourceURL: string,\n    options: BlockBlobSyncUploadFromURLOptions = {}\n  ): Promise<BlockBlobPutBlobFromUrlResponse> {\n    options.conditions = options.conditions || {};\n    const { span, updatedOptions } = createSpan(\"BlockBlobClient-syncUploadFromURL\", options);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blockBlobContext.putBlobFromUrl(0, sourceURL, {\n        ...options,\n        blobHttpHeaders: options.blobHTTPHeaders,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions.tagConditions,\n        },\n        sourceModifiedAccessConditions: {\n          sourceIfMatch: options.sourceConditions?.ifMatch,\n          sourceIfModifiedSince: options.sourceConditions?.ifModifiedSince,\n          sourceIfNoneMatch: options.sourceConditions?.ifNoneMatch,\n          sourceIfUnmodifiedSince: options.sourceConditions?.ifUnmodifiedSince,\n          sourceIfTags: options.sourceConditions?.tagConditions,\n        },\n        cpkInfo: options.customerProvidedKey,\n        copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n        tier: toAccessTier(options.tier),\n        blobTagsString: toBlobTagsString(options.tags),\n        copySourceTags: options.copySourceTags,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Uploads the specified block to the block blob's \"staging area\" to be later\n   * committed by a call to commitBlockList.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-block\n   *\n   * @param blockId - A 64-byte value that is base64-encoded\n   * @param body - Data to upload to the staging area.\n   * @param contentLength - Number of bytes to upload.\n   * @param options - Options to the Block Blob Stage Block operation.\n   * @returns Response data for the Block Blob Stage Block operation.\n   */\n  public async stageBlock(\n    blockId: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobStageBlockOptions = {}\n  ): Promise<BlockBlobStageBlockResponse> {\n    const { span, updatedOptions } = createSpan(\"BlockBlobClient-stageBlock\", options);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blockBlobContext.stageBlock(blockId, contentLength, body, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        requestOptions: {\n          onUploadProgress: options.onProgress,\n        },\n        transactionalContentMD5: options.transactionalContentMD5,\n        transactionalContentCrc64: options.transactionalContentCrc64,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The Stage Block From URL operation creates a new block to be committed as part\n   * of a blob where the contents are read from a URL.\n   * This API is available starting in version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\n   *\n   * @param blockId - A 64-byte value that is base64-encoded\n   * @param sourceURL - Specifies the URL of the blob. The value\n   *                           may be a URL of up to 2 KB in length that specifies a blob.\n   *                           The value should be URL-encoded as it would appear\n   *                           in a request URI. The source blob must either be public\n   *                           or must be authenticated via a shared access signature.\n   *                           If the source blob is public, no authentication is required\n   *                           to perform the operation. Here are some examples of source object URLs:\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param offset - From which position of the blob to download, greater than or equal to 0\n   * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined\n   * @param options - Options to the Block Blob Stage Block From URL operation.\n   * @returns Response data for the Block Blob Stage Block From URL operation.\n   */\n  public async stageBlockFromURL(\n    blockId: string,\n    sourceURL: string,\n    offset: number = 0,\n    count?: number,\n    options: BlockBlobStageBlockFromURLOptions = {}\n  ): Promise<BlockBlobStageBlockFromURLResponse> {\n    const { span, updatedOptions } = createSpan(\"BlockBlobClient-stageBlockFromURL\", options);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blockBlobContext.stageBlockFromURL(blockId, 0, sourceURL, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        sourceContentMD5: options.sourceContentMD5,\n        sourceContentCrc64: options.sourceContentCrc64,\n        sourceRange: offset === 0 && !count ? undefined : rangeToString({ offset, count }),\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Writes a blob by specifying the list of block IDs that make up the blob.\n   * In order to be written as part of a blob, a block must have been successfully written\n   * to the server in a prior {@link stageBlock} operation. You can call {@link commitBlockList} to\n   * update a blob by uploading only those blocks that have changed, then committing the new and existing\n   * blocks together. Any blocks not specified in the block list and permanently deleted.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-block-list\n   *\n   * @param blocks -  Array of 64-byte value that is base64-encoded\n   * @param options - Options to the Block Blob Commit Block List operation.\n   * @returns Response data for the Block Blob Commit Block List operation.\n   */\n  public async commitBlockList(\n    blocks: string[],\n    options: BlockBlobCommitBlockListOptions = {}\n  ): Promise<BlockBlobCommitBlockListResponse> {\n    options.conditions = options.conditions || {};\n    const { span, updatedOptions } = createSpan(\"BlockBlobClient-commitBlockList\", options);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blockBlobContext.commitBlockList(\n        { latest: blocks },\n        {\n          abortSignal: options.abortSignal,\n          blobHttpHeaders: options.blobHTTPHeaders,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n          immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n          legalHold: options.legalHold,\n          tier: toAccessTier(options.tier),\n          blobTagsString: toBlobTagsString(options.tags),\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        }\n      );\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns the list of blocks that have been uploaded as part of a block blob\n   * using the specified block list filter.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-block-list\n   *\n   * @param listType - Specifies whether to return the list of committed blocks,\n   *                                        the list of uncommitted blocks, or both lists together.\n   * @param options - Options to the Block Blob Get Block List operation.\n   * @returns Response data for the Block Blob Get Block List operation.\n   */\n  public async getBlockList(\n    listType: BlockListType,\n    options: BlockBlobGetBlockListOptions = {}\n  ): Promise<BlockBlobGetBlockListResponse> {\n    const { span, updatedOptions } = createSpan(\"BlockBlobClient-getBlockList\", options);\n    try {\n      const res = await this.blockBlobContext.getBlockList(listType, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      if (!res.committedBlocks) {\n        res.committedBlocks = [];\n      }\n\n      if (!res.uncommittedBlocks) {\n        res.uncommittedBlocks = [];\n      }\n\n      return res;\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  // High level functions\n\n  /**\n   * Uploads a Buffer(Node.js)/Blob(browsers)/ArrayBuffer/ArrayBufferView object to a BlockBlob.\n   *\n   * When data length is no more than the specifiled {@link BlockBlobParallelUploadOptions.maxSingleShotSize} (default is\n   * {@link BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}), this method will use 1 {@link upload} call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}\n   * to commit the block list.\n   *\n   * A common {@link BlockBlobParallelUploadOptions.blobHTTPHeaders} option to set is\n   * `blobContentType`, enabling the browser to provide\n   * functionality based on file type.\n   *\n   * @param data - Buffer(Node.js), Blob, ArrayBuffer or ArrayBufferView\n   * @param options -\n   */\n  public async uploadData(\n    data: Buffer | Blob | ArrayBuffer | ArrayBufferView,\n    options: BlockBlobParallelUploadOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    const { span, updatedOptions } = createSpan(\"BlockBlobClient-uploadData\", options);\n    try {\n      if (isNode) {\n        let buffer: Buffer;\n        if (data instanceof Buffer) {\n          buffer = data;\n        } else if (data instanceof ArrayBuffer) {\n          buffer = Buffer.from(data);\n        } else {\n          data = data as ArrayBufferView;\n          buffer = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n        }\n\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Buffer => buffer.slice(offset, offset + size),\n          buffer.byteLength,\n          updatedOptions\n        );\n      } else {\n        const browserBlob = new Blob([data]);\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Blob => browserBlob.slice(offset, offset + size),\n          browserBlob.size,\n          updatedOptions\n        );\n      }\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN BROWSERS.\n   *\n   * Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block blob.\n   *\n   * When buffer length lesser than or equal to 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call\n   * {@link commitBlockList} to commit the block list.\n   *\n   * A common {@link BlockBlobParallelUploadOptions.blobHTTPHeaders} option to set is\n   * `blobContentType`, enabling the browser to provide\n   * functionality based on file type.\n   *\n   * @deprecated Use {@link uploadData} instead.\n   *\n   * @param browserData - Blob, File, ArrayBuffer or ArrayBufferView\n   * @param options - Options to upload browser data.\n   * @returns Response data for the Blob Upload operation.\n   */\n  public async uploadBrowserData(\n    browserData: Blob | ArrayBuffer | ArrayBufferView,\n    options: BlockBlobParallelUploadOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    const { span, updatedOptions } = createSpan(\"BlockBlobClient-uploadBrowserData\", options);\n    try {\n      const browserBlob = new Blob([browserData]);\n      return await this.uploadSeekableInternal(\n        (offset: number, size: number): Blob => browserBlob.slice(offset, offset + size),\n        browserBlob.size,\n        updatedOptions\n      );\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   *\n   * Uploads data to block blob. Requires a bodyFactory as the data source,\n   * which need to return a {@link HttpRequestBody} object with the offset and size provided.\n   *\n   * When data length is no more than the specified {@link BlockBlobParallelUploadOptions.maxSingleShotSize} (default is\n   * {@link BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}), this method will use 1 {@link upload} call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}\n   * to commit the block list.\n   *\n   * @param bodyFactory -\n   * @param size - size of the data to upload.\n   * @param options - Options to Upload to Block Blob operation.\n   * @returns Response data for the Blob Upload operation.\n   */\n  private async uploadSeekableInternal(\n    bodyFactory: (offset: number, size: number) => HttpRequestBody,\n    size: number,\n    options: BlockBlobParallelUploadOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    if (!options.blockSize) {\n      options.blockSize = 0;\n    }\n    if (options.blockSize < 0 || options.blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n      throw new RangeError(\n        `blockSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES}`\n      );\n    }\n\n    if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {\n      options.maxSingleShotSize = BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n    }\n    if (\n      options.maxSingleShotSize < 0 ||\n      options.maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES\n    ) {\n      throw new RangeError(\n        `maxSingleShotSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}`\n      );\n    }\n\n    if (options.blockSize === 0) {\n      if (size > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES * BLOCK_BLOB_MAX_BLOCKS) {\n        throw new RangeError(`${size} is too larger to upload to a block blob.`);\n      }\n      if (size > options.maxSingleShotSize) {\n        options.blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n        if (options.blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n          options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n        }\n      }\n    }\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    const { span, updatedOptions } = createSpan(\"BlockBlobClient-uploadSeekableInternal\", options);\n\n    try {\n      if (size <= options.maxSingleShotSize) {\n        return await this.upload(bodyFactory(0, size), size, updatedOptions);\n      }\n\n      const numBlocks: number = Math.floor((size - 1) / options.blockSize) + 1;\n      if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n        throw new RangeError(\n          `The buffer's size is too big or the BlockSize is too small;` +\n            `the number of blocks must be <= ${BLOCK_BLOB_MAX_BLOCKS}`\n        );\n      }\n\n      const blockList: string[] = [];\n      const blockIDPrefix = generateUuid();\n      let transferProgress: number = 0;\n\n      const batch = new Batch(options.concurrency);\n      for (let i = 0; i < numBlocks; i++) {\n        batch.addOperation(async (): Promise<any> => {\n          const blockID = generateBlockID(blockIDPrefix, i);\n          const start = options.blockSize! * i;\n          const end = i === numBlocks - 1 ? size : start + options.blockSize!;\n          const contentLength = end - start;\n          blockList.push(blockID);\n          await this.stageBlock(blockID, bodyFactory(start, contentLength), contentLength, {\n            abortSignal: options.abortSignal,\n            conditions: options.conditions,\n            encryptionScope: options.encryptionScope,\n            tracingOptions: updatedOptions.tracingOptions,\n          });\n          // Update progress after block is successfully uploaded to server, in case of block trying\n          // TODO: Hook with convenience layer progress event in finer level\n          transferProgress += contentLength;\n          if (options.onProgress) {\n            options.onProgress!({\n              loadedBytes: transferProgress,\n            });\n          }\n        });\n      }\n      await batch.do();\n\n      return this.commitBlockList(blockList, updatedOptions);\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a local file in blocks to a block blob.\n   *\n   * When file size lesser than or equal to 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n   * to commit the block list.\n   *\n   * @param filePath - Full path of local file\n   * @param options - Options to Upload to Block Blob operation.\n   * @returns Response data for the Blob Upload operation.\n   */\n  public async uploadFile(\n    filePath: string,\n    options: BlockBlobParallelUploadOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    const { span, updatedOptions } = createSpan(\"BlockBlobClient-uploadFile\", options);\n    try {\n      const size = (await fsStat(filePath)).size;\n      return await this.uploadSeekableInternal(\n        (offset, count) => {\n          return () =>\n            fsCreateReadStream(filePath, {\n              autoClose: true,\n              end: count ? offset + count - 1 : Infinity,\n              start: offset,\n            });\n        },\n        size,\n        {\n          ...options,\n          tracingOptions: {\n            ...options!.tracingOptions,\n            ...convertTracingToRequestOptionsBase(updatedOptions),\n          },\n        }\n      );\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a Node.js Readable stream into block blob.\n   *\n   * PERFORMANCE IMPROVEMENT TIPS:\n   * * Input stream highWaterMark is better to set a same value with bufferSize\n   *    parameter, which will avoid Buffer.concat() operations.\n   *\n   * @param stream - Node.js Readable stream\n   * @param bufferSize - Size of every buffer allocated, also the block size in the uploaded block blob. Default value is 8MB\n   * @param maxConcurrency -  Max concurrency indicates the max number of buffers that can be allocated,\n   *                                 positive correlation with max uploading concurrency. Default value is 5\n   * @param options - Options to Upload Stream to Block Blob operation.\n   * @returns Response data for the Blob Upload operation.\n   */\n  public async uploadStream(\n    stream: Readable,\n    bufferSize: number = DEFAULT_BLOCK_BUFFER_SIZE_BYTES,\n    maxConcurrency: number = 5,\n    options: BlockBlobUploadStreamOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    const { span, updatedOptions } = createSpan(\"BlockBlobClient-uploadStream\", options);\n\n    try {\n      let blockNum = 0;\n      const blockIDPrefix = generateUuid();\n      let transferProgress: number = 0;\n      const blockList: string[] = [];\n\n      const scheduler = new BufferScheduler(\n        stream,\n        bufferSize,\n        maxConcurrency,\n        async (body, length) => {\n          const blockID = generateBlockID(blockIDPrefix, blockNum);\n          blockList.push(blockID);\n          blockNum++;\n\n          await this.stageBlock(blockID, body, length, {\n            conditions: options.conditions,\n            encryptionScope: options.encryptionScope,\n            tracingOptions: updatedOptions.tracingOptions,\n          });\n\n          // Update progress after block is successfully uploaded to server, in case of block trying\n          transferProgress += length;\n          if (options.onProgress) {\n            options.onProgress({ loadedBytes: transferProgress });\n          }\n        },\n        // concurrency should set a smaller value than maxConcurrency, which is helpful to\n        // reduce the possibility when a outgoing handler waits for stream data, in\n        // this situation, outgoing handlers are blocked.\n        // Outgoing queue shouldn't be empty.\n        Math.ceil((maxConcurrency / 4) * 3)\n      );\n      await scheduler.do();\n\n      return await this.commitBlockList(blockList, {\n        ...options,\n        tracingOptions: {\n          ...options!.tracingOptions,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        },\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * Options to configure the {@link PageBlobClient.create} operation.\n */\nexport interface PageBlobCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when creating a page blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * A user-controlled value that can be used to track requests.\n   * The value must be between 0 and 2^63 - 1. The default value is 0.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * HTTP headers to set when creating a page blob.\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: PremiumPageBlobTier | string;\n  /**\n   * Blob tags.\n   */\n  tags?: Tags;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.createIfNotExists} operation.\n */\nexport interface PageBlobCreateIfNotExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A user-controlled value that can be used to track requests.\n   * The value must be between 0 and 2^63 - 1. The default value is 0.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * HTTP headers to set when creating a page blob.\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies immutability policy for a blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  immutabilityPolicy?: BlobImmutabilityPolicy;\n  /**\n   * Optional. Indicates if a legal hold should be placed on the blob.\n   * Note that is parameter is only applicable to a blob within a container that\n   * has version level worm enabled.\n   */\n  legalHold?: boolean;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   */\n  tier?: PremiumPageBlobTier | string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.uploadPages} operation.\n */\nexport interface PageBlobUploadPagesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when uploading pages.\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Callback to receive events on the progress of upload pages operation.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the content. This hash is used to verify the integrity of the content during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content. This hash is used to verify the integrity of the content during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.clearPages} operation.\n */\nexport interface PageBlobClearPagesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when clearing pages.\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.getPageRanges} operation.\n */\nexport interface PageBlobGetPageRangesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure page blob - get page ranges segment operations.\n *\n * See:\n * - {@link PageBlobClient.listPageRangesSegment}\n * - {@link PageBlobClient.listPageRangeItemSegments}\n * - {@link PageBlobClient.listPageRangeItems}\n */\ninterface PageBlobListPageRangesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.listPageRanges} operation.\n */\nexport interface PageBlobListPageRangesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.getRangesDiff} operation.\n */\nexport interface PageBlobGetPageRangesDiffOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges diff.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * (unused)\n   */\n  range?: string;\n}\n\n/**\n * Options to configure page blob - get page ranges diff segment operations.\n *\n * See:\n * - {@link PageBlobClient.listPageRangesDiffSegment}\n * - {@link PageBlobClient.listPageRangeDiffItemSegments}\n * - {@link PageBlobClient.listPageRangeDiffItems}\n */\ninterface PageBlobListPageRangesDiffSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.listPageRangesDiff} operation.\n */\nexport interface PageBlobListPageRangesDiffOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges diff.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.resize} operation.\n */\nexport interface PageBlobResizeOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when resizing a page blob.\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure {@link PageBlobClient.updateSequenceNumber} operation.\n */\nexport interface PageBlobUpdateSequenceNumberOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when updating sequence number.\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.startCopyIncremental} operation.\n */\nexport interface PageBlobStartCopyIncrementalOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when starting a copy incremental operation.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.uploadPagesFromURL} operation.\n */\nexport interface PageBlobUploadPagesFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when updating sequence number.\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   */\n  sourceConditions?: MatchConditions & ModificationConditions;\n  /**\n   * An MD5 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   */\n  encryptionScope?: string;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * Contains response data for the {@link PageBlobClient.createIfNotExists} operation.\n */\nexport interface PageBlobCreateIfNotExistsResponse extends PageBlobCreateResponse {\n  /**\n   * Indicate whether the blob is successfully created. Is false when the blob is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * PageBlobClient defines a set of operations applicable to page blobs.\n */\nexport class PageBlobClient extends BlobClient {\n  /**\n   * pageBlobsContext provided by protocol layer.\n   */\n  private pageBlobContext: PageBlob;\n\n  /**\n   *\n   * Creates an instance of PageBlobClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param blobName - Blob name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of PageBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A Client string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of PageBlobClient.\n   *\n   * @param url - A URL string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          );\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.pageBlobContext = new PageBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new PageBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new PageBlobClient object identical to the source but with the specified snapshot timestamp.\n   */\n  public withSnapshot(snapshot: string): PageBlobClient {\n    return new PageBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a page blob of the specified length. Call uploadPages to upload data\n   * data to a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param size - size of the page blob.\n   * @param options - Options to the Page Blob Create operation.\n   * @returns Response data for the Page Blob Create operation.\n   */\n  public async create(\n    size: number,\n    options: PageBlobCreateOptions = {}\n  ): Promise<PageBlobCreateResponse> {\n    options.conditions = options.conditions || {};\n    const { span, updatedOptions } = createSpan(\"PageBlobClient-create\", options);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.pageBlobContext.create(0, size, {\n        abortSignal: options.abortSignal,\n        blobHttpHeaders: options.blobHTTPHeaders,\n        blobSequenceNumber: options.blobSequenceNumber,\n        leaseAccessConditions: options.conditions,\n        metadata: options.metadata,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        immutabilityPolicyExpiry: options.immutabilityPolicy?.expiriesOn,\n        immutabilityPolicyMode: options.immutabilityPolicy?.policyMode,\n        legalHold: options.legalHold,\n        tier: toAccessTier(options.tier),\n        blobTagsString: toBlobTagsString(options.tags),\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a page blob of the specified length. Call uploadPages to upload data\n   * data to a page blob. If the blob with the same name already exists, the content\n   * of the existing blob will remain unchanged.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param size - size of the page blob.\n   * @param options -\n   */\n  public async createIfNotExists(\n    size: number,\n    options: PageBlobCreateIfNotExistsOptions = {}\n  ): Promise<PageBlobCreateIfNotExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"PageBlobClient-createIfNotExists\", options);\n    try {\n      const conditions = { ifNoneMatch: ETagAny };\n      const res = await this.create(size, {\n        ...options,\n        conditions,\n        tracingOptions: updatedOptions.tracingOptions,\n      });\n      return {\n        succeeded: true,\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n      };\n    } catch (e: any) {\n      if (e.details?.errorCode === \"BlobAlreadyExists\") {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when creating a blob only if it does not already exist.\",\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response,\n        };\n      }\n\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Writes 1 or more pages to the page blob. The start and end offsets must be a multiple of 512.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param body - Data to upload\n   * @param offset - Offset of destination page blob\n   * @param count - Content length of the body, also number of bytes to be uploaded\n   * @param options - Options to the Page Blob Upload Pages operation.\n   * @returns Response data for the Page Blob Upload Pages operation.\n   */\n  public async uploadPages(\n    body: HttpRequestBody,\n    offset: number,\n    count: number,\n    options: PageBlobUploadPagesOptions = {}\n  ): Promise<PageBlobUploadPagesResponse> {\n    options.conditions = options.conditions || {};\n    const { span, updatedOptions } = createSpan(\"PageBlobClient-uploadPages\", options);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.pageBlobContext.uploadPages(count, body, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        requestOptions: {\n          onUploadProgress: options.onProgress,\n        },\n        range: rangeToString({ offset, count }),\n        sequenceNumberAccessConditions: options.conditions,\n        transactionalContentMD5: options.transactionalContentMD5,\n        transactionalContentCrc64: options.transactionalContentCrc64,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the\n   * contents are read from a URL.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url\n   *\n   * @param sourceURL - Specify a URL to the copy source, Shared Access Signature(SAS) maybe needed for authentication\n   * @param sourceOffset - The source offset to copy from. Pass 0 to copy from the beginning of source page blob\n   * @param destOffset - Offset of destination page blob\n   * @param count - Number of bytes to be uploaded from source page blob\n   * @param options -\n   */\n  public async uploadPagesFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    destOffset: number,\n    count: number,\n    options: PageBlobUploadPagesFromURLOptions = {}\n  ): Promise<PageBlobUploadPagesFromURLResponse> {\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n    const { span, updatedOptions } = createSpan(\"PageBlobClient-uploadPagesFromURL\", options);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.pageBlobContext.uploadPagesFromURL(\n        sourceURL,\n        rangeToString({ offset: sourceOffset, count }),\n        0,\n        rangeToString({ offset: destOffset, count }),\n        {\n          abortSignal: options.abortSignal,\n          sourceContentMD5: options.sourceContentMD5,\n          sourceContentCrc64: options.sourceContentCrc64,\n          leaseAccessConditions: options.conditions,\n          sequenceNumberAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          sourceModifiedAccessConditions: {\n            sourceIfMatch: options.sourceConditions.ifMatch,\n            sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n            sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n            sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince,\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        }\n      );\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Frees the specified pages from the page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param offset - Starting byte position of the pages to clear.\n   * @param count - Number of bytes to clear.\n   * @param options - Options to the Page Blob Clear Pages operation.\n   * @returns Response data for the Page Blob Clear Pages operation.\n   */\n  public async clearPages(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobClearPagesOptions = {}\n  ): Promise<PageBlobClearPagesResponse> {\n    options.conditions = options.conditions || {};\n    const { span, updatedOptions } = createSpan(\"PageBlobClient-clearPages\", options);\n    try {\n      return await this.pageBlobContext.clearPages(0, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        range: rangeToString({ offset, count }),\n        sequenceNumberAccessConditions: options.conditions,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns the list of valid page ranges for a page blob or snapshot of a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param options - Options to the Page Blob Get Ranges operation.\n   * @returns Response data for the Page Blob Get Ranges operation.\n   */\n  public async getPageRanges(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobGetPageRangesOptions = {}\n  ): Promise<PageBlobGetPageRangesResponse> {\n    options.conditions = options.conditions || {};\n    const { span, updatedOptions } = createSpan(\"PageBlobClient-getPageRanges\", options);\n    try {\n      return await this.pageBlobContext\n        .getPageRanges({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          range: rangeToString({ offset, count }),\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        })\n        .then(rangeResponseFromModel);\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * getPageRangesSegment returns a single segment of page ranges starting from the\n   * specified Marker. Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call getPageRangesSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to PageBlob Get Page Ranges Segment operation.\n   */\n  private async listPageRangesSegment(\n    offset: number = 0,\n    count?: number,\n    marker?: string,\n    options: PageBlobListPageRangesSegmentOptions = {}\n  ): Promise<PageBlobGetPageRangesResponseModel> {\n    const { span, updatedOptions } = createSpan(\"PageBlobClient-getPageRangesSegment\", options);\n    try {\n      return await this.pageBlobContext.getPageRanges({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        range: rangeToString({ offset, count }),\n        marker: marker,\n        maxPageSize: options.maxPageSize,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n  /**\n   * Returns an AsyncIterableIterator for {@link PageBlobGetPageRangesResponseModel}\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param marker - A string value that identifies the portion of\n   *                          the get of page ranges to be returned with the next getting operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          getting operation did not return all page ranges remaining within the current page.\n   *                          The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of get\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to List Page Ranges operation.\n   */\n  private async *listPageRangeItemSegments(\n    offset: number = 0,\n    count?: number,\n    marker?: string,\n    options: PageBlobListPageRangesSegmentOptions = {}\n  ): AsyncIterableIterator<PageBlobGetPageRangesResponseModel> {\n    let getPageRangeItemSegmentsResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        getPageRangeItemSegmentsResponse = await this.listPageRangesSegment(\n          offset,\n          count,\n          marker,\n          options\n        );\n        marker = getPageRangeItemSegmentsResponse.continuationToken;\n        yield await getPageRangeItemSegmentsResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link PageRangeInfo} objects\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param options - Options to List Page Ranges operation.\n   */\n  private async *listPageRangeItems(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobListPageRangesSegmentOptions = {}\n  ): AsyncIterableIterator<PageRangeInfo> {\n    let marker: string | undefined;\n    for await (const getPageRangesSegment of this.listPageRangeItemSegments(\n      offset,\n      count,\n      marker,\n      options\n    )) {\n      yield* ExtractPageRangeInfoItems(getPageRangesSegment);\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list of page ranges for a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   *  .byPage() returns an async iterable iterator to list of page ranges for a page blob.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the pageBlobClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\").getPageBlobClient(\"<your-blob-name>\");`\n   * let i = 1;\n   * for await (const pageRange of pageBlobClient.listPageRanges()) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = pageBlobClient.listPageRanges();\n   * let pageRangeItem = await iter.next();\n   * while (!pageRangeItem.done) {\n   *   console.log(`Page range ${i++}: ${pageRangeItem.value.start} - ${pageRangeItem.value.end}, IsClear: ${pageRangeItem.value.isClear}`);\n   *   pageRangeItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of pageBlobClient.listPageRanges().byPage({ maxPageSize: 20 })) {\n   *   for (const pageRange of response) {\n   *     console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = pageBlobClient.listPageRanges().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 page ranges\n   * for (const pageRange of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = pageBlobClient.listPageRanges().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 page ranges\n   * for (const blob of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param options - Options to the Page Blob Get Ranges operation.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listPageRanges(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobListPageRangesOptions = {}\n  ): PagedAsyncIterableIterator<PageRangeInfo, PageBlobGetPageRangesResponseModel> {\n    options.conditions = options.conditions || {};\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listPageRangeItems(offset, count, options);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listPageRangeItemSegments(offset, count, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...options,\n        });\n      },\n    };\n  }\n\n  /**\n   * Gets the collection of page ranges that differ between a specified snapshot and this page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page blob\n   * @param count - Number of bytes to get ranges diff.\n   * @param prevSnapshot - Timestamp of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   * @returns Response data for the Page Blob Get Page Range Diff operation.\n   */\n  public async getPageRangesDiff(\n    offset: number,\n    count: number,\n    prevSnapshot: string,\n    options: PageBlobGetPageRangesDiffOptions = {}\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    options.conditions = options.conditions || {};\n    const { span, updatedOptions } = createSpan(\"PageBlobClient-getPageRangesDiff\", options);\n\n    try {\n      return await this.pageBlobContext\n        .getPageRangesDiff({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          prevsnapshot: prevSnapshot,\n          range: rangeToString({ offset, count }),\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        })\n        .then(rangeResponseFromModel);\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * getPageRangesDiffSegment returns a single segment of page ranges starting from the\n   * specified Marker for difference between previous snapshot and the target page blob.\n   * Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call getPageRangesDiffSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshotOrUrl - Timestamp of snapshot to retrieve the difference or URL of snapshot to retrieve the difference.\n   * @param marker - A string value that identifies the portion of the get to be returned with the next get operation.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   */\n  private async listPageRangesDiffSegment(\n    offset: number,\n    count: number,\n    prevSnapshotOrUrl: string,\n    marker?: string,\n    options?: PageBlobListPageRangesDiffSegmentOptions\n  ): Promise<PageBlobGetPageRangesResponseModel> {\n    const { span, updatedOptions } = createSpan(\"PageBlobClient-getPageRangesDiffSegment\", options);\n    try {\n      return await this.pageBlobContext.getPageRangesDiff({\n        abortSignal: options?.abortSignal,\n        leaseAccessConditions: options?.conditions,\n        modifiedAccessConditions: {\n          ...options?.conditions,\n          ifTags: options?.conditions?.tagConditions,\n        },\n        prevsnapshot: prevSnapshotOrUrl,\n        range: rangeToString({\n          offset: offset,\n          count: count,\n        }),\n        marker: marker,\n        maxPageSize: options?.maxPageSize,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n  /**\n   * Returns an AsyncIterableIterator for {@link PageBlobGetPageRangesDiffResponseModel}\n   *\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshotOrUrl - Timestamp of snapshot to retrieve the difference or URL of snapshot to retrieve the difference.\n   * @param marker - A string value that identifies the portion of\n   *                          the get of page ranges to be returned with the next getting operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          getting operation did not return all page ranges remaining within the current page.\n   *                          The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of get\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   */\n  private async *listPageRangeDiffItemSegments(\n    offset: number,\n    count: number,\n    prevSnapshotOrUrl: string,\n    marker?: string,\n    options?: PageBlobListPageRangesDiffSegmentOptions\n  ): AsyncIterableIterator<PageBlobGetPageRangesDiffResponseModel> {\n    let getPageRangeItemSegmentsResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        getPageRangeItemSegmentsResponse = await this.listPageRangesDiffSegment(\n          offset,\n          count,\n          prevSnapshotOrUrl,\n          marker,\n          options\n        );\n        marker = getPageRangeItemSegmentsResponse.continuationToken;\n        yield await getPageRangeItemSegmentsResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link PageRangeInfo} objects\n   *\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshotOrUrl - Timestamp of snapshot to retrieve the difference or URL of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   */\n  private async *listPageRangeDiffItems(\n    offset: number,\n    count: number,\n    prevSnapshotOrUrl: string,\n    options?: PageBlobListPageRangesDiffSegmentOptions\n  ): AsyncIterableIterator<PageRangeInfo> {\n    let marker: string | undefined;\n    for await (const getPageRangesSegment of this.listPageRangeDiffItemSegments(\n      offset,\n      count,\n      prevSnapshotOrUrl,\n      marker,\n      options\n    )) {\n      yield* ExtractPageRangeInfoItems(getPageRangesSegment);\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list of page ranges that differ between a specified snapshot and this page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   *  .byPage() returns an async iterable iterator to list of page ranges that differ between a specified snapshot and this page blob.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the pageBlobClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\").getPageBlobClient(\"<your-blob-name>\");`\n   * let i = 1;\n   * for await (const pageRange of pageBlobClient.listPageRangesDiff()) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = pageBlobClient.listPageRangesDiff();\n   * let pageRangeItem = await iter.next();\n   * while (!pageRangeItem.done) {\n   *   console.log(`Page range ${i++}: ${pageRangeItem.value.start} - ${pageRangeItem.value.end}, IsClear: ${pageRangeItem.value.isClear}`);\n   *   pageRangeItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of pageBlobClient.listPageRangesDiff().byPage({ maxPageSize: 20 })) {\n   *   for (const pageRange of response) {\n   *     console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = pageBlobClient.listPageRangesDiff().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 page ranges\n   * for (const pageRange of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = pageBlobClient.listPageRangesDiff().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 page ranges\n   * for (const blob of response) {\n   *   console.log(`Page range ${i++}: ${pageRange.start} - ${pageRange.end}`);\n   * }\n   * ```\n   * @param offset - Starting byte position of the page ranges.\n   * @param count - Number of bytes to get.\n   * @param prevSnapshot - Timestamp of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Ranges operation.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listPageRangesDiff(\n    offset: number,\n    count: number,\n    prevSnapshot: string,\n    options: PageBlobListPageRangesDiffOptions = {}\n  ): PagedAsyncIterableIterator<PageRangeInfo, PageBlobGetPageRangesDiffResponseModel> {\n    options.conditions = options.conditions || {};\n\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listPageRangeDiffItems(offset, count, prevSnapshot, {\n      ...options,\n    });\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listPageRangeDiffItemSegments(\n          offset,\n          count,\n          prevSnapshot,\n          settings.continuationToken,\n          {\n            maxPageSize: settings.maxPageSize,\n            ...options,\n          }\n        );\n      },\n    };\n  }\n\n  /**\n   * Gets the collection of page ranges that differ between a specified snapshot and this page blob for managed disks.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param offset - Starting byte position of the page blob\n   * @param count - Number of bytes to get ranges diff.\n   * @param prevSnapshotUrl - URL of snapshot to retrieve the difference.\n   * @param options - Options to the Page Blob Get Page Ranges Diff operation.\n   * @returns Response data for the Page Blob Get Page Range Diff operation.\n   */\n  public async getPageRangesDiffForManagedDisks(\n    offset: number,\n    count: number,\n    prevSnapshotUrl: string,\n    options: PageBlobGetPageRangesDiffOptions = {}\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    options.conditions = options.conditions || {};\n    const { span, updatedOptions } = createSpan(\n      \"PageBlobClient-GetPageRangesDiffForManagedDisks\",\n      options\n    );\n\n    try {\n      return await this.pageBlobContext\n        .getPageRangesDiff({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: {\n            ...options.conditions,\n            ifTags: options.conditions?.tagConditions,\n          },\n          prevSnapshotUrl,\n          range: rangeToString({ offset, count }),\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        })\n        .then(rangeResponseFromModel);\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Resizes the page blob to the specified size (which must be a multiple of 512).\n   * @see https://docs.microsoft.com/rest/api/storageservices/set-blob-properties\n   *\n   * @param size - Target size\n   * @param options - Options to the Page Blob Resize operation.\n   * @returns Response data for the Page Blob Resize operation.\n   */\n  public async resize(\n    size: number,\n    options: PageBlobResizeOptions = {}\n  ): Promise<PageBlobResizeResponse> {\n    options.conditions = options.conditions || {};\n    const { span, updatedOptions } = createSpan(\"PageBlobClient-resize\", options);\n    try {\n      return await this.pageBlobContext.resize(size, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        encryptionScope: options.encryptionScope,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets a page blob's sequence number.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param sequenceNumberAction - Indicates how the service should modify the blob's sequence number.\n   * @param sequenceNumber - Required if sequenceNumberAction is max or update\n   * @param options - Options to the Page Blob Update Sequence Number operation.\n   * @returns Response data for the Page Blob Update Sequence Number operation.\n   */\n  public async updateSequenceNumber(\n    sequenceNumberAction: SequenceNumberActionType,\n    sequenceNumber?: number,\n    options: PageBlobUpdateSequenceNumberOptions = {}\n  ): Promise<PageBlobUpdateSequenceNumberResponse> {\n    options.conditions = options.conditions || {};\n    const { span, updatedOptions } = createSpan(\"PageBlobClient-updateSequenceNumber\", options);\n    try {\n      return await this.pageBlobContext.updateSequenceNumber(sequenceNumberAction, {\n        abortSignal: options.abortSignal,\n        blobSequenceNumber: sequenceNumber,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Begins an operation to start an incremental copy from one page blob's snapshot to this page blob.\n   * The snapshot is copied such that only the differential changes between the previously\n   * copied snapshot are transferred to the destination.\n   * The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual.\n   * @see https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob\n   * @see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots\n   *\n   * @param copySource - Specifies the name of the source page blob snapshot. For example,\n   *                            https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param options - Options to the Page Blob Copy Incremental operation.\n   * @returns Response data for the Page Blob Copy Incremental operation.\n   */\n  public async startCopyIncremental(\n    copySource: string,\n    options: PageBlobStartCopyIncrementalOptions = {}\n  ): Promise<PageBlobCopyIncrementalResponse> {\n    const { span, updatedOptions } = createSpan(\"PageBlobClient-startCopyIncremental\", options);\n    try {\n      return await this.pageBlobContext.copyIncremental(copySource, {\n        abortSignal: options.abortSignal,\n        modifiedAccessConditions: {\n          ...options.conditions,\n          ifTags: options.conditions?.tagConditions,\n        },\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ServiceSubmitBatchResponseModel } from \"./generatedModels\";\nimport { streamToBuffer2 } from \"./utils/utils.node\";\nimport { BATCH_MAX_PAYLOAD_IN_BYTES } from \"./utils/constants\";\n\nexport async function getBodyAsText(\n  batchResponse: ServiceSubmitBatchResponseModel\n): Promise<string> {\n  let buffer = Buffer.alloc(BATCH_MAX_PAYLOAD_IN_BYTES);\n\n  const responseLength = await streamToBuffer2(\n    batchResponse.readableStreamBody as NodeJS.ReadableStream,\n    buffer\n  );\n\n  // Slice the buffer to trim the empty ending.\n  buffer = buffer.slice(0, responseLength);\n\n  return buffer.toString();\n}\n\nexport function utf8ByteLength(str: string): number {\n  return Buffer.byteLength(str);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpHeaders } from \"@azure/core-http\";\n\nimport { ServiceSubmitBatchResponseModel } from \"./generatedModels\";\nimport {\n  HTTP_VERSION_1_1,\n  HTTP_LINE_ENDING,\n  HeaderConstants,\n  HTTPURLConnection,\n} from \"./utils/constants\";\nimport { getBodyAsText } from \"./BatchUtils\";\nimport { BatchSubRequest } from \"./BlobBatch\";\nimport { BatchSubResponse, ParsedBatchResponse } from \"./BatchResponse\";\nimport { logger } from \"./log\";\n\nconst HTTP_HEADER_DELIMITER = \": \";\nconst SPACE_DELIMITER = \" \";\nconst NOT_FOUND = -1;\n\n/**\n * Util class for parsing batch response.\n */\nexport class BatchResponseParser {\n  private readonly batchResponse: ServiceSubmitBatchResponseModel;\n  private readonly responseBatchBoundary: string;\n  private readonly perResponsePrefix: string;\n  private readonly batchResponseEnding: string;\n  private readonly subRequests: Map<number, BatchSubRequest>;\n\n  constructor(\n    batchResponse: ServiceSubmitBatchResponseModel,\n    subRequests: Map<number, BatchSubRequest>\n  ) {\n    if (!batchResponse || !batchResponse.contentType) {\n      // In special case(reported), server may return invalid content-type which could not be parsed.\n      throw new RangeError(\"batchResponse is malformed or doesn't contain valid content-type.\");\n    }\n\n    if (!subRequests || subRequests.size === 0) {\n      // This should be prevent during coding.\n      throw new RangeError(\"Invalid state: subRequests is not provided or size is 0.\");\n    }\n\n    this.batchResponse = batchResponse;\n    this.subRequests = subRequests;\n    this.responseBatchBoundary = this.batchResponse.contentType!.split(\"=\")[1];\n    this.perResponsePrefix = `--${this.responseBatchBoundary}${HTTP_LINE_ENDING}`;\n    this.batchResponseEnding = `--${this.responseBatchBoundary}--`;\n  }\n\n  // For example of response, please refer to https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#response\n  public async parseBatchResponse(): Promise<ParsedBatchResponse> {\n    // When logic reach here, suppose batch request has already succeeded with 202, so we can further parse\n    // sub request's response.\n    if (this.batchResponse._response.status !== HTTPURLConnection.HTTP_ACCEPTED) {\n      throw new Error(\n        `Invalid state: batch request failed with status: '${this.batchResponse._response.status}'.`\n      );\n    }\n\n    const responseBodyAsText = await getBodyAsText(this.batchResponse);\n\n    const subResponses = responseBodyAsText\n      .split(this.batchResponseEnding)[0] // string after ending is useless\n      .split(this.perResponsePrefix)\n      .slice(1); // string before first response boundary is useless\n    const subResponseCount = subResponses.length;\n\n    // Defensive coding in case of potential error parsing.\n    // Note: subResponseCount == 1 is special case where sub request is invalid.\n    // We try to prevent such cases through early validation, e.g. validate sub request count >= 1.\n    // While in unexpected sub request invalid case, we allow sub response to be parsed and return to user.\n    if (subResponseCount !== this.subRequests.size && subResponseCount !== 1) {\n      throw new Error(\"Invalid state: sub responses' count is not equal to sub requests' count.\");\n    }\n\n    const deserializedSubResponses: Array<BatchSubResponse> = new Array(subResponseCount);\n    let subResponsesSucceededCount: number = 0;\n    let subResponsesFailedCount: number = 0;\n\n    // Parse sub subResponses.\n    for (let index = 0; index < subResponseCount; index++) {\n      const subResponse = subResponses[index];\n      const deserializedSubResponse = {} as BatchSubResponse;\n      deserializedSubResponse.headers = new HttpHeaders();\n\n      const responseLines = subResponse.split(`${HTTP_LINE_ENDING}`);\n      let subRespHeaderStartFound = false;\n      let subRespHeaderEndFound = false;\n      let subRespFailed = false;\n      let contentId = NOT_FOUND;\n\n      for (const responseLine of responseLines) {\n        if (!subRespHeaderStartFound) {\n          // Convention line to indicate content ID\n          if (responseLine.startsWith(HeaderConstants.CONTENT_ID)) {\n            contentId = parseInt(responseLine.split(HTTP_HEADER_DELIMITER)[1]);\n          }\n\n          // Http version line with status code indicates the start of sub request's response.\n          // Example: HTTP/1.1 202 Accepted\n          if (responseLine.startsWith(HTTP_VERSION_1_1)) {\n            subRespHeaderStartFound = true;\n\n            const tokens = responseLine.split(SPACE_DELIMITER);\n            deserializedSubResponse.status = parseInt(tokens[1]);\n            deserializedSubResponse.statusMessage = tokens.slice(2).join(SPACE_DELIMITER);\n          }\n\n          continue; // Skip convention headers not specifically for sub request i.e. Content-Type: application/http and Content-ID: *\n        }\n\n        if (responseLine.trim() === \"\") {\n          // Sub response's header start line already found, and the first empty line indicates header end line found.\n          if (!subRespHeaderEndFound) {\n            subRespHeaderEndFound = true;\n          }\n\n          continue; // Skip empty line\n        }\n\n        // Note: when code reach here, it indicates subRespHeaderStartFound == true\n        if (!subRespHeaderEndFound) {\n          if (responseLine.indexOf(HTTP_HEADER_DELIMITER) === -1) {\n            // Defensive coding to prevent from missing valuable lines.\n            throw new Error(\n              `Invalid state: find non-empty line '${responseLine}' without HTTP header delimiter '${HTTP_HEADER_DELIMITER}'.`\n            );\n          }\n\n          // Parse headers of sub response.\n          const tokens = responseLine.split(HTTP_HEADER_DELIMITER);\n          deserializedSubResponse.headers.set(tokens[0], tokens[1]);\n          if (tokens[0] === HeaderConstants.X_MS_ERROR_CODE) {\n            deserializedSubResponse.errorCode = tokens[1];\n            subRespFailed = true;\n          }\n        } else {\n          // Assemble body of sub response.\n          if (!deserializedSubResponse.bodyAsText) {\n            deserializedSubResponse.bodyAsText = \"\";\n          }\n\n          deserializedSubResponse.bodyAsText += responseLine;\n        }\n      } // Inner for end\n\n      // The response will contain the Content-ID header for each corresponding subrequest response to use for tracking.\n      // The Content-IDs are set to a valid index in the subrequests we sent. In the status code 202 path, we could expect it\n      // to be 1-1 mapping from the [0, subRequests.size) to the Content-IDs returned. If not, we simply don't return that\n      // unexpected subResponse in the parsed reponse and we can always look it up in the raw response for debugging purpose.\n      if (\n        contentId !== NOT_FOUND &&\n        Number.isInteger(contentId) &&\n        contentId >= 0 &&\n        contentId < this.subRequests.size &&\n        deserializedSubResponses[contentId] === undefined\n      ) {\n        deserializedSubResponse._request = this.subRequests.get(contentId)!;\n        deserializedSubResponses[contentId] = deserializedSubResponse;\n      } else {\n        logger.error(\n          `subResponses[${index}] is dropped as the Content-ID is not found or invalid, Content-ID: ${contentId}`\n        );\n      }\n\n      if (subRespFailed) {\n        subResponsesFailedCount++;\n      } else {\n        subResponsesSucceededCount++;\n      }\n    }\n\n    return {\n      subResponses: deserializedSubResponses,\n      subResponsesSucceededCount: subResponsesSucceededCount,\n      subResponsesFailedCount: subResponsesFailedCount,\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nenum MutexLockStatus {\n  LOCKED,\n  UNLOCKED,\n}\n\ntype Callback = (...args: any[]) => any;\n\n/**\n * An async mutex lock.\n */\nexport class Mutex {\n  /**\n   * Lock for a specific key. If the lock has been acquired by another customer, then\n   * will wait until getting the lock.\n   *\n   * @param key - lock key\n   */\n  public static async lock(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (this.keys[key] === undefined || this.keys[key] === MutexLockStatus.UNLOCKED) {\n        this.keys[key] = MutexLockStatus.LOCKED;\n        resolve();\n      } else {\n        this.onUnlockEvent(key, () => {\n          this.keys[key] = MutexLockStatus.LOCKED;\n          resolve();\n        });\n      }\n    });\n  }\n\n  /**\n   * Unlock a key.\n   *\n   * @param key -\n   */\n  public static async unlock(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (this.keys[key] === MutexLockStatus.LOCKED) {\n        this.emitUnlockEvent(key);\n      }\n      delete this.keys[key];\n      resolve();\n    });\n  }\n\n  private static keys: { [key: string]: MutexLockStatus } = {};\n  private static listeners: { [key: string]: Callback[] } = {};\n\n  private static onUnlockEvent(key: string, handler: Callback) {\n    if (this.listeners[key] === undefined) {\n      this.listeners[key] = [handler];\n    } else {\n      this.listeners[key].push(handler);\n    }\n  }\n\n  private static emitUnlockEvent(key: string) {\n    if (this.listeners[key] !== undefined && this.listeners[key].length > 0) {\n      const handler = this.listeners[key].shift();\n      setImmediate(() => {\n        handler!.call(this);\n      });\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  deserializationPolicy,\n  generateUuid,\n  HttpHeaders,\n  HttpOperationResponse,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  WebResource,\n  TokenCredential,\n  isTokenCredential,\n  bearerTokenAuthenticationPolicy,\n  isNode,\n} from \"@azure/core-http\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { BlobClient, BlobDeleteOptions, BlobSetTierOptions } from \"./Clients\";\nimport { AccessTier } from \"./generatedModels\";\nimport { Mutex } from \"./utils/Mutex\";\nimport { Pipeline } from \"./Pipeline\";\nimport { attachCredential, getURLPath, getURLPathAndQuery, iEqual } from \"./utils/utils.common\";\nimport {\n  HeaderConstants,\n  BATCH_MAX_REQUEST,\n  HTTP_VERSION_1_1,\n  HTTP_LINE_ENDING,\n  StorageOAuthScopes,\n} from \"./utils/constants\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { createSpan } from \"./utils/tracing\";\n\n/**\n * A request associated with a batch operation.\n */\nexport interface BatchSubRequest {\n  /**\n   * The URL of the resource to request operation.\n   */\n  url: string;\n\n  /**\n   * The credential used for sub request.\n   * Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service.\n   * You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n}\n\n/**\n * A BlobBatch represents an aggregated set of operations on blobs.\n * Currently, only `delete` and `setAccessTier` are supported.\n */\nexport class BlobBatch {\n  private batchRequest: InnerBatchRequest;\n  private readonly batch: string = \"batch\";\n  private batchType: \"delete\" | \"setAccessTier\" | undefined;\n\n  constructor() {\n    this.batchRequest = new InnerBatchRequest();\n  }\n\n  /**\n   * Get the value of Content-Type for a batch request.\n   * The value must be multipart/mixed with a batch boundary.\n   * Example: multipart/mixed; boundary=batch_a81786c8-e301-4e42-a729-a32ca24ae252\n   */\n  public getMultiPartContentType(): string {\n    return this.batchRequest.getMultipartContentType();\n  }\n\n  /**\n   * Get assembled HTTP request body for sub requests.\n   */\n  public getHttpRequestBody(): string {\n    return this.batchRequest.getHttpRequestBody();\n  }\n\n  /**\n   * Get sub requests that are added into the batch request.\n   */\n  public getSubRequests(): Map<number, BatchSubRequest> {\n    return this.batchRequest.getSubRequests();\n  }\n\n  private async addSubRequestInternal(\n    subRequest: BatchSubRequest,\n    assembleSubRequestFunc: () => Promise<void>\n  ): Promise<void> {\n    await Mutex.lock(this.batch);\n\n    try {\n      this.batchRequest.preAddSubRequest(subRequest);\n      await assembleSubRequestFunc();\n      this.batchRequest.postAddSubRequest(subRequest);\n    } finally {\n      await Mutex.unlock(this.batch);\n    }\n  }\n\n  private setBatchType(batchType: \"delete\" | \"setAccessTier\"): void {\n    if (!this.batchType) {\n      this.batchType = batchType;\n    }\n    if (this.batchType !== batchType) {\n      throw new RangeError(\n        `BlobBatch only supports one operation type per batch and it already is being used for ${this.batchType} operations.`\n      );\n    }\n  }\n\n  /**\n   * The deleteBlob operation marks the specified blob or snapshot for deletion.\n   * The blob is later deleted during garbage collection.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param url - The url of the blob resource to delete.\n   * @param credential - Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options -\n   */\n  public async deleteBlob(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: BlobDeleteOptions\n  ): Promise<void>;\n\n  /**\n   * The deleteBlob operation marks the specified blob or snapshot for deletion.\n   * The blob is later deleted during garbage collection.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClient - The BlobClient.\n   * @param options -\n   */\n  public async deleteBlob(blobClient: BlobClient, options?: BlobDeleteOptions): Promise<void>;\n\n  public async deleteBlob(\n    urlOrBlobClient: string | BlobClient,\n    credentialOrOptions:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | BlobDeleteOptions\n      | undefined,\n    options?: BlobDeleteOptions\n  ): Promise<void> {\n    let url: string;\n    let credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n\n    if (\n      typeof urlOrBlobClient === \"string\" &&\n      ((isNode && credentialOrOptions instanceof StorageSharedKeyCredential) ||\n        credentialOrOptions instanceof AnonymousCredential ||\n        isTokenCredential(credentialOrOptions))\n    ) {\n      // First overload\n      url = urlOrBlobClient;\n      credential = credentialOrOptions;\n    } else if (urlOrBlobClient instanceof BlobClient) {\n      // Second overload\n      url = urlOrBlobClient.url;\n      credential = urlOrBlobClient.credential;\n      options = credentialOrOptions as BlobDeleteOptions;\n    } else {\n      throw new RangeError(\n        \"Invalid arguments. Either url and credential, or BlobClient need be provided.\"\n      );\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    const { span, updatedOptions } = createSpan(\"BatchDeleteRequest-addSubRequest\", options);\n\n    try {\n      this.setBatchType(\"delete\");\n      await this.addSubRequestInternal(\n        {\n          url: url,\n          credential: credential,\n        },\n        async () => {\n          await new BlobClient(url, this.batchRequest.createPipeline(credential)).delete(\n            updatedOptions\n          );\n        }\n      );\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The setBlobAccessTier operation sets the tier on a blob.\n   * The operation is allowed on block blobs in a blob storage or general purpose v2 account.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * A block blob's tier determines Hot/Cool/Archive storage type.\n   * This operation does not update the blob's ETag.\n   * For detailed information about block blob level tiering\n   * see [hot, cool, and archive access tiers](https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers).\n   * The operation will be authenticated and authorized\n   * with specified credential. See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param url - The url of the blob resource to delete.\n   * @param credential - Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobAccessTier(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    tier: AccessTier,\n    options?: BlobSetTierOptions\n  ): Promise<void>;\n\n  /**\n   * The setBlobAccessTier operation sets the tier on a blob.\n   * The operation is allowed on block blobs in a blob storage or general purpose v2 account.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * A block blob's tier determines Hot/Cool/Archive storage type.\n   * This operation does not update the blob's ETag.\n   * For detailed information about block blob level tiering\n   * see [hot, cool, and archive access tiers](https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers).\n   * The operation will be authenticated and authorized\n   * with specified credential. See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClient - The BlobClient.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobAccessTier(\n    blobClient: BlobClient,\n    tier: AccessTier,\n    options?: BlobSetTierOptions\n  ): Promise<void>;\n\n  public async setBlobAccessTier(\n    urlOrBlobClient: string | BlobClient,\n    credentialOrTier:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | AccessTier,\n    tierOrOptions?: AccessTier | BlobSetTierOptions,\n    options?: BlobSetTierOptions\n  ): Promise<void> {\n    let url: string;\n    let credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n    let tier: AccessTier;\n\n    if (\n      typeof urlOrBlobClient === \"string\" &&\n      ((isNode && credentialOrTier instanceof StorageSharedKeyCredential) ||\n        credentialOrTier instanceof AnonymousCredential ||\n        isTokenCredential(credentialOrTier))\n    ) {\n      // First overload\n      url = urlOrBlobClient;\n      credential = credentialOrTier as\n        | StorageSharedKeyCredential\n        | AnonymousCredential\n        | TokenCredential;\n      tier = tierOrOptions as AccessTier;\n    } else if (urlOrBlobClient instanceof BlobClient) {\n      // Second overload\n      url = urlOrBlobClient.url;\n      credential = urlOrBlobClient.credential;\n      tier = credentialOrTier as AccessTier;\n      options = tierOrOptions as BlobSetTierOptions;\n    } else {\n      throw new RangeError(\n        \"Invalid arguments. Either url and credential, or BlobClient need be provided.\"\n      );\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    const { span, updatedOptions } = createSpan(\"BatchSetTierRequest-addSubRequest\", options);\n\n    try {\n      this.setBatchType(\"setAccessTier\");\n      await this.addSubRequestInternal(\n        {\n          url: url,\n          credential: credential,\n        },\n        async () => {\n          await new BlobClient(url, this.batchRequest.createPipeline(credential)).setAccessTier(\n            tier,\n            updatedOptions\n          );\n        }\n      );\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * Inner batch request class which is responsible for assembling and serializing sub requests.\n * See https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#request-body for how requests are assembled.\n */\nclass InnerBatchRequest {\n  private operationCount: number;\n  private body: string;\n  private subRequests: Map<number, BatchSubRequest>;\n  private readonly boundary: string;\n  private readonly subRequestPrefix: string;\n  private readonly multipartContentType: string;\n  private readonly batchRequestEnding: string;\n\n  constructor() {\n    this.operationCount = 0;\n    this.body = \"\";\n\n    const tempGuid = generateUuid();\n\n    // batch_{batchid}\n    this.boundary = `batch_${tempGuid}`;\n    // --batch_{batchid}\n    // Content-Type: application/http\n    // Content-Transfer-Encoding: binary\n    this.subRequestPrefix = `--${this.boundary}${HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TYPE}: application/http${HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TRANSFER_ENCODING}: binary`;\n    // multipart/mixed; boundary=batch_{batchid}\n    this.multipartContentType = `multipart/mixed; boundary=${this.boundary}`;\n    // --batch_{batchid}--\n    this.batchRequestEnding = `--${this.boundary}--`;\n\n    this.subRequests = new Map();\n  }\n\n  /**\n   * Create pipeline to assemble sub requests. The idea here is to use existing\n   * credential and serialization/deserialization components, with additional policies to\n   * filter unnecessary headers, assemble sub requests into request's body\n   * and intercept request from going to wire.\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  public createPipeline(\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential\n  ): Pipeline {\n    const isAnonymousCreds = credential instanceof AnonymousCredential;\n    const policyFactoryLength = 3 + (isAnonymousCreds ? 0 : 1); // [deserializationPolicy, BatchHeaderFilterPolicyFactory, (Optional)Credential, BatchRequestAssemblePolicyFactory]\n    const factories: RequestPolicyFactory[] = new Array(policyFactoryLength);\n\n    factories[0] = deserializationPolicy(); // Default deserializationPolicy is provided by protocol layer\n    factories[1] = new BatchHeaderFilterPolicyFactory(); // Use batch header filter policy to exclude unnecessary headers\n    if (!isAnonymousCreds) {\n      factories[2] = isTokenCredential(credential)\n        ? attachCredential(\n            bearerTokenAuthenticationPolicy(credential, StorageOAuthScopes),\n            credential\n          )\n        : credential;\n    }\n    factories[policyFactoryLength - 1] = new BatchRequestAssemblePolicyFactory(this); // Use batch assemble policy to assemble request and intercept request from going to wire\n\n    return new Pipeline(factories, {});\n  }\n\n  public appendSubRequestToBody(request: WebResource) {\n    // Start to assemble sub request\n    this.body += [\n      this.subRequestPrefix, // sub request constant prefix\n      `${HeaderConstants.CONTENT_ID}: ${this.operationCount}`, // sub request's content ID\n      \"\", // empty line after sub request's content ID\n      `${request.method.toString()} ${getURLPathAndQuery(\n        request.url\n      )} ${HTTP_VERSION_1_1}${HTTP_LINE_ENDING}`, // sub request start line with method\n    ].join(HTTP_LINE_ENDING);\n\n    for (const header of request.headers.headersArray()) {\n      this.body += `${header.name}: ${header.value}${HTTP_LINE_ENDING}`;\n    }\n\n    this.body += HTTP_LINE_ENDING; // sub request's headers need be ending with an empty line\n    // No body to assemble for current batch request support\n    // End to assemble sub request\n  }\n\n  public preAddSubRequest(subRequest: BatchSubRequest) {\n    if (this.operationCount >= BATCH_MAX_REQUEST) {\n      throw new RangeError(`Cannot exceed ${BATCH_MAX_REQUEST} sub requests in a single batch`);\n    }\n\n    // Fast fail if url for sub request is invalid\n    const path = getURLPath(subRequest.url);\n    if (!path || path === \"\") {\n      throw new RangeError(`Invalid url for sub request: '${subRequest.url}'`);\n    }\n  }\n\n  public postAddSubRequest(subRequest: BatchSubRequest) {\n    this.subRequests.set(this.operationCount, subRequest);\n    this.operationCount++;\n  }\n\n  // Return the http request body with assembling the ending line to the sub request body.\n  public getHttpRequestBody(): string {\n    return `${this.body}${this.batchRequestEnding}${HTTP_LINE_ENDING}`;\n  }\n\n  public getMultipartContentType(): string {\n    return this.multipartContentType;\n  }\n\n  public getSubRequests(): Map<number, BatchSubRequest> {\n    return this.subRequests;\n  }\n}\n\nclass BatchRequestAssemblePolicy extends BaseRequestPolicy {\n  private batchRequest: InnerBatchRequest;\n  private readonly dummyResponse: HttpOperationResponse = {\n    request: new WebResource(),\n    status: 200,\n    headers: new HttpHeaders(),\n  };\n\n  constructor(\n    batchRequest: InnerBatchRequest,\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ) {\n    super(nextPolicy, options);\n\n    this.batchRequest = batchRequest;\n  }\n\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    await this.batchRequest.appendSubRequestToBody(request);\n\n    return this.dummyResponse; // Intercept request from going to wire\n  }\n}\n\nclass BatchRequestAssemblePolicyFactory implements RequestPolicyFactory {\n  private batchRequest: InnerBatchRequest;\n\n  constructor(batchRequest: InnerBatchRequest) {\n    this.batchRequest = batchRequest;\n  }\n\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): BatchRequestAssemblePolicy {\n    return new BatchRequestAssemblePolicy(this.batchRequest, nextPolicy, options);\n  }\n}\n\nclass BatchHeaderFilterPolicy extends BaseRequestPolicy {\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    let xMsHeaderName = \"\";\n\n    for (const header of request.headers.headersArray()) {\n      if (iEqual(header.name, HeaderConstants.X_MS_VERSION)) {\n        xMsHeaderName = header.name;\n      }\n    }\n\n    if (xMsHeaderName !== \"\") {\n      request.headers.remove(xMsHeaderName); // The subrequests should not have the x-ms-version header.\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n\nclass BatchHeaderFilterPolicyFactory implements RequestPolicyFactory {\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): BatchHeaderFilterPolicy {\n    return new BatchHeaderFilterPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  AccessTier,\n  ServiceSubmitBatchHeaders,\n  ServiceSubmitBatchOptionalParamsModel,\n  ServiceSubmitBatchResponseModel,\n} from \"./generatedModels\";\nimport { ParsedBatchResponse } from \"./BatchResponse\";\nimport { BatchResponseParser } from \"./BatchResponseParser\";\nimport { utf8ByteLength } from \"./BatchUtils\";\nimport { BlobBatch } from \"./BlobBatch\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { convertTracingToRequestOptionsBase, createSpan } from \"./utils/tracing\";\nimport { HttpResponse, TokenCredential } from \"@azure/core-http\";\nimport { Service, Container } from \"./generated/src/operations\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { BlobDeleteOptions, BlobClient, BlobSetTierOptions } from \"./Clients\";\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { PipelineLike, StoragePipelineOptions, newPipeline, isPipelineLike } from \"./Pipeline\";\nimport { getURLPath } from \"./utils/utils.common\";\n\n/**\n * Options to configure the Service - Submit Batch Optional Params.\n */\nexport interface BlobBatchSubmitBatchOptionalParams extends ServiceSubmitBatchOptionalParamsModel {}\n\n/**\n * Contains response data for blob batch operations.\n */\nexport declare type BlobBatchSubmitBatchResponse = ParsedBatchResponse &\n  ServiceSubmitBatchHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceSubmitBatchHeaders;\n    };\n  };\n\n/**\n * Contains response data for the {@link deleteBlobs} operation.\n */\nexport declare type BlobBatchDeleteBlobsResponse = BlobBatchSubmitBatchResponse;\n\n/**\n * Contains response data for the {@link setBlobsAccessTier} operation.\n */\nexport declare type BlobBatchSetBlobsAccessTierResponse = BlobBatchSubmitBatchResponse;\n\n/**\n * A BlobBatchClient allows you to make batched requests to the Azure Storage Blob service.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n */\nexport class BlobBatchClient {\n  private serviceOrContainerContext: Service | Container;\n\n  /**\n   * Creates an instance of BlobBatchClient.\n   *\n   * @param url - A url pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  );\n\n  /**\n   * Creates an instance of BlobBatchClient.\n   *\n   * @param url - A url pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: PipelineLike;\n    if (isPipelineLike(credentialOrPipeline)) {\n      pipeline = credentialOrPipeline;\n    } else if (!credentialOrPipeline) {\n      // no credential provided\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    }\n\n    const storageClientContext = new StorageClientContext(url, pipeline.toServiceClientOptions());\n\n    const path = getURLPath(url);\n    if (path && path !== \"/\") {\n      // Container scoped.\n      this.serviceOrContainerContext = new Container(storageClientContext);\n    } else {\n      this.serviceOrContainerContext = new Service(storageClientContext);\n    }\n  }\n\n  /**\n   * Creates a {@link BlobBatch}.\n   * A BlobBatch represents an aggregated set of operations on blobs.\n   */\n  public createBatch(): BlobBatch {\n    return new BlobBatch();\n  }\n\n  /**\n   * Create multiple delete operations to mark the specified blobs or snapshots for deletion.\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operations will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param urls - The urls of the blob resources to delete.\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options -\n   */\n  public async deleteBlobs(\n    urls: string[],\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobDeleteOptions\n  ): Promise<BlobBatchDeleteBlobsResponse>;\n\n  /**\n   * Create multiple delete operations to mark the specified blobs or snapshots for deletion.\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation(subrequest) will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClients - The BlobClients for the blobs to delete.\n   * @param options -\n   */\n  public async deleteBlobs(\n    blobClients: BlobClient[],\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobDeleteOptions\n  ): Promise<BlobBatchDeleteBlobsResponse>;\n\n  public async deleteBlobs(\n    urlsOrBlobClients: string[] | BlobClient[],\n    credentialOrOptions:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | BlobDeleteOptions\n      | undefined,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobDeleteOptions\n  ): Promise<BlobBatchDeleteBlobsResponse> {\n    const batch = new BlobBatch();\n    for (const urlOrBlobClient of urlsOrBlobClients) {\n      if (typeof urlOrBlobClient === \"string\") {\n        await batch.deleteBlob(urlOrBlobClient, credentialOrOptions as TokenCredential, options);\n      } else {\n        await batch.deleteBlob(urlOrBlobClient, credentialOrOptions as BlobDeleteOptions);\n      }\n    }\n    return this.submitBatch(batch);\n  }\n\n  /**\n   * Create multiple set tier operations to set the tier on a blob.\n   * The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * See [set blob tier details](https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier).\n   * The operation(subrequest) will be authenticated and authorized\n   * with specified credential.See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param urls - The urls of the blob resource to delete.\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobsAccessTier(\n    urls: string[],\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    tier: AccessTier,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobSetTierOptions\n  ): Promise<BlobBatchSetBlobsAccessTierResponse>;\n\n  /**\n   * Create multiple set tier operations to set the tier on a blob.\n   * The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * See [set blob tier details](https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier).\n   * The operation(subrequest) will be authenticated and authorized\n   * with specified credential.See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param blobClients - The BlobClients for the blobs which should have a new tier set.\n   * @param tier -\n   * @param options -\n   */\n  public async setBlobsAccessTier(\n    blobClients: BlobClient[],\n    tier: AccessTier,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobSetTierOptions\n  ): Promise<BlobBatchSetBlobsAccessTierResponse>;\n\n  public async setBlobsAccessTier(\n    urlsOrBlobClients: string[] | BlobClient[],\n    credentialOrTier:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | AccessTier,\n    tierOrOptions?: AccessTier | BlobSetTierOptions,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: BlobSetTierOptions\n  ): Promise<BlobBatchSetBlobsAccessTierResponse> {\n    const batch = new BlobBatch();\n    for (const urlOrBlobClient of urlsOrBlobClients) {\n      if (typeof urlOrBlobClient === \"string\") {\n        await batch.setBlobAccessTier(\n          urlOrBlobClient,\n          credentialOrTier as TokenCredential,\n          tierOrOptions as AccessTier,\n          options\n        );\n      } else {\n        await batch.setBlobAccessTier(\n          urlOrBlobClient,\n          credentialOrTier as AccessTier,\n          tierOrOptions as BlobSetTierOptions\n        );\n      }\n    }\n    return this.submitBatch(batch);\n  }\n\n  /**\n   * Submit batch request which consists of multiple subrequests.\n   *\n   * Get `blobBatchClient` and other details before running the snippets.\n   * `blobServiceClient.getBlobBatchClient()` gives the `blobBatchClient`\n   *\n   * Example usage:\n   *\n   * ```js\n   * let batchRequest = new BlobBatch();\n   * await batchRequest.deleteBlob(urlInString0, credential0);\n   * await batchRequest.deleteBlob(urlInString1, credential1, {\n   *  deleteSnapshots: \"include\"\n   * });\n   * const batchResp = await blobBatchClient.submitBatch(batchRequest);\n   * console.log(batchResp.subResponsesSucceededCount);\n   * ```\n   *\n   * Example using a lease:\n   *\n   * ```js\n   * let batchRequest = new BlobBatch();\n   * await batchRequest.setBlobAccessTier(blockBlobClient0, \"Cool\");\n   * await batchRequest.setBlobAccessTier(blockBlobClient1, \"Cool\", {\n   *  conditions: { leaseId: leaseId }\n   * });\n   * const batchResp = await blobBatchClient.submitBatch(batchRequest);\n   * console.log(batchResp.subResponsesSucceededCount);\n   * ```\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @param batchRequest - A set of Delete or SetTier operations.\n   * @param options -\n   */\n  public async submitBatch(\n    batchRequest: BlobBatch,\n    options: BlobBatchSubmitBatchOptionalParams = {}\n  ): Promise<BlobBatchSubmitBatchResponse> {\n    if (!batchRequest || batchRequest.getSubRequests().size === 0) {\n      throw new RangeError(\"Batch request should contain one or more sub requests.\");\n    }\n\n    const { span, updatedOptions } = createSpan(\"BlobBatchClient-submitBatch\", options);\n    try {\n      const batchRequestBody = batchRequest.getHttpRequestBody();\n\n      // ServiceSubmitBatchResponseModel and ContainerSubmitBatchResponse are compatible for now.\n      const rawBatchResponse: ServiceSubmitBatchResponseModel =\n        await this.serviceOrContainerContext.submitBatch(\n          utf8ByteLength(batchRequestBody),\n          batchRequest.getMultiPartContentType(),\n          batchRequestBody,\n          {\n            ...options,\n            ...convertTracingToRequestOptionsBase(updatedOptions),\n          }\n        );\n\n      // Parse the sub responses result, if logic reaches here(i.e. the batch request succeeded with status code 202).\n      const batchResponseParser = new BatchResponseParser(\n        rawBatchResponse,\n        batchRequest.getSubRequests()\n      );\n      const responseSummary = await batchResponseParser.parseBatchResponse();\n\n      const res: BlobBatchSubmitBatchResponse = {\n        _response: rawBatchResponse._response,\n        contentType: rawBatchResponse.contentType,\n        errorCode: rawBatchResponse.errorCode,\n        requestId: rawBatchResponse.requestId,\n        clientRequestId: rawBatchResponse.clientRequestId,\n        version: rawBatchResponse.version,\n        subResponses: responseSummary.subResponses,\n        subResponsesSucceededCount: responseSummary.subResponsesSucceededCount,\n        subResponsesFailedCount: responseSummary.subResponsesFailedCount,\n      };\n\n      return res;\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  getDefaultProxySettings,\n  HttpRequestBody,\n  HttpResponse,\n  isNode,\n  isTokenCredential,\n  TokenCredential,\n  URLBuilder,\n} from \"@azure/core-http\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { Container } from \"./generated/src/operations\";\nimport {\n  BlobDeleteResponse,\n  BlobPrefix,\n  BlobProperties,\n  BlockBlobUploadResponse,\n  ContainerCreateResponse,\n  ContainerDeleteResponse,\n  ContainerEncryptionScope,\n  ContainerFilterBlobsHeaders,\n  ContainerGetAccessPolicyHeaders,\n  ContainerGetPropertiesResponse,\n  ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ContainerSetAccessPolicyResponse,\n  ContainerSetMetadataResponse,\n  FilterBlobItem,\n  FilterBlobSegment,\n  FilterBlobSegmentModel,\n  LeaseAccessConditions,\n  ListBlobsFlatSegmentResponseModel,\n  ListBlobsHierarchySegmentResponseModel,\n  PublicAccessType,\n  SignedIdentifierModel,\n} from \"./generatedModels\";\nimport {\n  Metadata,\n  ObjectReplicationPolicy,\n  Tags,\n  ContainerRequestConditions,\n  ModifiedAccessConditions,\n} from \"./models\";\nimport { newPipeline, PipelineLike, isPipelineLike, StoragePipelineOptions } from \"./Pipeline\";\nimport { CommonOptions, StorageClient } from \"./StorageClient\";\nimport { convertTracingToRequestOptionsBase, createSpan } from \"./utils/tracing\";\nimport {\n  appendToURLPath,\n  appendToURLQuery,\n  BlobNameToString,\n  ConvertInternalResponseOfListBlobFlat,\n  ConvertInternalResponseOfListBlobHierarchy,\n  EscapePath,\n  extractConnectionStringParts,\n  isIpEndpointStyle,\n  parseObjectReplicationRecord,\n  ProcessBlobItems,\n  ProcessBlobPrefixes,\n  toTags,\n  truncatedISO8061Date,\n} from \"./utils/utils.common\";\nimport { ContainerSASPermissions } from \"./sas/ContainerSASPermissions\";\nimport { generateBlobSASQueryParameters } from \"./sas/BlobSASSignatureValues\";\nimport { BlobLeaseClient } from \"./BlobLeaseClient\";\nimport {\n  AppendBlobClient,\n  BlobClient,\n  BlobDeleteOptions,\n  BlockBlobClient,\n  BlockBlobUploadOptions,\n  CommonGenerateSasUrlOptions,\n  PageBlobClient,\n} from \"./Clients\";\nimport { BlobBatchClient } from \"./BlobBatchClient\";\nimport { ListBlobsIncludeItem } from \"./generated/src\";\n\n/**\n * Options to configure {@link ContainerClient.create} operation.\n */\nexport interface ContainerCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the container.\n   */\n  metadata?: Metadata;\n  /**\n   * Specifies whether data in the container may be accessed publicly and the level of access. Possible values include:\n   * - `container`: Specifies full public read access for container and blob data. Clients can enumerate blobs within the container via anonymous request, but cannot enumerate containers within the storage account.\n   * - `blob`: Specifies public read access for blobs. Blob data within this container can be read via anonymous request, but container data is not available. Clients cannot enumerate blobs within the container via anonymous request.\n   */\n  access?: PublicAccessType;\n  /**\n   * Container encryption scope info.\n   */\n  containerEncryptionScope?: ContainerEncryptionScope;\n}\n\n/**\n * Options to configure {@link ContainerClient.getProperties} operation.\n */\nexport interface ContainerGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.delete} operation.\n */\nexport interface ContainerDeleteMethodOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when deleting the container.\n   */\n  conditions?: ContainerRequestConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.exists} operation.\n */\nexport interface ContainerExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure {@link ContainerClient.setMetadata} operation.\n */\nexport interface ContainerSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: ContainerRequestConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.getAccessPolicy} operation.\n */\nexport interface ContainerGetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Signed identifier.\n */\nexport interface SignedIdentifier {\n  /**\n   * a unique id\n   */\n  id: string;\n  /**\n   * Access Policy\n   */\n  accessPolicy: {\n    /**\n     * Optional. The date-time the policy is active\n     */\n    startsOn?: Date;\n    /**\n     * Optional. The date-time the policy expires\n     */\n    expiresOn?: Date;\n    /**\n     * The permissions for the acl policy\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n     */\n    permissions?: string;\n  };\n}\n\n/**\n * Contains response data for the {@link ContainerClient.getAccessPolicy} operation.\n */\nexport declare type ContainerGetAccessPolicyResponse = {\n  signedIdentifiers: SignedIdentifier[];\n} & ContainerGetAccessPolicyHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerGetAccessPolicyHeaders;\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SignedIdentifierModel[];\n    };\n  };\n\n/**\n * Options to configure {@link ContainerClient.setAccessPolicy} operation.\n */\nexport interface ContainerSetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting the access policy.\n   */\n  conditions?: ContainerRequestConditions;\n}\n\n/**\n * Options to configure Container - Acquire Lease operation.\n */\nexport interface ContainerAcquireLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when acquiring the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Release Lease operation.\n */\nexport interface ContainerReleaseLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when releasing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Renew Lease operation.\n */\nexport interface ContainerRenewLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when renewing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Break Lease operation.\n */\nexport interface ContainerBreakLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when breaking the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Change Lease operation.\n */\nexport interface ContainerChangeLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease.\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure the {@link ContainerClient.deleteBlob} operation.\n */\nexport interface ContainerDeleteBlobOptions extends BlobDeleteOptions {\n  /**\n   * An opaque DateTime value that, when present, specifies the version\n   * of the blob to delete. It's for service version 2019-10-10 and newer.\n   */\n  versionId?: string;\n}\n\n/**\n * Options to configure Container - List Segment operations.\n *\n * See:\n * - {@link ContainerClient.listSegments}\n * - {@link ContainerClient.listBlobFlatSegment}\n * - {@link ContainerClient.listBlobHierarchySegment}\n * - {@link ContainerClient.listHierarchySegments}\n * - {@link ContainerClient.listItemsByHierarchy}\n */\ninterface ContainerListBlobsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n  /**\n   * Include this parameter to\n   * specify one or more datasets to include in the response.\n   */\n  include?: ListBlobsIncludeItem[];\n}\n\n/**\n * An interface representing BlobHierarchyListSegment.\n */\nexport interface BlobHierarchyListSegment {\n  blobPrefixes?: BlobPrefix[];\n  blobItems: BlobItem[];\n}\n\n/**\n * An enumeration of blobs\n */\nexport interface ListBlobsHierarchySegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  delimiter?: string;\n  segment: BlobHierarchyListSegment;\n  continuationToken?: string;\n}\n\n/**\n * Contains response data for the listBlobHierarchySegment operation.\n */\nexport type ContainerListBlobHierarchySegmentResponse = ListBlobsHierarchySegmentResponse &\n  ContainerListBlobHierarchySegmentHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerListBlobHierarchySegmentHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ListBlobsHierarchySegmentResponseModel;\n    };\n  };\n\n/**\n * An Azure Storage blob\n */\nexport interface BlobItem {\n  name: string;\n  deleted: boolean;\n  snapshot: string;\n  versionId?: string;\n  isCurrentVersion?: boolean;\n  properties: BlobProperties;\n  metadata?: { [propertyName: string]: string };\n  tags?: Tags;\n  objectReplicationSourceProperties?: ObjectReplicationPolicy[];\n  hasVersionsOnly?: boolean;\n}\n\n/**\n * An interface representing BlobFlatListSegment.\n */\nexport interface BlobFlatListSegment {\n  blobItems: BlobItem[];\n}\n\n/**\n * An enumeration of blobs\n */\nexport interface ListBlobsFlatSegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxPageSize?: number;\n  segment: BlobFlatListSegment;\n  continuationToken?: string;\n}\n\n/**\n * Contains response data for the listBlobFlatSegment operation.\n */\nexport type ContainerListBlobFlatSegmentResponse = ListBlobsFlatSegmentResponse &\n  ContainerListBlobFlatSegmentHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerListBlobFlatSegmentHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ListBlobsFlatSegmentResponseModel;\n    };\n  };\n\n/**\n * Options to configure Container - List Blobs operations.\n *\n * See:\n * - {@link ContainerClient.listBlobsFlat}\n * - {@link ContainerClient.listBlobsByHierarchy}\n */\nexport interface ContainerListBlobsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n\n  /**\n   * Specifies whether metadata related to any current or previous Copy Blob operation should be included in the response.\n   */\n  includeCopy?: boolean;\n  /**\n   * Specifies whether soft deleted blobs should be included in the response.\n   */\n  includeDeleted?: boolean;\n  /**\n   * Specifies whether blob metadata be returned in the response.\n   */\n  includeMetadata?: boolean;\n  /**\n   * Specifies whether snapshots should be included in the enumeration. Snapshots are listed from oldest to newest in the response.\n   */\n  includeSnapshots?: boolean;\n  /**\n   * Specifies whether versions should be included in the enumeration. Versions are listed from oldest to newest in the response.\n   */\n  includeVersions?: boolean;\n  /**\n   * Specifies whether blobs for which blocks have been uploaded, but which have not been committed using Put Block List, be included in the response.\n   */\n  includeUncommitedBlobs?: boolean;\n  /**\n   * Specifies whether blob tags be returned in the response.\n   */\n  includeTags?: boolean;\n  /**\n   * Specifies whether deleted blob with versions be returned in the response.\n   */\n  includeDeletedWithVersions?: boolean;\n  /**\n   * Specifies whether blob immutability policy be returned in the response.\n   */\n  includeImmutabilityPolicy?: boolean;\n  /**\n   * Specifies whether blob legal hold be returned in the response.\n   */\n  includeLegalHold?: boolean;\n}\n\n/**\n * Contains response data for the {@link ContainerClient.createIfNotExists} operation.\n */\nexport interface ContainerCreateIfNotExistsResponse extends ContainerCreateResponse {\n  /**\n   * Indicate whether the container is successfully created. Is false when the container is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link ContainerClient.deleteIfExists} operation.\n */\nexport interface ContainerDeleteIfExistsResponse extends ContainerDeleteResponse {\n  /**\n   * Indicate whether the container is successfully deleted. Is false if the container does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Options to configure {@link ContainerClient.generateSasUrl} operation.\n */\nexport interface ContainerGenerateSasUrlOptions extends CommonGenerateSasUrlOptions {\n  /**\n   * Optional only when identifier is provided. Specifies the list of permissions to be associated with the SAS.\n   */\n  permissions?: ContainerSASPermissions;\n}\n\n/**\n * Options to configure the {@link ContainerClient.findBlobsByTagsSegment} operation.\n */\ninterface ContainerFindBlobsByTagsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of blobs\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport interface ContainerFindBlobByTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * The response of {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport type ContainerFindBlobsByTagsSegmentResponse = FilterBlobSegment &\n  ContainerFilterBlobsHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerFilterBlobsHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: FilterBlobSegmentModel;\n    };\n  };\n\n/**\n * A ContainerClient represents a URL to the Azure Storage container allowing you to manipulate its blobs.\n */\nexport class ContainerClient extends StorageClient {\n  /**\n   * containerContext provided by protocol layer.\n   */\n  private containerContext: Container;\n\n  private _containerName: string;\n\n  /**\n   * The name of the container.\n   */\n  public get containerName(): string {\n    return this._containerName;\n  }\n  /**\n   *\n   * Creates an instance of ContainerClient.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param containerName - Container name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n  constructor(connectionString: string, containerName: string, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ContainerClient.\n   * This method accepts an URL pointing to a container.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage container, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of ContainerClient.\n   * This method accepts an URL pointing to a container.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param url - A URL string pointing to Azure Storage container, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: PipelineLike;\n    let url: string;\n    options = options || {};\n    if (isPipelineLike(credentialOrPipelineOrContainerName)) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(extractedCreds.url, encodeURIComponent(containerName));\n\n          if (!options.proxyOptions) {\n            options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          }\n\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName parameter\");\n    }\n    super(url, pipeline);\n    this._containerName = this.getContainerNameFromUrl();\n    this.containerContext = new Container(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new container under the specified account. If the container with\n   * the same name already exists, the operation fails.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n   *\n   * @param options - Options to Container Create operation.\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const containerClient = blobServiceClient.getContainerClient(\"<container name>\");\n   * const createContainerResponse = await containerClient.create();\n   * console.log(\"Container was created successfully\", createContainerResponse.requestId);\n   * ```\n   */\n  public async create(options: ContainerCreateOptions = {}): Promise<ContainerCreateResponse> {\n    const { span, updatedOptions } = createSpan(\"ContainerClient-create\", options);\n    try {\n      // Spread operator in destructuring assignments,\n      // this will filter out unwanted properties from the response object into result object\n      return await this.containerContext.create({\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new container under the specified account. If the container with\n   * the same name already exists, it is not changed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n   *\n   * @param options -\n   */\n  public async createIfNotExists(\n    options: ContainerCreateOptions = {}\n  ): Promise<ContainerCreateIfNotExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"ContainerClient-createIfNotExists\", options);\n    try {\n      const res = await this.create(updatedOptions);\n      return {\n        succeeded: true,\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n      };\n    } catch (e: any) {\n      if (e.details?.errorCode === \"ContainerAlreadyExists\") {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message:\n            \"Expected exception when creating a container only if it does not already exist.\",\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response,\n        };\n      }\n\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns true if the Azure container resource represented by this client exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing container might be deleted by other clients or\n   * applications. Vice versa new containers with the same name might be added by other clients or\n   * applications after this function completes.\n   *\n   * @param options -\n   */\n  public async exists(options: ContainerExistsOptions = {}): Promise<boolean> {\n    const { span, updatedOptions } = createSpan(\"ContainerClient-exists\", options);\n    try {\n      await this.getProperties({\n        abortSignal: options.abortSignal,\n        tracingOptions: updatedOptions.tracingOptions,\n      });\n      return true;\n    } catch (e: any) {\n      if (e.statusCode === 404) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when checking container existence\",\n        });\n        return false;\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a {@link BlobClient}\n   *\n   * @param blobName - A blob name\n   * @returns A new BlobClient object for the given blob name.\n   */\n  public getBlobClient(blobName: string): BlobClient {\n    return new BlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates an {@link AppendBlobClient}\n   *\n   * @param blobName - An append blob name\n   */\n  public getAppendBlobClient(blobName: string): AppendBlobClient {\n    return new AppendBlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates a {@link BlockBlobClient}\n   *\n   * @param blobName - A block blob name\n   *\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   *\n   * const blockBlobClient = containerClient.getBlockBlobClient(\"<blob name>\");\n   * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n   * ```\n   */\n  public getBlockBlobClient(blobName: string): BlockBlobClient {\n    return new BlockBlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates a {@link PageBlobClient}\n   *\n   * @param blobName - A page blob name\n   */\n  public getPageBlobClient(blobName: string): PageBlobClient {\n    return new PageBlobClient(appendToURLPath(this.url, EscapePath(blobName)), this.pipeline);\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified\n   * container. The data returned does not include the container's list of blobs.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the `listContainers` method of {@link BlobServiceClient} using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @param options - Options to Container Get Properties operation.\n   */\n  public async getProperties(\n    options: ContainerGetPropertiesOptions = {}\n  ): Promise<ContainerGetPropertiesResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    const { span, updatedOptions } = createSpan(\"ContainerClient-getProperties\", options);\n    try {\n      return await this.containerContext.getProperties({\n        abortSignal: options.abortSignal,\n        ...options.conditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified container for deletion. The container and any blobs\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n   *\n   * @param options - Options to Container Delete operation.\n   */\n  public async delete(\n    options: ContainerDeleteMethodOptions = {}\n  ): Promise<ContainerDeleteResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    const { span, updatedOptions } = createSpan(\"ContainerClient-delete\", options);\n    try {\n      return await this.containerContext.delete({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified container for deletion if it exists. The container and any blobs\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n   *\n   * @param options - Options to Container Delete operation.\n   */\n  public async deleteIfExists(\n    options: ContainerDeleteMethodOptions = {}\n  ): Promise<ContainerDeleteIfExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"ContainerClient-deleteIfExists\", options);\n\n    try {\n      const res = await this.delete(updatedOptions);\n      return {\n        succeeded: true,\n        ...res,\n        _response: res._response, // _response is made non-enumerable\n      };\n    } catch (e: any) {\n      if (e.details?.errorCode === \"ContainerNotFound\") {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when deleting a container only if it exists.\",\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response,\n        };\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified container.\n   *\n   * If no option provided, or no metadata defined in the parameter, the container\n   * metadata will be removed.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-metadata\n   *\n   * @param metadata - Replace existing metadata with this value.\n   *                            If no value provided the existing metadata will be removed.\n   * @param options - Options to Container Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: ContainerSetMetadataOptions = {}\n  ): Promise<ContainerSetMetadataResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    if (options.conditions.ifUnmodifiedSince) {\n      throw new RangeError(\n        \"the IfUnmodifiedSince must have their default values because they are ignored by the blob service\"\n      );\n    }\n\n    const { span, updatedOptions } = createSpan(\"ContainerClient-setMetadata\", options);\n\n    try {\n      return await this.containerContext.setMetadata({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        metadata,\n        modifiedAccessConditions: options.conditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the permissions for the specified container. The permissions indicate\n   * whether container data may be accessed publicly.\n   *\n   * WARNING: JavaScript Date will potentially lose precision when parsing startsOn and expiresOn strings.\n   * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl\n   *\n   * @param options - Options to Container Get Access Policy operation.\n   */\n  public async getAccessPolicy(\n    options: ContainerGetAccessPolicyOptions = {}\n  ): Promise<ContainerGetAccessPolicyResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    const { span, updatedOptions } = createSpan(\"ContainerClient-getAccessPolicy\", options);\n\n    try {\n      const response = await this.containerContext.getAccessPolicy({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      const res: ContainerGetAccessPolicyResponse = {\n        _response: response._response,\n        blobPublicAccess: response.blobPublicAccess,\n        date: response.date,\n        etag: response.etag,\n        errorCode: response.errorCode,\n        lastModified: response.lastModified,\n        requestId: response.requestId,\n        clientRequestId: response.clientRequestId,\n        signedIdentifiers: [],\n        version: response.version,\n      };\n\n      for (const identifier of response) {\n        let accessPolicy: any = undefined;\n        if (identifier.accessPolicy) {\n          accessPolicy = {\n            permissions: identifier.accessPolicy.permissions,\n          };\n\n          if (identifier.accessPolicy.expiresOn) {\n            accessPolicy.expiresOn = new Date(identifier.accessPolicy.expiresOn);\n          }\n\n          if (identifier.accessPolicy.startsOn) {\n            accessPolicy.startsOn = new Date(identifier.accessPolicy.startsOn);\n          }\n        }\n\n        res.signedIdentifiers.push({\n          accessPolicy,\n          id: identifier.id,\n        });\n      }\n\n      return res;\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets the permissions for the specified container. The permissions indicate\n   * whether blobs in a container may be accessed publicly.\n   *\n   * When you set permissions for a container, the existing permissions are replaced.\n   * If no access or containerAcl provided, the existing container ACL will be\n   * removed.\n   *\n   * When you establish a stored access policy on a container, it may take up to 30 seconds to take effect.\n   * During this interval, a shared access signature that is associated with the stored access policy will\n   * fail with status code 403 (Forbidden), until the access policy becomes active.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n   *\n   * @param access - The level of public access to data in the container.\n   * @param containerAcl - Array of elements each having a unique Id and details of the access policy.\n   * @param options - Options to Container Set Access Policy operation.\n   */\n  public async setAccessPolicy(\n    access?: PublicAccessType,\n    containerAcl?: SignedIdentifier[],\n    options: ContainerSetAccessPolicyOptions = {}\n  ): Promise<ContainerSetAccessPolicyResponse> {\n    options.conditions = options.conditions || {};\n    const { span, updatedOptions } = createSpan(\"ContainerClient-setAccessPolicy\", options);\n    try {\n      const acl: SignedIdentifierModel[] = [];\n      for (const identifier of containerAcl || []) {\n        acl.push({\n          accessPolicy: {\n            expiresOn: identifier.accessPolicy.expiresOn\n              ? truncatedISO8061Date(identifier.accessPolicy.expiresOn)\n              : \"\",\n            permissions: identifier.accessPolicy.permissions,\n            startsOn: identifier.accessPolicy.startsOn\n              ? truncatedISO8061Date(identifier.accessPolicy.startsOn)\n              : \"\",\n          },\n          id: identifier.id,\n        });\n      }\n\n      return await this.containerContext.setAccessPolicy({\n        abortSignal: options.abortSignal,\n        access,\n        containerAcl: acl,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Get a {@link BlobLeaseClient} that manages leases on the container.\n   *\n   * @param proposeLeaseId - Initial proposed lease Id.\n   * @returns A new BlobLeaseClient object for managing leases on the container.\n   */\n  public getBlobLeaseClient(proposeLeaseId?: string): BlobLeaseClient {\n    return new BlobLeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   *\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use {@link BlockBlobClient.stageBlock} and {@link BlockBlobClient.commitBlockList}.\n   *\n   * This is a non-parallel uploading method, please use {@link BlockBlobClient.uploadFile},\n   * {@link BlockBlobClient.uploadStream} or {@link BlockBlobClient.uploadBrowserData} for better\n   * performance with concurrency uploading.\n   *\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param blobName - Name of the block blob to create or update.\n   * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param options - Options to configure the Block Blob Upload operation.\n   * @returns Block Blob upload response data and the corresponding BlockBlobClient instance.\n   */\n  public async uploadBlockBlob(\n    blobName: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobUploadOptions = {}\n  ): Promise<{ blockBlobClient: BlockBlobClient; response: BlockBlobUploadResponse }> {\n    const { span, updatedOptions } = createSpan(\"ContainerClient-uploadBlockBlob\", options);\n    try {\n      const blockBlobClient = this.getBlockBlobClient(blobName);\n      const response = await blockBlobClient.upload(body, contentLength, updatedOptions);\n      return {\n        blockBlobClient,\n        response,\n      };\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param blobName -\n   * @param options - Options to Blob Delete operation.\n   * @returns Block blob deletion response data.\n   */\n  public async deleteBlob(\n    blobName: string,\n    options: ContainerDeleteBlobOptions = {}\n  ): Promise<BlobDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ContainerClient-deleteBlob\", options);\n    try {\n      let blobClient = this.getBlobClient(blobName);\n      if (options.versionId) {\n        blobClient = blobClient.withVersion(options.versionId);\n      }\n      return await blobClient.delete(updatedOptions);\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * listBlobFlatSegment returns a single segment of blobs starting from the\n   * specified Marker. Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call listBlobsFlatSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to Container List Blob Flat Segment operation.\n   */\n  private async listBlobFlatSegment(\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): Promise<ContainerListBlobFlatSegmentResponse> {\n    const { span, updatedOptions } = createSpan(\"ContainerClient-listBlobFlatSegment\", options);\n    try {\n      const response = await this.containerContext.listBlobFlatSegment({\n        marker,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      response.segment.blobItems = [];\n      if ((response.segment as any)[\"Blob\"] !== undefined) {\n        response.segment.blobItems = ProcessBlobItems((response.segment as any)[\"Blob\"]);\n      }\n\n      const wrappedResponse: ContainerListBlobFlatSegmentResponse = {\n        ...response,\n        _response: {\n          ...response._response,\n          parsedBody: ConvertInternalResponseOfListBlobFlat(response._response.parsedBody),\n        }, // _response is made non-enumerable\n        segment: {\n          ...response.segment,\n          blobItems: response.segment.blobItems.map((blobItemInteral) => {\n            const blobItem: BlobItem = {\n              ...blobItemInteral,\n              name: BlobNameToString(blobItemInteral.name),\n              tags: toTags(blobItemInteral.blobTags),\n              objectReplicationSourceProperties: parseObjectReplicationRecord(\n                blobItemInteral.objectReplicationMetadata\n              ),\n            };\n            return blobItem;\n          }),\n        },\n      };\n      return wrappedResponse;\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * listBlobHierarchySegment returns a single segment of blobs starting from\n   * the specified Marker. Use an empty Marker to start enumeration from the\n   * beginning. After getting a segment, process it, and then call listBlobsHierarchicalSegment\n   * again (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to Container List Blob Hierarchy Segment operation.\n   */\n  private async listBlobHierarchySegment(\n    delimiter: string,\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): Promise<ContainerListBlobHierarchySegmentResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"ContainerClient-listBlobHierarchySegment\",\n      options\n    );\n    try {\n      const response = await this.containerContext.listBlobHierarchySegment(delimiter, {\n        marker,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      response.segment.blobItems = [];\n      if ((response.segment as any)[\"Blob\"] !== undefined) {\n        response.segment.blobItems = ProcessBlobItems((response.segment as any)[\"Blob\"]);\n      }\n\n      response.segment.blobPrefixes = [];\n      if ((response.segment as any)[\"BlobPrefix\"] !== undefined) {\n        response.segment.blobPrefixes = ProcessBlobPrefixes(\n          (response.segment as any)[\"BlobPrefix\"]\n        );\n      }\n\n      const wrappedResponse: ContainerListBlobHierarchySegmentResponse = {\n        ...response,\n        _response: {\n          ...response._response,\n          parsedBody: ConvertInternalResponseOfListBlobHierarchy(response._response.parsedBody),\n        }, // _response is made non-enumerable\n        segment: {\n          ...response.segment,\n          blobItems: response.segment.blobItems.map((blobItemInteral) => {\n            const blobItem: BlobItem = {\n              ...blobItemInteral,\n              name: BlobNameToString(blobItemInteral.name),\n              tags: toTags(blobItemInteral.blobTags),\n              objectReplicationSourceProperties: parseObjectReplicationRecord(\n                blobItemInteral.objectReplicationMetadata\n              ),\n            };\n            return blobItem;\n          }),\n          blobPrefixes: response.segment.blobPrefixes?.map((blobPrefixInternal) => {\n            const blobPrefix: BlobPrefix = {\n              name: BlobNameToString(blobPrefixInternal.name),\n            };\n            return blobPrefix;\n          }),\n        },\n      };\n      return wrappedResponse;\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerListBlobFlatSegmentResponse\n   *\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to list blobs operation.\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): AsyncIterableIterator<ContainerListBlobFlatSegmentResponse> {\n    let listBlobsFlatSegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listBlobsFlatSegmentResponse = await this.listBlobFlatSegment(marker, options);\n        marker = listBlobsFlatSegmentResponse.continuationToken;\n        yield await listBlobsFlatSegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link BlobItem} objects\n   *\n   * @param options - Options to list blobs operation.\n   */\n  private async *listItems(\n    options: ContainerListBlobsSegmentOptions = {}\n  ): AsyncIterableIterator<BlobItem> {\n    let marker: string | undefined;\n    for await (const listBlobsFlatSegmentResponse of this.listSegments(marker, options)) {\n      yield* listBlobsFlatSegmentResponse.segment.blobItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the blobs\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the containerClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\");`\n   * let i = 1;\n   * for await (const blob of containerClient.listBlobsFlat()) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = containerClient.listBlobsFlat();\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of containerClient.listBlobsFlat().byPage({ maxPageSize: 20 })) {\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = containerClient.listBlobsFlat().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * for (const blob of response.segment.blobItems) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = containerClient.listBlobsFlat().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 blob names\n   * for (const blob of response.segment.blobItems) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * @param options - Options to list blobs.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listBlobsFlat(\n    options: ContainerListBlobsOptions = {}\n  ): PagedAsyncIterableIterator<BlobItem, ContainerListBlobFlatSegmentResponse> {\n    const include: ListBlobsIncludeItem[] = [];\n    if (options.includeCopy) {\n      include.push(\"copy\");\n    }\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n    if (options.includeVersions) {\n      include.push(\"versions\");\n    }\n    if (options.includeUncommitedBlobs) {\n      include.push(\"uncommittedblobs\");\n    }\n    if (options.includeTags) {\n      include.push(\"tags\");\n    }\n    if (options.includeDeletedWithVersions) {\n      include.push(\"deletedwithversions\");\n    }\n    if (options.includeImmutabilityPolicy) {\n      include.push(\"immutabilitypolicy\");\n    }\n    if (options.includeLegalHold) {\n      include.push(\"legalhold\");\n    }\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const updatedOptions: ContainerListBlobsSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {}),\n    };\n\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listItems(updatedOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...updatedOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerListBlobHierarchySegmentResponse\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to list blobs operation.\n   */\n  private async *listHierarchySegments(\n    delimiter: string,\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): AsyncIterableIterator<ContainerListBlobHierarchySegmentResponse> {\n    let listBlobsHierarchySegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listBlobsHierarchySegmentResponse = await this.listBlobHierarchySegment(\n          delimiter,\n          marker,\n          options\n        );\n        marker = listBlobsHierarchySegmentResponse.continuationToken;\n        yield await listBlobsHierarchySegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link BlobPrefix} and {@link BlobItem} objects.\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param options - Options to list blobs operation.\n   */\n  private async *listItemsByHierarchy(\n    delimiter: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): AsyncIterableIterator<({ kind: \"prefix\" } & BlobPrefix) | ({ kind: \"blob\" } & BlobItem)> {\n    let marker: string | undefined;\n    for await (const listBlobsHierarchySegmentResponse of this.listHierarchySegments(\n      delimiter,\n      marker,\n      options\n    )) {\n      const segment = listBlobsHierarchySegmentResponse.segment;\n      if (segment.blobPrefixes) {\n        for (const prefix of segment.blobPrefixes) {\n          yield {\n            kind: \"prefix\",\n            ...prefix,\n          };\n        }\n      }\n      for (const blob of segment.blobItems) {\n        yield { kind: \"blob\", ...blob };\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the blobs by hierarchy.\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs by hierarchy in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * for await (const item of containerClient.listBlobsByHierarchy(\"/\")) {\n   *   if (item.kind === \"prefix\") {\n   *     console.log(`\\tBlobPrefix: ${item.name}`);\n   *   } else {\n   *     console.log(`\\tBlobItem: name - ${item.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let iter = containerClient.listBlobsByHierarchy(\"/\", { prefix: \"prefix1/\" });\n   * let entity = await iter.next();\n   * while (!entity.done) {\n   *   let item = entity.value;\n   *   if (item.kind === \"prefix\") {\n   *     console.log(`\\tBlobPrefix: ${item.name}`);\n   *   } else {\n   *     console.log(`\\tBlobItem: name - ${item.name}`);\n   *   }\n   *   entity = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * console.log(\"Listing blobs by hierarchy by page\");\n   * for await (const response of containerClient.listBlobsByHierarchy(\"/\").byPage()) {\n   *   const segment = response.segment;\n   *   if (segment.blobPrefixes) {\n   *     for (const prefix of segment.blobPrefixes) {\n   *       console.log(`\\tBlobPrefix: ${prefix.name}`);\n   *     }\n   *   }\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`\\tBlobItem: name - ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a max page size:\n   *\n   * ```js\n   * console.log(\"Listing blobs by hierarchy by page, specifying a prefix and a max page size\");\n   *\n   * let i = 1;\n   * for await (const response of containerClient\n   *   .listBlobsByHierarchy(\"/\", { prefix: \"prefix2/sub1/\" })\n   *   .byPage({ maxPageSize: 2 })) {\n   *   console.log(`Page ${i++}`);\n   *   const segment = response.segment;\n   *\n   *   if (segment.blobPrefixes) {\n   *     for (const prefix of segment.blobPrefixes) {\n   *       console.log(`\\tBlobPrefix: ${prefix.name}`);\n   *     }\n   *   }\n   *\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`\\tBlobItem: name - ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param delimiter - The character or string used to define the virtual hierarchy\n   * @param options - Options to list blobs operation.\n   */\n  public listBlobsByHierarchy(\n    delimiter: string,\n    options: ContainerListBlobsOptions = {}\n  ): PagedAsyncIterableIterator<\n    ({ kind: \"prefix\" } & BlobPrefix) | ({ kind: \"blob\" } & BlobItem),\n    ContainerListBlobHierarchySegmentResponse\n  > {\n    if (delimiter === \"\") {\n      throw new RangeError(\"delimiter should contain one or more characters\");\n    }\n\n    const include: ListBlobsIncludeItem[] = [];\n    if (options.includeCopy) {\n      include.push(\"copy\");\n    }\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n    if (options.includeVersions) {\n      include.push(\"versions\");\n    }\n    if (options.includeUncommitedBlobs) {\n      include.push(\"uncommittedblobs\");\n    }\n    if (options.includeTags) {\n      include.push(\"tags\");\n    }\n    if (options.includeDeletedWithVersions) {\n      include.push(\"deletedwithversions\");\n    }\n    if (options.includeImmutabilityPolicy) {\n      include.push(\"immutabilitypolicy\");\n    }\n    if (options.includeLegalHold) {\n      include.push(\"legalhold\");\n    }\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const updatedOptions: ContainerListBlobsSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {}),\n    };\n    // AsyncIterableIterator to iterate over blob prefixes and blobs\n    const iter = this.listItemsByHierarchy(delimiter, updatedOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listHierarchySegments(delimiter, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...updatedOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs in the container whose tags\n   * match a given search expression.\n   *\n   * @param tagFilterSqlExpression - The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                        The given expression must evaluate to true for a blob to be returned in the results.\n   *                                        The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                        however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async findBlobsByTagsSegment(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ContainerFindBlobsByTagsSegmentOptions = {}\n  ): Promise<ContainerFindBlobsByTagsSegmentResponse> {\n    const { span, updatedOptions } = createSpan(\"ContainerClient-findBlobsByTagsSegment\", options);\n\n    try {\n      const response = await this.containerContext.filterBlobs({\n        abortSignal: options.abortSignal,\n        where: tagFilterSqlExpression,\n        marker,\n        maxPageSize: options.maxPageSize,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      const wrappedResponse: ContainerFindBlobsByTagsSegmentResponse = {\n        ...response,\n        _response: response._response, // _response is made non-enumerable\n        blobs: response.blobs.map((blob) => {\n          let tagValue = \"\";\n          if (blob.tags?.blobTagSet.length === 1) {\n            tagValue = blob.tags.blobTagSet[0].value;\n          }\n          return { ...blob, tags: toTags(blob.tags), tagValue };\n        }),\n      };\n      return wrappedResponse;\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerFindBlobsByTagsSegmentResponse.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async *findBlobsByTagsSegments(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ContainerFindBlobsByTagsSegmentOptions = {}\n  ): AsyncIterableIterator<ContainerFindBlobsByTagsSegmentResponse> {\n    let response;\n    if (!!marker || marker === undefined) {\n      do {\n        response = await this.findBlobsByTagsSegment(tagFilterSqlExpression, marker, options);\n        response.blobs = response.blobs || [];\n        marker = response.continuationToken;\n        yield response;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for blobs.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to findBlobsByTagsItems.\n   */\n  private async *findBlobsByTagsItems(\n    tagFilterSqlExpression: string,\n    options: ContainerFindBlobsByTagsSegmentOptions = {}\n  ): AsyncIterableIterator<FilterBlobItem> {\n    let marker: string | undefined;\n    for await (const segment of this.findBlobsByTagsSegments(\n      tagFilterSqlExpression,\n      marker,\n      options\n    )) {\n      yield* segment.blobs;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to find all blobs with specified tag\n   * under the specified container.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const blob of containerClient.findBlobsByTags(\"tagkey='tagvalue'\")) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = containerClient.findBlobsByTags(\"tagkey='tagvalue'\");\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of containerClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 20 })) {\n   *   if (response.blobs) {\n   *     for (const blob of response.blobs) {\n   *       console.log(`Blob ${i++}: ${blob.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = containerClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = containerClient\n   *   .findBlobsByTags(\"tagkey='tagvalue'\")\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *      console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to find blobs by tags.\n   */\n  public findBlobsByTags(\n    tagFilterSqlExpression: string,\n    options: ContainerFindBlobByTagsOptions = {}\n  ): PagedAsyncIterableIterator<FilterBlobItem, ContainerFindBlobsByTagsSegmentResponse> {\n    // AsyncIterableIterator to iterate over blobs\n    const listSegmentOptions: ContainerFindBlobsByTagsSegmentOptions = {\n      ...options,\n    };\n\n    const iter = this.findBlobsByTagsItems(tagFilterSqlExpression, listSegmentOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.findBlobsByTagsSegments(tagFilterSqlExpression, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions,\n        });\n      },\n    };\n  }\n\n  private getContainerNameFromUrl(): string {\n    let containerName;\n    try {\n      //  URL may look like the following\n      // \"https://myaccount.blob.core.windows.net/mycontainer?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer\";\n      // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername`\n      // http://localhost:10001/devstoreaccount1/containername\n\n      const parsedUrl = URLBuilder.parse(this.url);\n\n      if (parsedUrl.getHost()!.split(\".\")[1] === \"blob\") {\n        // \"https://myaccount.blob.core.windows.net/containername\".\n        // \"https://customdomain.com/containername\".\n        // .getPath() -> /containername\n        containerName = parsedUrl.getPath()!.split(\"/\")[1];\n      } else if (isIpEndpointStyle(parsedUrl)) {\n        // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername\n        // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername\n        // .getPath() -> /devstoreaccount1/containername\n        containerName = parsedUrl.getPath()!.split(\"/\")[2];\n      } else {\n        // \"https://customdomain.com/containername\".\n        // .getPath() -> /containername\n        containerName = parsedUrl.getPath()!.split(\"/\")[1];\n      }\n\n      // decode the encoded containerName - to get all the special characters that might be present in it\n      containerName = decodeURIComponent(containerName);\n\n      if (!containerName) {\n        throw new Error(\"Provided containerName is invalid.\");\n      }\n\n      return containerName;\n    } catch (error: any) {\n      throw new Error(\"Unable to extract containerName with provided information.\");\n    }\n  }\n\n  /**\n   * Only available for ContainerClient constructed with a shared key credential.\n   *\n   * Generates a Blob Container Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasUrl(options: ContainerGenerateSasUrlOptions): Promise<string> {\n    return new Promise((resolve) => {\n      if (!(this.credential instanceof StorageSharedKeyCredential)) {\n        throw new RangeError(\n          \"Can only generate the SAS when the client is initialized with a shared key credential\"\n        );\n      }\n\n      const sas = generateBlobSASQueryParameters(\n        {\n          containerName: this._containerName,\n          ...options,\n        },\n        this.credential\n      ).toString();\n\n      resolve(appendToURLQuery(this.url, sas));\n    });\n  }\n\n  /**\n   * Creates a BlobBatchClient object to conduct batch operations.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @returns A new BlobBatchClient object for this container.\n   */\n  public getBlobBatchClient(): BlobBatchClient {\n    return new BlobBatchClient(this.url, this.pipeline);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class AccountSASPermissions {\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n\n    for (const c of permissions) {\n      switch (c) {\n        case \"r\":\n          accountSASPermissions.read = true;\n          break;\n        case \"w\":\n          accountSASPermissions.write = true;\n          break;\n        case \"d\":\n          accountSASPermissions.delete = true;\n          break;\n        case \"x\":\n          accountSASPermissions.deleteVersion = true;\n          break;\n        case \"l\":\n          accountSASPermissions.list = true;\n          break;\n        case \"a\":\n          accountSASPermissions.add = true;\n          break;\n        case \"c\":\n          accountSASPermissions.create = true;\n          break;\n        case \"u\":\n          accountSASPermissions.update = true;\n          break;\n        case \"p\":\n          accountSASPermissions.process = true;\n          break;\n        case \"t\":\n          accountSASPermissions.tag = true;\n          break;\n        case \"f\":\n          accountSASPermissions.filter = true;\n          break;\n        case \"i\":\n          accountSASPermissions.setImmutabilityPolicy = true;\n          break;\n        case \"y\":\n          accountSASPermissions.permanentDelete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission character: ${c}`);\n      }\n    }\n\n    return accountSASPermissions;\n  }\n\n  /**\n   * Creates a {@link AccountSASPermissions} from a raw object which contains same keys as it\n   * and boolean values for them.\n   *\n   * @param permissionLike -\n   */\n  public static from(permissionLike: AccountSASPermissionsLike): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n    if (permissionLike.read) {\n      accountSASPermissions.read = true;\n    }\n    if (permissionLike.write) {\n      accountSASPermissions.write = true;\n    }\n    if (permissionLike.delete) {\n      accountSASPermissions.delete = true;\n    }\n    if (permissionLike.deleteVersion) {\n      accountSASPermissions.deleteVersion = true;\n    }\n    if (permissionLike.filter) {\n      accountSASPermissions.filter = true;\n    }\n    if (permissionLike.tag) {\n      accountSASPermissions.tag = true;\n    }\n    if (permissionLike.list) {\n      accountSASPermissions.list = true;\n    }\n    if (permissionLike.add) {\n      accountSASPermissions.add = true;\n    }\n    if (permissionLike.create) {\n      accountSASPermissions.create = true;\n    }\n    if (permissionLike.update) {\n      accountSASPermissions.update = true;\n    }\n    if (permissionLike.process) {\n      accountSASPermissions.process = true;\n    }\n    if (permissionLike.setImmutabilityPolicy) {\n      accountSASPermissions.setImmutabilityPolicy = true;\n    }\n    if (permissionLike.permanentDelete) {\n      accountSASPermissions.permanentDelete = true;\n    }\n    return accountSASPermissions;\n  }\n\n  /**\n   * Permission to read resources and list queues and tables granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Permission to write resources granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Permission to delete versions granted.\n   */\n  public deleteVersion: boolean = false;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  public update: boolean = false;\n\n  /**\n   * Permission to get and delete messages granted.\n   */\n  public process: boolean = false;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  public tag: boolean = false;\n\n  /**\n   * Permission to filter blobs.\n   */\n  public filter: boolean = false;\n\n  /**\n   * Permission to set immutability policy.\n   */\n  public setImmutabilityPolicy: boolean = false;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  public permanentDelete: boolean = false;\n\n  /**\n   * Produces the SAS permissions string for an Azure Storage account.\n   * Call this method to set AccountSASSignatureValues Permissions field.\n   *\n   * Using this method will guarantee the resource types are in\n   * an order accepted by the service.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    // The order of the characters should be as specified here to ensure correctness:\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n    // Use a string array instead of string concatenating += operator for performance\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.deleteVersion) {\n      permissions.push(\"x\");\n    }\n    if (this.filter) {\n      permissions.push(\"f\");\n    }\n    if (this.tag) {\n      permissions.push(\"t\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.update) {\n      permissions.push(\"u\");\n    }\n    if (this.process) {\n      permissions.push(\"p\");\n    }\n    if (this.setImmutabilityPolicy) {\n      permissions.push(\"i\");\n    }\n    if (this.permanentDelete) {\n      permissions.push(\"y\");\n    }\n    return permissions.join(\"\");\n  }\n}\n\n/**\n * A type that looks like an account SAS permission.\n * Used in {@link AccountSASPermissions} to parse SAS permissions from raw objects.\n */\nexport interface AccountSASPermissionsLike {\n  /**\n   * Permission to read resources and list queues and tables granted.\n   */\n  read?: boolean;\n\n  /**\n   * Permission to write resources granted.\n   */\n  write?: boolean;\n\n  /**\n   * Permission to delete blobs and files granted.\n   */\n  delete?: boolean;\n\n  /**\n   * Permission to delete versions granted.\n   */\n  deleteVersion?: boolean;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   */\n  list?: boolean;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   */\n  add?: boolean;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  create?: boolean;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  update?: boolean;\n\n  /**\n   * Permission to get and delete messages granted.\n   */\n  process?: boolean;\n\n  /**\n   * Specfies Tag access granted.\n   */\n  tag?: boolean;\n\n  /**\n   * Permission to filter blobs.\n   */\n  filter?: boolean;\n\n  /**\n   * Permission to set immutability policy.\n   */\n  setImmutabilityPolicy?: boolean;\n\n  /**\n   * Specifies that Permanent Delete is permitted.\n   */\n  permanentDelete?: boolean;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n */\nexport class AccountSASResourceTypes {\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @param resourceTypes -\n   */\n  public static parse(resourceTypes: string): AccountSASResourceTypes {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n\n    return accountSASResourceTypes;\n  }\n\n  /**\n   * Permission to access service level APIs granted.\n   */\n  public service: boolean = false;\n\n  /**\n   * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n   */\n  public container: boolean = false;\n\n  /**\n   * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n   */\n  public object: boolean = false;\n\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    const resourceTypes: string[] = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n */\nexport class AccountSASServices {\n  /**\n   * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid service.\n   *\n   * @param services -\n   */\n  public static parse(services: string): AccountSASServices {\n    const accountSASServices = new AccountSASServices();\n\n    for (const c of services) {\n      switch (c) {\n        case \"b\":\n          accountSASServices.blob = true;\n          break;\n        case \"f\":\n          accountSASServices.file = true;\n          break;\n        case \"q\":\n          accountSASServices.queue = true;\n          break;\n        case \"t\":\n          accountSASServices.table = true;\n          break;\n        default:\n          throw new RangeError(`Invalid service character: ${c}`);\n      }\n    }\n\n    return accountSASServices;\n  }\n\n  /**\n   * Permission to access blob resources granted.\n   */\n  public blob: boolean = false;\n\n  /**\n   * Permission to access file resources granted.\n   */\n  public file: boolean = false;\n\n  /**\n   * Permission to access queue resources granted.\n   */\n  public queue: boolean = false;\n\n  /**\n   * Permission to access table resources granted.\n   */\n  public table: boolean = false;\n\n  /**\n   * Converts the given services to a string.\n   *\n   */\n  public toString(): string {\n    const services: string[] = [];\n    if (this.blob) {\n      services.push(\"b\");\n    }\n    if (this.table) {\n      services.push(\"t\");\n    }\n    if (this.queue) {\n      services.push(\"q\");\n    }\n    if (this.file) {\n      services.push(\"f\");\n    }\n    return services.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"../utils/constants\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * AccountSASSignatureValues is used to generate a Shared Access Signature (SAS) for an Azure Storage account. Once\n * all the values here are set appropriately, call {@link generateAccountSASQueryParameters} to obtain a representation\n * of the SAS which can actually be applied to blob urls. Note: that both this class and {@link SASQueryParameters}\n * exist because the former is mutable and a logical representation while the latter is immutable and used to generate\n * actual REST requests.\n *\n * @see https://docs.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1\n * for more conceptual information on SAS\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n * for descriptions of the parameters, including which are required\n */\nexport interface AccountSASSignatureValues {\n  /**\n   * If not provided, this defaults to the service version targeted by this version of the library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * The time after which the SAS will no longer work.\n   */\n  expiresOn: Date;\n\n  /**\n   * Specifies which operations the SAS user may perform. Please refer to {@link AccountSASPermissions} for help\n   * constructing the permissions string.\n   */\n  permissions: AccountSASPermissions;\n\n  /**\n   * Optional. IP range allowed.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The values that indicate the services accessible with this SAS. Please refer to {@link AccountSASServices} to\n   * construct this value.\n   */\n  services: string;\n\n  /**\n   * The values that indicate the resource types accessible with this SAS. Please refer\n   * to {@link AccountSASResourceTypes} to construct this value.\n   */\n  resourceTypes: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param accountSASSignatureValues -\n * @param sharedKeyCredential -\n */\nexport function generateAccountSASQueryParameters(\n  accountSASSignatureValues: AccountSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  const version = accountSASSignatureValues.version\n    ? accountSASSignatureValues.version\n    : SERVICE_VERSION;\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.setImmutabilityPolicy &&\n    version < \"2020-08-04\"\n  ) {\n    throw RangeError(\"'version' must be >= '2020-08-04' when provided 'i' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.deleteVersion &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when provided 'x' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.permanentDelete &&\n    version < \"2019-10-10\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-10-10' when provided 'y' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.tag &&\n    version < \"2019-12-12\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-12-12' when provided 't' permission.\");\n  }\n\n  if (\n    accountSASSignatureValues.permissions &&\n    accountSASSignatureValues.permissions.filter &&\n    version < \"2019-12-12\"\n  ) {\n    throw RangeError(\"'version' must be >= '2019-12-12' when provided 'f' permission.\");\n  }\n\n  if (accountSASSignatureValues.encryptionScope && version < \"2020-12-06\") {\n    throw RangeError(\"'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.\");\n  }\n\n  const parsedPermissions = AccountSASPermissions.parse(\n    accountSASSignatureValues.permissions.toString()\n  );\n  const parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n  const parsedResourceTypes = AccountSASResourceTypes.parse(\n    accountSASSignatureValues.resourceTypes\n  ).toString();\n\n  let stringToSign: string;\n\n  if (version >= \"2020-12-06\") {\n    stringToSign = [\n      sharedKeyCredential.accountName,\n      parsedPermissions,\n      parsedServices,\n      parsedResourceTypes,\n      accountSASSignatureValues.startsOn\n        ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n        : \"\",\n      truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n      accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n      accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n      version,\n      accountSASSignatureValues.encryptionScope ? accountSASSignatureValues.encryptionScope : \"\",\n      \"\", // Account SAS requires an additional newline character\n    ].join(\"\\n\");\n  } else {\n    stringToSign = [\n      sharedKeyCredential.accountName,\n      parsedPermissions,\n      parsedServices,\n      parsedResourceTypes,\n      accountSASSignatureValues.startsOn\n        ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n        : \"\",\n      truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n      accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n      accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n      version,\n      \"\", // Account SAS requires an additional newline character\n    ].join(\"\\n\");\n  }\n\n  const signature: string = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    parsedPermissions.toString(),\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.protocol,\n    accountSASSignatureValues.startsOn,\n    accountSASSignatureValues.expiresOn,\n    accountSASSignatureValues.ipRange,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    accountSASSignatureValues.encryptionScope\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport {\n  TokenCredential,\n  isTokenCredential,\n  isNode,\n  HttpResponse,\n  getDefaultProxySettings,\n} from \"@azure/core-http\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  ServiceGetUserDelegationKeyHeaders,\n  ContainerCreateResponse,\n  ContainerDeleteResponse,\n  ServiceGetPropertiesResponse,\n  BlobServiceProperties,\n  ServiceSetPropertiesResponse,\n  ServiceGetStatisticsResponse,\n  ServiceGetAccountInfoResponse,\n  ServiceListContainersSegmentResponse,\n  ContainerItem,\n  UserDelegationKeyModel,\n  ContainerUndeleteResponse,\n  FilterBlobSegmentModel,\n  ServiceFilterBlobsHeaders,\n  ContainerRenameResponse,\n  LeaseAccessConditions,\n  FilterBlobSegment,\n  FilterBlobItem,\n} from \"./generatedModels\";\nimport { Container, Service } from \"./generated/src/operations\";\nimport { newPipeline, StoragePipelineOptions, PipelineLike, isPipelineLike } from \"./Pipeline\";\nimport {\n  ContainerClient,\n  ContainerCreateOptions,\n  ContainerDeleteMethodOptions,\n} from \"./ContainerClient\";\nimport {\n  appendToURLPath,\n  appendToURLQuery,\n  extractConnectionStringParts,\n  toTags,\n} from \"./utils/utils.common\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport \"@azure/core-paging\";\nimport { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\nimport { convertTracingToRequestOptionsBase, createSpan } from \"./utils/tracing\";\nimport { BlobBatchClient } from \"./BlobBatchClient\";\nimport { CommonOptions, StorageClient } from \"./StorageClient\";\nimport { AccountSASPermissions } from \"./sas/AccountSASPermissions\";\nimport { SASProtocol } from \"./sas/SASQueryParameters\";\nimport { SasIPRange } from \"./sas/SasIPRange\";\nimport { generateAccountSASQueryParameters } from \"./sas/AccountSASSignatureValues\";\nimport { AccountSASServices } from \"./sas/AccountSASServices\";\nimport { ListContainersIncludeType } from \"./generated/src\";\n\n/**\n * Options to configure the {@link BlobServiceClient.getProperties} operation.\n */\nexport interface ServiceGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.setProperties} operation.\n */\nexport interface ServiceSetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.getAccountInfo} operation.\n */\nexport interface ServiceGetAccountInfoOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.getStatistics} operation.\n */\nexport interface ServiceGetStatisticsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the Service - Get User Delegation Key.\n */\nexport interface ServiceGetUserDelegationKeyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.listContainerSegment} operation.\n */\ninterface ServiceListContainersSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n  /**\n   * Include this parameter to\n   * specify that the container's metadata be returned as part of the response\n   * body. Possible values include: 'metadata'\n   */\n  include?: ListContainersIncludeType | ListContainersIncludeType[];\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.listContainers} operation.\n */\nexport interface ServiceListContainersOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies whether the container's metadata\n   *                                   should be returned as part of the response body.\n   */\n  includeMetadata?: boolean;\n\n  /**\n   * Specifies whether soft deleted containers should be included in the response.\n   */\n  includeDeleted?: boolean;\n  /**\n   * Specifies whether system containers should be included in the response.\n   */\n  includeSystem?: boolean;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.findBlobsByTagsSegment} operation.\n */\ninterface ServiceFindBlobsByTagsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of blobs\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport interface ServiceFindBlobByTagsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * The response of {@link BlobServiceClient.findBlobsByTags} operation.\n */\nexport type ServiceFindBlobsByTagsSegmentResponse = FilterBlobSegment &\n  ServiceFilterBlobsHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceFilterBlobsHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: FilterBlobSegmentModel;\n    };\n  };\n\n/**\n * A user delegation key.\n */\nexport interface UserDelegationKey {\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   */\n  signedObjectId: string;\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   */\n  signedTenantId: string;\n  /**\n   * The date-time the key is active.\n   */\n  signedStartsOn: Date;\n  /**\n   * The date-time the key expires.\n   */\n  signedExpiresOn: Date;\n  /**\n   * Abbreviation of the Azure Storage service that accepts the key.\n   */\n  signedService: string;\n  /**\n   * The service version that created the key.\n   */\n  signedVersion: string;\n  /**\n   * The key as a base64 string.\n   */\n  value: string;\n}\n\n/**\n * Contains response data for the {@link getUserDelegationKey} operation.\n */\nexport declare type ServiceGetUserDelegationKeyResponse = UserDelegationKey &\n  ServiceGetUserDelegationKeyHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceGetUserDelegationKeyHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: UserDelegationKeyModel;\n    };\n  };\n\n/**\n * Options to configure {@link BlobServiceClient.undeleteContainer} operation.\n */\nexport interface ServiceUndeleteContainerOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. Specifies the new name of the restored container.\n   * Will use its original name if this is not specified.\n   * @deprecated Restore container to a different name is not supported by service anymore.\n   */\n  destinationContainerName?: string;\n}\n\n/**\n * Options to configure {@link BlobServiceClient.renameContainer} operation.\n */\nexport interface ServiceRenameContainerOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Condition to meet for the source container.\n   */\n  sourceCondition?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure {@link BlobServiceClient.generateAccountSasUrl} operation.\n */\nexport interface ServiceGenerateAccountSasUrlOptions {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n  /**\n   * Optional. IP range allowed.\n   */\n  ipRange?: SasIPRange;\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n}\n\n/**\n * A BlobServiceClient represents a Client to the Azure Storage Blob service allowing you\n * to manipulate blob containers.\n */\nexport class BlobServiceClient extends StorageClient {\n  /**\n   * serviceContext provided by protocol layer.\n   */\n  private serviceContext: Service;\n\n  /**\n   *\n   * Creates an instance of BlobServiceClient from connection string.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  public static fromConnectionString(\n    connectionString: string,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  ): BlobServiceClient {\n    options = options || {};\n    const extractedCreds = extractConnectionStringParts(connectionString);\n    if (extractedCreds.kind === \"AccountConnString\") {\n      if (isNode) {\n        const sharedKeyCredential = new StorageSharedKeyCredential(\n          extractedCreds.accountName!,\n          extractedCreds.accountKey\n        );\n\n        if (!options.proxyOptions) {\n          options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n        }\n\n        const pipeline = newPipeline(sharedKeyCredential, options);\n        return new BlobServiceClient(extractedCreds.url, pipeline);\n      } else {\n        throw new Error(\"Account connection string is only supported in Node.js environment\");\n      }\n    } else if (extractedCreds.kind === \"SASConnString\") {\n      const pipeline = newPipeline(new AnonymousCredential(), options);\n      return new BlobServiceClient(extractedCreds.url + \"?\" + extractedCreds.accountSas, pipeline);\n    } else {\n      throw new Error(\n        \"Connection string must be either an Account connection string or a SAS connection string\"\n      );\n    }\n  }\n\n  /**\n   * Creates an instance of BlobServiceClient.\n   *\n   * @param url - A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param credential -  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the `@azure/identity` package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   *\n   * Example using DefaultAzureCredential from `@azure/identity`:\n   *\n   * ```js\n   * const account = \"<storage account name>\";\n   *\n   * const defaultAzureCredential = new DefaultAzureCredential();\n   *\n   * const blobServiceClient = new BlobServiceClient(\n   *   `https://${account}.blob.core.windows.net`,\n   *   defaultAzureCredential\n   * );\n   * ```\n   *\n   * Example using an account name/key:\n   *\n   * ```js\n   * const account = \"<storage account name>\"\n   * const sharedKeyCredential = new StorageSharedKeyCredential(account, \"<account key>\");\n   *\n   * const blobServiceClient = new BlobServiceClient(\n   *   `https://${account}.blob.core.windows.net`,\n   *   sharedKeyCredential\n   * );\n   * ```\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of BlobServiceClient.\n   *\n   * @param url - A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: PipelineLike);\n  constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | PipelineLike,\n    // Legacy, no fix for eslint error without breaking. Disable it for this interface.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options*/\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: PipelineLike;\n    if (isPipelineLike(credentialOrPipeline)) {\n      pipeline = credentialOrPipeline;\n    } else if (\n      (isNode && credentialOrPipeline instanceof StorageSharedKeyCredential) ||\n      credentialOrPipeline instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipeline)\n    ) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n    super(url, pipeline);\n    this.serviceContext = new Service(this.storageClientContext);\n  }\n\n  /**\n   * Creates a {@link ContainerClient} object\n   *\n   * @param containerName - A container name\n   * @returns A new ContainerClient object for the given container name.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const containerClient = blobServiceClient.getContainerClient(\"<container name>\");\n   * ```\n   */\n  public getContainerClient(containerName: string): ContainerClient {\n    return new ContainerClient(\n      appendToURLPath(this.url, encodeURIComponent(containerName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Create a Blob container.\n   *\n   * @param containerName - Name of the container to create.\n   * @param options - Options to configure Container Create operation.\n   * @returns Container creation response and the corresponding container client.\n   */\n  public async createContainer(\n    containerName: string,\n    options: ContainerCreateOptions = {}\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerCreateResponse: ContainerCreateResponse;\n  }> {\n    const { span, updatedOptions } = createSpan(\"BlobServiceClient-createContainer\", options);\n    try {\n      const containerClient = this.getContainerClient(containerName);\n      const containerCreateResponse = await containerClient.create(updatedOptions);\n      return {\n        containerClient,\n        containerCreateResponse,\n      };\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Deletes a Blob container.\n   *\n   * @param containerName - Name of the container to delete.\n   * @param options - Options to configure Container Delete operation.\n   * @returns Container deletion response.\n   */\n  public async deleteContainer(\n    containerName: string,\n    options: ContainerDeleteMethodOptions = {}\n  ): Promise<ContainerDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobServiceClient-deleteContainer\", options);\n    try {\n      const containerClient = this.getContainerClient(containerName);\n      return await containerClient.delete(updatedOptions);\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Restore a previously deleted Blob container.\n   * This API is only functional if Container Soft Delete is enabled for the storage account associated with the container.\n   *\n   * @param deletedContainerName - Name of the previously deleted container.\n   * @param deletedContainerVersion - Version of the previously deleted container, used to uniquely identify the deleted container.\n   * @param options - Options to configure Container Restore operation.\n   * @returns Container deletion response.\n   */\n  public async undeleteContainer(\n    deletedContainerName: string,\n    deletedContainerVersion: string,\n    options: ServiceUndeleteContainerOptions = {}\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerUndeleteResponse: ContainerUndeleteResponse;\n  }> {\n    const { span, updatedOptions } = createSpan(\"BlobServiceClient-undeleteContainer\", options);\n    try {\n      const containerClient = this.getContainerClient(\n        options.destinationContainerName || deletedContainerName\n      );\n      // Hack to access a protected member.\n      const containerContext = new Container(containerClient[\"storageClientContext\"]);\n      const containerUndeleteResponse = await containerContext.restore({\n        deletedContainerName,\n        deletedContainerVersion,\n        ...updatedOptions,\n      });\n      return { containerClient, containerUndeleteResponse };\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Rename an existing Blob Container.\n   *\n   * @param sourceContainerName - The name of the source container.\n   * @param destinationContainerName - The new name of the container.\n   * @param options - Options to configure Container Rename operation.\n   */\n  /* eslint-disable-next-line @typescript-eslint/ban-ts-comment */\n  // @ts-ignore Need to hide this interface for now. Make it public and turn on the live tests for it when the service is ready.\n  private async renameContainer(\n    sourceContainerName: string,\n    destinationContainerName: string,\n    options: ServiceRenameContainerOptions = {}\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerRenameResponse: ContainerRenameResponse;\n  }> {\n    const { span, updatedOptions } = createSpan(\"BlobServiceClient-renameContainer\", options);\n    try {\n      const containerClient = this.getContainerClient(destinationContainerName);\n      // Hack to access a protected member.\n      const containerContext = new Container(containerClient[\"storageClientContext\"]);\n      const containerRenameResponse = await containerContext.rename(sourceContainerName, {\n        ...updatedOptions,\n        sourceLeaseId: options.sourceCondition?.leaseId,\n      });\n      return { containerClient, containerRenameResponse };\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the properties of a storage account’s Blob service, including properties\n   * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties\n   *\n   * @param options - Options to the Service Get Properties operation.\n   * @returns Response data for the Service Get Properties operation.\n   */\n  public async getProperties(\n    options: ServiceGetPropertiesOptions = {}\n  ): Promise<ServiceGetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobServiceClient-getProperties\", options);\n    try {\n      return await this.serviceContext.getProperties({\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties for a storage account’s Blob service endpoint, including properties\n   * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties\n   *\n   * @param properties -\n   * @param options - Options to the Service Set Properties operation.\n   * @returns Response data for the Service Set Properties operation.\n   */\n  public async setProperties(\n    properties: BlobServiceProperties,\n    options: ServiceSetPropertiesOptions = {}\n  ): Promise<ServiceSetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobServiceClient-setProperties\", options);\n    try {\n      return await this.serviceContext.setProperties(properties, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only\n   * available on the secondary location endpoint when read-access geo-redundant\n   * replication is enabled for the storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats\n   *\n   * @param options - Options to the Service Get Statistics operation.\n   * @returns Response data for the Service Get Statistics operation.\n   */\n  public async getStatistics(\n    options: ServiceGetStatisticsOptions = {}\n  ): Promise<ServiceGetStatisticsResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobServiceClient-getStatistics\", options);\n    try {\n      return await this.serviceContext.getStatistics({\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param options - Options to the Service Get Account Info operation.\n   * @returns Response data for the Service Get Account Info operation.\n   */\n  public async getAccountInfo(\n    options: ServiceGetAccountInfoOptions = {}\n  ): Promise<ServiceGetAccountInfoResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobServiceClient-getAccountInfo\", options);\n    try {\n      return await this.serviceContext.getAccountInfo({\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns a list of the containers under the specified account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-containers2\n   *\n   * @param marker - A string value that identifies the portion of\n   *                        the list of containers to be returned with the next listing operation. The\n   *                        operation returns the continuationToken value within the response body if the\n   *                        listing operation did not return all containers remaining to be listed\n   *                        with the current page. The continuationToken value can be used as the value for\n   *                        the marker parameter in a subsequent call to request the next page of list\n   *                        items. The marker value is opaque to the client.\n   * @param options - Options to the Service List Container Segment operation.\n   * @returns Response data for the Service List Container Segment operation.\n   */\n  private async listContainersSegment(\n    marker?: string,\n    options: ServiceListContainersSegmentOptions = {}\n  ): Promise<ServiceListContainersSegmentResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobServiceClient-listContainersSegment\", options);\n\n    try {\n      return await this.serviceContext.listContainersSegment({\n        abortSignal: options.abortSignal,\n        marker,\n        ...options,\n        include: typeof options.include === \"string\" ? [options.include] : options.include,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The Filter Blobs operation enables callers to list blobs across all containers whose tags\n   * match a given search expression. Filter blobs searches across all containers within a\n   * storage account but can be scoped within the expression to a single container.\n   *\n   * @param tagFilterSqlExpression - The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                        The given expression must evaluate to true for a blob to be returned in the results.\n   *                                        The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                        however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async findBlobsByTagsSegment(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ServiceFindBlobsByTagsSegmentOptions = {}\n  ): Promise<ServiceFindBlobsByTagsSegmentResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"BlobServiceClient-findBlobsByTagsSegment\",\n      options\n    );\n\n    try {\n      const response = await this.serviceContext.filterBlobs({\n        abortSignal: options.abortSignal,\n        where: tagFilterSqlExpression,\n        marker,\n        maxPageSize: options.maxPageSize,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      const wrappedResponse: ServiceFindBlobsByTagsSegmentResponse = {\n        ...response,\n        _response: response._response, // _response is made non-enumerable\n        blobs: response.blobs.map((blob) => {\n          let tagValue = \"\";\n          if (blob.tags?.blobTagSet.length === 1) {\n            tagValue = blob.tags.blobTagSet[0].value;\n          }\n          return { ...blob, tags: toTags(blob.tags), tagValue };\n        }),\n      };\n      return wrappedResponse;\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ServiceFindBlobsByTagsSegmentResponse.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param marker - A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the continuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The continuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to find blobs by tags.\n   */\n  private async *findBlobsByTagsSegments(\n    tagFilterSqlExpression: string,\n    marker?: string,\n    options: ServiceFindBlobsByTagsSegmentOptions = {}\n  ): AsyncIterableIterator<ServiceFindBlobsByTagsSegmentResponse> {\n    let response;\n    if (!!marker || marker === undefined) {\n      do {\n        response = await this.findBlobsByTagsSegment(tagFilterSqlExpression, marker, options);\n        response.blobs = response.blobs || [];\n        marker = response.continuationToken;\n        yield response;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for blobs.\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to findBlobsByTagsItems.\n   */\n  private async *findBlobsByTagsItems(\n    tagFilterSqlExpression: string,\n    options: ServiceFindBlobsByTagsSegmentOptions = {}\n  ): AsyncIterableIterator<FilterBlobItem> {\n    let marker: string | undefined;\n    for await (const segment of this.findBlobsByTagsSegments(\n      tagFilterSqlExpression,\n      marker,\n      options\n    )) {\n      yield* segment.blobs;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to find all blobs with specified tag\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const blob of blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\")) {\n   *   console.log(`Blob ${i++}: ${container.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\");\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 20 })) {\n   *   if (response.blobs) {\n   *     for (const blob of response.blobs) {\n   *       console.log(`Blob ${i++}: ${blob.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = blobServiceClient.findBlobsByTags(\"tagkey='tagvalue'\").byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = blobServiceClient\n   *   .findBlobsByTags(\"tagkey='tagvalue'\")\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints blob names\n   * if (response.blobs) {\n   *   for (const blob of response.blobs) {\n   *      console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param tagFilterSqlExpression -  The where parameter enables the caller to query blobs whose tags match a given expression.\n   *                                         The given expression must evaluate to true for a blob to be returned in the results.\n   *                                         The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;\n   *                                         however, only a subset of the OData filter syntax is supported in the Blob service.\n   * @param options - Options to find blobs by tags.\n   */\n  public findBlobsByTags(\n    tagFilterSqlExpression: string,\n    options: ServiceFindBlobByTagsOptions = {}\n  ): PagedAsyncIterableIterator<FilterBlobItem, ServiceFindBlobsByTagsSegmentResponse> {\n    // AsyncIterableIterator to iterate over blobs\n    const listSegmentOptions: ServiceFindBlobsByTagsSegmentOptions = {\n      ...options,\n    };\n\n    const iter = this.findBlobsByTagsItems(tagFilterSqlExpression, listSegmentOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.findBlobsByTagsSegments(tagFilterSqlExpression, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ServiceListContainersSegmentResponses\n   *\n   * @param marker - A string value that identifies the portion of\n   *                        the list of containers to be returned with the next listing operation. The\n   *                        operation returns the continuationToken value within the response body if the\n   *                        listing operation did not return all containers remaining to be listed\n   *                        with the current page. The continuationToken value can be used as the value for\n   *                        the marker parameter in a subsequent call to request the next page of list\n   *                        items. The marker value is opaque to the client.\n   * @param options - Options to list containers operation.\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ServiceListContainersSegmentOptions = {}\n  ): AsyncIterableIterator<ServiceListContainersSegmentResponse> {\n    let listContainersSegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listContainersSegmentResponse = await this.listContainersSegment(marker, options);\n        listContainersSegmentResponse.containerItems =\n          listContainersSegmentResponse.containerItems || [];\n        marker = listContainersSegmentResponse.continuationToken;\n        yield await listContainersSegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for Container Items\n   *\n   * @param options - Options to list containers operation.\n   */\n  private async *listItems(\n    options: ServiceListContainersSegmentOptions = {}\n  ): AsyncIterableIterator<ContainerItem> {\n    let marker: string | undefined;\n    for await (const segment of this.listSegments(marker, options)) {\n      yield* segment.containerItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the containers\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the containers in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const container of blobServiceClient.listContainers()) {\n   *   console.log(`Container ${i++}: ${container.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = blobServiceClient.listContainers();\n   * let containerItem = await iter.next();\n   * while (!containerItem.done) {\n   *   console.log(`Container ${i++}: ${containerItem.value.name}`);\n   *   containerItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of blobServiceClient.listContainers().byPage({ maxPageSize: 20 })) {\n   *   if (response.containerItems) {\n   *     for (const container of response.containerItems) {\n   *       console.log(`Container ${i++}: ${container.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = blobServiceClient.listContainers().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 container names\n   * if (response.containerItems) {\n   *   for (const container of response.containerItems) {\n   *     console.log(`Container ${i++}: ${container.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = blobServiceClient\n   *   .listContainers()\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 container names\n   * if (response.containerItems) {\n   *   for (const container of response.containerItems) {\n   *      console.log(`Container ${i++}: ${container.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param options - Options to list containers.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listContainers(\n    options: ServiceListContainersOptions = {}\n  ): PagedAsyncIterableIterator<ContainerItem, ServiceListContainersSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const include: ListContainersIncludeType[] = [];\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSystem) {\n      include.push(\"system\");\n    }\n\n    // AsyncIterableIterator to iterate over containers\n    const listSegmentOptions: ServiceListContainersSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include } : {}),\n    };\n\n    const iter = this.listItems(listSegmentOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * ONLY AVAILABLE WHEN USING BEARER TOKEN AUTHENTICATION (TokenCredential).\n   *\n   * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n   * bearer token authentication.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-user-delegation-key\n   *\n   * @param startsOn -      The start time for the user delegation SAS. Must be within 7 days of the current time\n   * @param expiresOn -     The end time for the user delegation SAS. Must be within 7 days of the current time\n   */\n  public async getUserDelegationKey(\n    startsOn: Date,\n    expiresOn: Date,\n    options: ServiceGetUserDelegationKeyOptions = {}\n  ): Promise<ServiceGetUserDelegationKeyResponse> {\n    const { span, updatedOptions } = createSpan(\"BlobServiceClient-getUserDelegationKey\", options);\n    try {\n      const response = await this.serviceContext.getUserDelegationKey(\n        {\n          startsOn: truncatedISO8061Date(startsOn, false),\n          expiresOn: truncatedISO8061Date(expiresOn, false),\n        },\n        {\n          abortSignal: options.abortSignal,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        }\n      );\n\n      const userDelegationKey = {\n        signedObjectId: response.signedObjectId,\n        signedTenantId: response.signedTenantId,\n        signedStartsOn: new Date(response.signedStartsOn),\n        signedExpiresOn: new Date(response.signedExpiresOn),\n        signedService: response.signedService,\n        signedVersion: response.signedVersion,\n        value: response.value,\n      };\n\n      const res: ServiceGetUserDelegationKeyResponse = {\n        _response: response._response,\n        requestId: response.requestId,\n        clientRequestId: response.clientRequestId,\n        version: response.version,\n        date: response.date,\n        errorCode: response.errorCode,\n        ...userDelegationKey,\n      };\n\n      return res;\n    } catch (e: any) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a BlobBatchClient object to conduct batch operations.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @returns A new BlobBatchClient object for this service.\n   */\n  public getBlobBatchClient(): BlobBatchClient {\n    return new BlobBatchClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Only available for BlobServiceClient constructed with a shared key credential.\n   *\n   * Generates a Blob account Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas\n   *\n   * @param expiresOn - Optional. The time at which the shared access signature becomes invalid. Default to an hour later if not provided.\n   * @param permissions - Specifies the list of permissions to be associated with the SAS.\n   * @param resourceTypes - Specifies the resource types associated with the shared access signature.\n   * @param options - Optional parameters.\n   * @returns An account SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateAccountSasUrl(\n    expiresOn?: Date,\n    permissions: AccountSASPermissions = AccountSASPermissions.parse(\"r\"),\n    resourceTypes: string = \"sco\",\n    options: ServiceGenerateAccountSasUrlOptions = {}\n  ): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw RangeError(\n        \"Can only generate the account SAS when the client is initialized with a shared key credential\"\n      );\n    }\n\n    if (expiresOn === undefined) {\n      const now = new Date();\n      expiresOn = new Date(now.getTime() + 3600 * 1000);\n    }\n\n    const sas = generateAccountSASQueryParameters(\n      {\n        permissions,\n        expiresOn,\n        resourceTypes,\n        services: AccountSASServices.parse(\"b\").toString(),\n        ...options,\n      },\n      this.credential\n    ).toString();\n\n    return appendToURLQuery(this.url, sas);\n  }\n}\n","module.exports =\n{\n  parallel      : require('./parallel.js'),\n  serial        : require('./serial.js'),\n  serialOrdered : require('./serialOrdered.js')\n};\n","// API\nmodule.exports = abort;\n\n/**\n * Aborts leftover active jobs\n *\n * @param {object} state - current state object\n */\nfunction abort(state)\n{\n  Object.keys(state.jobs).forEach(clean.bind(state));\n\n  // reset leftover jobs\n  state.jobs = {};\n}\n\n/**\n * Cleans up leftover job by invoking abort function for the provided job id\n *\n * @this  state\n * @param {string|number} key - job id to abort\n */\nfunction clean(key)\n{\n  if (typeof this.jobs[key] == 'function')\n  {\n    this.jobs[key]();\n  }\n}\n","var defer = require('./defer.js');\n\n// API\nmodule.exports = async;\n\n/**\n * Runs provided callback asynchronously\n * even if callback itself is not\n *\n * @param   {function} callback - callback to invoke\n * @returns {function} - augmented callback\n */\nfunction async(callback)\n{\n  var isAsync = false;\n\n  // check if async happened\n  defer(function() { isAsync = true; });\n\n  return function async_callback(err, result)\n  {\n    if (isAsync)\n    {\n      callback(err, result);\n    }\n    else\n    {\n      defer(function nextTick_callback()\n      {\n        callback(err, result);\n      });\n    }\n  };\n}\n","module.exports = defer;\n\n/**\n * Runs provided function on next iteration of the event loop\n *\n * @param {function} fn - function to run\n */\nfunction defer(fn)\n{\n  var nextTick = typeof setImmediate == 'function'\n    ? setImmediate\n    : (\n      typeof process == 'object' && typeof process.nextTick == 'function'\n      ? process.nextTick\n      : null\n    );\n\n  if (nextTick)\n  {\n    nextTick(fn);\n  }\n  else\n  {\n    setTimeout(fn, 0);\n  }\n}\n","var async = require('./async.js')\n  , abort = require('./abort.js')\n  ;\n\n// API\nmodule.exports = iterate;\n\n/**\n * Iterates over each job object\n *\n * @param {array|object} list - array or object (named list) to iterate over\n * @param {function} iterator - iterator to run\n * @param {object} state - current job status\n * @param {function} callback - invoked when all elements processed\n */\nfunction iterate(list, iterator, state, callback)\n{\n  // store current index\n  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;\n\n  state.jobs[key] = runJob(iterator, key, list[key], function(error, output)\n  {\n    // don't repeat yourself\n    // skip secondary callbacks\n    if (!(key in state.jobs))\n    {\n      return;\n    }\n\n    // clean up jobs\n    delete state.jobs[key];\n\n    if (error)\n    {\n      // don't process rest of the results\n      // stop still active jobs\n      // and reset the list\n      abort(state);\n    }\n    else\n    {\n      state.results[key] = output;\n    }\n\n    // return salvaged results\n    callback(error, state.results);\n  });\n}\n\n/**\n * Runs iterator over provided job element\n *\n * @param   {function} iterator - iterator to invoke\n * @param   {string|number} key - key/index of the element in the list of jobs\n * @param   {mixed} item - job description\n * @param   {function} callback - invoked after iterator is done with the job\n * @returns {function|mixed} - job abort function or something else\n */\nfunction runJob(iterator, key, item, callback)\n{\n  var aborter;\n\n  // allow shortcut if iterator expects only two arguments\n  if (iterator.length == 2)\n  {\n    aborter = iterator(item, async(callback));\n  }\n  // otherwise go with full three arguments\n  else\n  {\n    aborter = iterator(item, key, async(callback));\n  }\n\n  return aborter;\n}\n","// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    , initState =\n    {\n      index    : 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs     : {},\n      results  : isNamedList ? {} : [],\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n    {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n\n  return initState;\n}\n","var abort = require('./abort.js')\n  , async = require('./async.js')\n  ;\n\n// API\nmodule.exports = terminator;\n\n/**\n * Terminates jobs in the attached state context\n *\n * @this  AsyncKitState#\n * @param {function} callback - final callback to invoke after termination\n */\nfunction terminator(callback)\n{\n  if (!Object.keys(this.jobs).length)\n  {\n    return;\n  }\n\n  // fast forward iteration index\n  this.index = this.size;\n\n  // abort jobs\n  abort(this);\n\n  // send back results we have so far\n  async(callback)(null, this.results);\n}\n","var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list, iterator, callback)\n{\n  var state = initState(list);\n\n  while (state.index < (state['keyedList'] || list).length)\n  {\n    iterate(list, iterator, state, function(error, result)\n    {\n      if (error)\n      {\n        callback(error, result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0)\n      {\n        callback(null, state.results);\n        return;\n      }\n    });\n\n    state.index++;\n  }\n\n  return terminator.bind(state, callback);\n}\n","var serialOrdered = require('./serialOrdered.js');\n\n// Public API\nmodule.exports = serial;\n\n/**\n * Runs iterator over provided array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serial(list, iterator, callback)\n{\n  return serialOrdered(list, iterator, null, callback);\n}\n","var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","var util = require('util');\nvar Stream = require('stream').Stream;\nvar DelayedStream = require('delayed-stream');\n\nmodule.exports = CombinedStream;\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n  this._insideLoop = false;\n  this._pendingNext = false;\n}\nutil.inherits(CombinedStream, Stream);\n\nCombinedStream.create = function(options) {\n  var combinedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function(stream) {\n  return (typeof stream !== 'function')\n    && (typeof stream !== 'string')\n    && (typeof stream !== 'boolean')\n    && (typeof stream !== 'number')\n    && (!Buffer.isBuffer(stream));\n};\n\nCombinedStream.prototype.append = function(stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream, {\n        maxDataSize: Infinity,\n        pauseStream: this.pauseStreams,\n      });\n      stream.on('data', this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n  return this;\n};\n\nCombinedStream.prototype.pipe = function(dest, options) {\n  Stream.prototype.pipe.call(this, dest, options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function() {\n  this._currentStream = null;\n\n  if (this._insideLoop) {\n    this._pendingNext = true;\n    return; // defer call\n  }\n\n  this._insideLoop = true;\n  try {\n    do {\n      this._pendingNext = false;\n      this._realGetNext();\n    } while (this._pendingNext);\n  } finally {\n    this._insideLoop = false;\n  }\n};\n\nCombinedStream.prototype._realGetNext = function() {\n  var stream = this._streams.shift();\n\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function(stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n    if (isStreamLike) {\n      stream.on('data', this._checkDataSize.bind(this));\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function(stream) {\n  this._currentStream = stream;\n\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n  if (isStreamLike) {\n    stream.on('end', this._getNext.bind(this));\n    stream.pipe(this, {end: false});\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function(stream) {\n  var self = this;\n  stream.on('error', function(err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function(data) {\n  this.emit('data', data);\n};\n\nCombinedStream.prototype.pause = function() {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function() {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n    this._getNext();\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function() {\n  this._reset();\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function() {\n  this._reset();\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function() {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function() {\n  this._updateDataSize();\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function() {\n  this.dataSize = 0;\n\n  var self = this;\n  this._streams.forEach(function(stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function(err) {\n  this._reset();\n  this.emit('error', err);\n};\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","var Stream = require('stream').Stream;\nvar util = require('util');\n\nmodule.exports = DelayedStream;\nfunction DelayedStream() {\n  this.source = null;\n  this.dataSize = 0;\n  this.maxDataSize = 1024 * 1024;\n  this.pauseStream = true;\n\n  this._maxDataSizeExceeded = false;\n  this._released = false;\n  this._bufferedEvents = [];\n}\nutil.inherits(DelayedStream, Stream);\n\nDelayedStream.create = function(source, options) {\n  var delayedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    delayedStream[option] = options[option];\n  }\n\n  delayedStream.source = source;\n\n  var realEmit = source.emit;\n  source.emit = function() {\n    delayedStream._handleEmit(arguments);\n    return realEmit.apply(source, arguments);\n  };\n\n  source.on('error', function() {});\n  if (delayedStream.pauseStream) {\n    source.pause();\n  }\n\n  return delayedStream;\n};\n\nObject.defineProperty(DelayedStream.prototype, 'readable', {\n  configurable: true,\n  enumerable: true,\n  get: function() {\n    return this.source.readable;\n  }\n});\n\nDelayedStream.prototype.setEncoding = function() {\n  return this.source.setEncoding.apply(this.source, arguments);\n};\n\nDelayedStream.prototype.resume = function() {\n  if (!this._released) {\n    this.release();\n  }\n\n  this.source.resume();\n};\n\nDelayedStream.prototype.pause = function() {\n  this.source.pause();\n};\n\nDelayedStream.prototype.release = function() {\n  this._released = true;\n\n  this._bufferedEvents.forEach(function(args) {\n    this.emit.apply(this, args);\n  }.bind(this));\n  this._bufferedEvents = [];\n};\n\nDelayedStream.prototype.pipe = function() {\n  var r = Stream.prototype.pipe.apply(this, arguments);\n  this.resume();\n  return r;\n};\n\nDelayedStream.prototype._handleEmit = function(args) {\n  if (this._released) {\n    this.emit.apply(this, args);\n    return;\n  }\n\n  if (args[0] === 'data') {\n    this.dataSize += args[1].length;\n    this._checkIfMaxDataSizeExceeded();\n  }\n\n  this._bufferedEvents.push(args);\n};\n\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\n  if (this._maxDataSizeExceeded) {\n    return;\n  }\n\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  this._maxDataSizeExceeded = true;\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'\n  this.emit('error', new Error(message));\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.of = exports.PropertiesFile = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\r\n * properties\r\n *\r\n * Copyright (c) 2013 Matt Steele\r\n * Licensed under the MIT license.\r\n */\n\n\nclass PropertiesFile {\n  constructor(...args) {\n    this.objs = {};\n\n    if (args.length) {\n      this.of.apply(this, args);\n    }\n  }\n\n  makeKeys(line) {\n    if (line && line.indexOf('#') !== 0) {\n      //let splitIndex = line.indexOf('=');\n      let separatorPositions = ['=', ':'].map(sep => {\n        return line.indexOf(sep);\n      }).filter(index => {\n        return index > -1;\n      });\n      let splitIndex = Math.min(...separatorPositions);\n      let key = line.substring(0, splitIndex).trim();\n      let value = line.substring(splitIndex + 1).trim(); // if keys already exists ...\n\n      if (this.objs.hasOwnProperty(key)) {\n        // if it is already an Array\n        if (Array.isArray(this.objs[key])) {\n          // just push the new value\n          this.objs[key].push(value);\n        } else {\n          // transform the value into Array\n          let oldValue = this.objs[key];\n          this.objs[key] = [oldValue, value];\n        }\n      } else {\n        // the key does not exists\n        const escapedValue = value.replace(/\"/g, '\\\\\"') // escape \"\n        .replace(/\\\\:/g, ':') // remove \\ before :\n        .replace(/\\\\=/g, '='); // remove \\ before =\n\n        this.objs[key] = unescape(JSON.parse('\"' + escapedValue + '\"'));\n      }\n    }\n  }\n\n  addFile(file) {\n    let data = _fs.default.readFileSync(file, 'utf-8');\n\n    let items = data.split(/\\r?\\n/);\n    let me = this;\n\n    for (let i = 0; i < items.length; i++) {\n      let line = items[i];\n\n      while (line.substring(line.length - 1) === '\\\\') {\n        line = line.slice(0, -1);\n        let nextLine = items[i + 1];\n        line = line + nextLine.trim();\n        i++;\n      }\n\n      me.makeKeys(line);\n    }\n  }\n\n  of(...args) {\n    for (let i = 0; i < args.length; i++) {\n      this.addFile(args[i]);\n    }\n  }\n\n  get(key, defaultValue) {\n    if (this.objs.hasOwnProperty(key)) {\n      if (Array.isArray(this.objs[key])) {\n        let ret = [];\n\n        for (let i = 0; i < this.objs[key].length; i++) {\n          ret[i] = this.interpolate(this.objs[key][i]);\n        }\n\n        return ret;\n      } else {\n        return typeof this.objs[key] === 'undefined' ? '' : this.interpolate(this.objs[key]);\n      }\n    }\n\n    return defaultValue;\n  }\n\n  getLast(key, defaultValue) {\n    if (this.objs.hasOwnProperty(key)) {\n      if (Array.isArray(this.objs[key])) {\n        var lg = this.objs[key].length;\n        return this.interpolate(this.objs[key][lg - 1]);\n      } else {\n        return typeof this.objs[key] === 'undefined' ? '' : this.interpolate(this.objs[key]);\n      }\n    }\n\n    return defaultValue;\n  }\n\n  getFirst(key, defaultValue) {\n    if (this.objs.hasOwnProperty(key)) {\n      if (Array.isArray(this.objs[key])) {\n        return this.interpolate(this.objs[key][0]);\n      } else {\n        return typeof this.objs[key] === 'undefined' ? '' : this.interpolate(this.objs[key]);\n      }\n    }\n\n    return defaultValue;\n  }\n\n  getInt(key, defaultIntValue) {\n    let val = this.getLast(key);\n\n    if (!val) {\n      return defaultIntValue;\n    } else {\n      return parseInt(val, 10);\n    }\n  }\n\n  getFloat(key, defaultFloatValue) {\n    let val = this.getLast(key);\n\n    if (!val) {\n      return defaultFloatValue;\n    } else {\n      return parseFloat(val);\n    }\n  }\n\n  getBoolean(key, defaultBooleanValue) {\n    function parseBool(b) {\n      return !/^(false|0)$/i.test(b) && !!b;\n    }\n\n    let val = this.getLast(key);\n\n    if (!val) {\n      return defaultBooleanValue || false;\n    } else {\n      return parseBool(val);\n    }\n  }\n\n  set(key, value) {\n    this.objs[key] = value;\n  }\n\n  interpolate(s) {\n    let me = this;\n    return s.replace(/\\\\\\\\/g, '\\\\').replace(/\\$\\{([A-Za-z0-9\\.\\-\\_]*)\\}/g, function (match) {\n      return me.getLast(match.substring(2, match.length - 1));\n    });\n  }\n\n  getKeys() {\n    let keys = [];\n\n    for (let key in this.objs) {\n      keys.push(key);\n    }\n\n    return keys;\n  }\n\n  getMatchingKeys(matchstr) {\n    let keys = [];\n\n    for (let key in this.objs) {\n      if (key.search(matchstr) !== -1) {\n        keys.push(key);\n      }\n    }\n\n    return keys;\n  }\n\n  reset() {\n    this.objs = {};\n  }\n\n} // Retain 'of' from v1 for backward compatibility\n\n\nexports.PropertiesFile = PropertiesFile;\n\nlet of = function of(...args) {\n  let globalFile = new PropertiesFile();\n  globalFile.of.apply(globalFile, args);\n  return globalFile;\n};\n\nexports.of = of;\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = (function () { try { return require('path') } catch (e) {}}()) || {\n  sep: '/'\n}\nminimatch.sep = path.sep\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  b = b || {}\n  var t = {}\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n  m.Minimatch.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options)).Minimatch\n  }\n\n  m.filter = function filter (pattern, options) {\n    return orig.filter(pattern, ext(def, options))\n  }\n\n  m.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options))\n  }\n\n  m.makeRe = function makeRe (pattern, options) {\n    return orig.makeRe(pattern, ext(def, options))\n  }\n\n  m.braceExpand = function braceExpand (pattern, options) {\n    return orig.braceExpand(pattern, ext(def, options))\n  }\n\n  m.match = function (list, pattern, options) {\n    return orig.match(list, pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (!options.allowWindowsEscape && path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n  this.partial = !!options.partial\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = function debug() { console.error.apply(console, arguments) }\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nvar MAX_PATTERN_LENGTH = 1024 * 64\nvar assertValidPattern = function (pattern) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  assertValidPattern(pattern)\n\n  var options = this.options\n\n  // shortcuts\n  if (pattern === '**') {\n    if (!options.noglobstar)\n      return GLOBSTAR\n    else\n      pattern = '*'\n  }\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      /* istanbul ignore next */\n      case '/': {\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n      }\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        // split where the last [ was, make sure we don't have\n        // an invalid re. if so, re-walk the contents of the\n        // would-be class to re-translate any characters that\n        // were passed through as-is\n        // TODO: It would probably be faster to determine this\n        // without a try/catch and a new RegExp, but it's tricky\n        // to do safely.  For now, this is safe and works.\n        var cs = pattern.substring(classStart + 1, i)\n        try {\n          RegExp('[' + cs + ']')\n        } catch (er) {\n          // not a valid class!\n          var sp = this.parse(cs, SUBPARSE)\n          re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n          hasMagic = hasMagic || sp[1]\n          inClass = false\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '[': case '.': case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) /* istanbul ignore next - should be impossible */ {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) /* istanbul ignore next - should be impossible */ {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = function match (f, partial) {\n  if (typeof partial === 'undefined') partial = this.partial\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    /* istanbul ignore if */\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      /* istanbul ignore if */\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      hit = f === p\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else /* istanbul ignore else */ if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    return (fi === fl - 1) && (file[fi] === '')\n  }\n\n  // should be unreachable.\n  /* istanbul ignore next */\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","/*eslint no-var:0, prefer-arrow-callback: 0, object-shorthand: 0 */\n'use strict';\n\n\nvar Punycode = require('punycode');\n\n\nvar internals = {};\n\n\n//\n// Read rules from file.\n//\ninternals.rules = require('./data/rules.json').map(function (rule) {\n\n  return {\n    rule: rule,\n    suffix: rule.replace(/^(\\*\\.|\\!)/, ''),\n    punySuffix: -1,\n    wildcard: rule.charAt(0) === '*',\n    exception: rule.charAt(0) === '!'\n  };\n});\n\n\n//\n// Check is given string ends with `suffix`.\n//\ninternals.endsWith = function (str, suffix) {\n\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n};\n\n\n//\n// Find rule for a given domain.\n//\ninternals.findRule = function (domain) {\n\n  var punyDomain = Punycode.toASCII(domain);\n  return internals.rules.reduce(function (memo, rule) {\n\n    if (rule.punySuffix === -1){\n      rule.punySuffix = Punycode.toASCII(rule.suffix);\n    }\n    if (!internals.endsWith(punyDomain, '.' + rule.punySuffix) && punyDomain !== rule.punySuffix) {\n      return memo;\n    }\n    // This has been commented out as it never seems to run. This is because\n    // sub tlds always appear after their parents and we never find a shorter\n    // match.\n    //if (memo) {\n    //  var memoSuffix = Punycode.toASCII(memo.suffix);\n    //  if (memoSuffix.length >= punySuffix.length) {\n    //    return memo;\n    //  }\n    //}\n    return rule;\n  }, null);\n};\n\n\n//\n// Error codes and messages.\n//\nexports.errorCodes = {\n  DOMAIN_TOO_SHORT: 'Domain name too short.',\n  DOMAIN_TOO_LONG: 'Domain name too long. It should be no more than 255 chars.',\n  LABEL_STARTS_WITH_DASH: 'Domain name label can not start with a dash.',\n  LABEL_ENDS_WITH_DASH: 'Domain name label can not end with a dash.',\n  LABEL_TOO_LONG: 'Domain name label should be at most 63 chars long.',\n  LABEL_TOO_SHORT: 'Domain name label should be at least 1 character long.',\n  LABEL_INVALID_CHARS: 'Domain name label can only contain alphanumeric characters or dashes.'\n};\n\n\n//\n// Validate domain name and throw if not valid.\n//\n// From wikipedia:\n//\n// Hostnames are composed of series of labels concatenated with dots, as are all\n// domain names. Each label must be between 1 and 63 characters long, and the\n// entire hostname (including the delimiting dots) has a maximum of 255 chars.\n//\n// Allowed chars:\n//\n// * `a-z`\n// * `0-9`\n// * `-` but not as a starting or ending character\n// * `.` as a separator for the textual portions of a domain name\n//\n// * http://en.wikipedia.org/wiki/Domain_name\n// * http://en.wikipedia.org/wiki/Hostname\n//\ninternals.validate = function (input) {\n\n  // Before we can validate we need to take care of IDNs with unicode chars.\n  var ascii = Punycode.toASCII(input);\n\n  if (ascii.length < 1) {\n    return 'DOMAIN_TOO_SHORT';\n  }\n  if (ascii.length > 255) {\n    return 'DOMAIN_TOO_LONG';\n  }\n\n  // Check each part's length and allowed chars.\n  var labels = ascii.split('.');\n  var label;\n\n  for (var i = 0; i < labels.length; ++i) {\n    label = labels[i];\n    if (!label.length) {\n      return 'LABEL_TOO_SHORT';\n    }\n    if (label.length > 63) {\n      return 'LABEL_TOO_LONG';\n    }\n    if (label.charAt(0) === '-') {\n      return 'LABEL_STARTS_WITH_DASH';\n    }\n    if (label.charAt(label.length - 1) === '-') {\n      return 'LABEL_ENDS_WITH_DASH';\n    }\n    if (!/^[a-z0-9\\-]+$/.test(label)) {\n      return 'LABEL_INVALID_CHARS';\n    }\n  }\n};\n\n\n//\n// Public API\n//\n\n\n//\n// Parse domain.\n//\nexports.parse = function (input) {\n\n  if (typeof input !== 'string') {\n    throw new TypeError('Domain name must be a string.');\n  }\n\n  // Force domain to lowercase.\n  var domain = input.slice(0).toLowerCase();\n\n  // Handle FQDN.\n  // TODO: Simply remove trailing dot?\n  if (domain.charAt(domain.length - 1) === '.') {\n    domain = domain.slice(0, domain.length - 1);\n  }\n\n  // Validate and sanitise input.\n  var error = internals.validate(domain);\n  if (error) {\n    return {\n      input: input,\n      error: {\n        message: exports.errorCodes[error],\n        code: error\n      }\n    };\n  }\n\n  var parsed = {\n    input: input,\n    tld: null,\n    sld: null,\n    domain: null,\n    subdomain: null,\n    listed: false\n  };\n\n  var domainParts = domain.split('.');\n\n  // Non-Internet TLD\n  if (domainParts[domainParts.length - 1] === 'local') {\n    return parsed;\n  }\n\n  var handlePunycode = function () {\n\n    if (!/xn--/.test(domain)) {\n      return parsed;\n    }\n    if (parsed.domain) {\n      parsed.domain = Punycode.toASCII(parsed.domain);\n    }\n    if (parsed.subdomain) {\n      parsed.subdomain = Punycode.toASCII(parsed.subdomain);\n    }\n    return parsed;\n  };\n\n  var rule = internals.findRule(domain);\n\n  // Unlisted tld.\n  if (!rule) {\n    if (domainParts.length < 2) {\n      return parsed;\n    }\n    parsed.tld = domainParts.pop();\n    parsed.sld = domainParts.pop();\n    parsed.domain = [parsed.sld, parsed.tld].join('.');\n    if (domainParts.length) {\n      parsed.subdomain = domainParts.pop();\n    }\n    return handlePunycode();\n  }\n\n  // At this point we know the public suffix is listed.\n  parsed.listed = true;\n\n  var tldParts = rule.suffix.split('.');\n  var privateParts = domainParts.slice(0, domainParts.length - tldParts.length);\n\n  if (rule.exception) {\n    privateParts.push(tldParts.shift());\n  }\n\n  parsed.tld = tldParts.join('.');\n\n  if (!privateParts.length) {\n    return handlePunycode();\n  }\n\n  if (rule.wildcard) {\n    tldParts.unshift(privateParts.pop());\n    parsed.tld = tldParts.join('.');\n  }\n\n  if (!privateParts.length) {\n    return handlePunycode();\n  }\n\n  parsed.sld = privateParts.pop();\n  parsed.domain = [parsed.sld,  parsed.tld].join('.');\n\n  if (privateParts.length) {\n    parsed.subdomain = privateParts.join('.');\n  }\n\n  return handlePunycode();\n};\n\n\n//\n// Get domain.\n//\nexports.get = function (domain) {\n\n  if (!domain) {\n    return null;\n  }\n  return exports.parse(domain).domain || null;\n};\n\n\n//\n// Check whether domain belongs to a known public suffix.\n//\nexports.isValid = function (domain) {\n\n  var parsed = exports.parse(domain);\n  return Boolean(parsed.domain && parsed.listed);\n};\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n","\"use strict\";\r\nexports.__esModule = true;\r\nfunction parseArgsStringToArgv(value, env, file) {\r\n    // ([^\\s'\"]([^\\s'\"]*(['\"])([^\\3]*?)\\3)+[^\\s'\"]*) Matches nested quotes until the first space outside of quotes\r\n    // [^\\s'\"]+ or Match if not a space ' or \"\r\n    // (['\"])([^\\5]*?)\\5 or Match \"quoted text\" without quotes\r\n    // `\\3` and `\\5` are a backreference to the quote style (' or \") captured\r\n    var myRegexp = /([^\\s'\"]([^\\s'\"]*(['\"])([^\\3]*?)\\3)+[^\\s'\"]*)|[^\\s'\"]+|(['\"])([^\\5]*?)\\5/gi;\r\n    var myString = value;\r\n    var myArray = [];\r\n    if (env) {\r\n        myArray.push(env);\r\n    }\r\n    if (file) {\r\n        myArray.push(file);\r\n    }\r\n    var match;\r\n    do {\r\n        // Each call to exec returns the next regex match as an array\r\n        match = myRegexp.exec(myString);\r\n        if (match !== null) {\r\n            // Index 1 in the array is the captured group if it exists\r\n            // Index 0 is the matched text, which we use if no captured group exists\r\n            myArray.push(firstString(match[1], match[6], match[0]));\r\n        }\r\n    } while (match !== null);\r\n    return myArray;\r\n}\r\nexports[\"default\"] = parseArgsStringToArgv;\r\nexports.parseArgsStringToArgv = parseArgsStringToArgv;\r\n// Accepts any number of arguments, and returns the first one that is a string\r\n// (even an empty string)\r\nfunction firstString() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < args.length; i++) {\r\n        var arg = args[i];\r\n        if (typeof arg === \"string\") {\r\n            return arg;\r\n        }\r\n    }\r\n}\r\n","\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","'use strict'\n\nexports.fromCallback = function (fn) {\n  return Object.defineProperty(function () {\n    if (typeof arguments[arguments.length - 1] === 'function') fn.apply(this, arguments)\n    else {\n      return new Promise((resolve, reject) => {\n        arguments[arguments.length] = (err, res) => {\n          if (err) return reject(err)\n          resolve(res)\n        }\n        arguments.length++\n        fn.apply(this, arguments)\n      })\n    }\n  }, 'name', { value: fn.name })\n}\n\nexports.fromPromise = function (fn) {\n  return Object.defineProperty(function () {\n    const cb = arguments[arguments.length - 1]\n    if (typeof cb !== 'function') return fn.apply(this, arguments)\n    else {\n      delete arguments[arguments.length - 1]\n      arguments.length--\n      fn.apply(this, arguments).then(r => cb(null, r), cb)\n    }\n  }, 'name', { value: fn.name })\n}\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , controlOrWhitespace = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/\n  , CRHTLF = /[\\n\\r\\t]/g\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , port = /:\\d+$/\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/;\n\n/**\n * Remove control characters and whitespace from the beginning of a string.\n *\n * @param {Object|String} str String to trim.\n * @returns {String} A new string representing `str` stripped of control\n *     characters and whitespace from its beginning.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(controlOrWhitespace, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d*)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      index = parse === '@'\n        ? address.lastIndexOf(parse)\n        : address.indexOf(parse);\n\n      if (~index) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n\n  if (url.auth) {\n    index = url.auth.indexOf(':');\n\n    if (~index) {\n      url.username = url.auth.slice(0, index);\n      url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n      url.password = url.auth.slice(index + 1);\n      url.password = encodeURIComponent(decodeURIComponent(url.password))\n    } else {\n      url.username = encodeURIComponent(decodeURIComponent(url.auth));\n    }\n\n    url.auth = url.password ? url.username +':'+ url.password : url.username;\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (port.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    case 'username':\n    case 'password':\n      url[part] = encodeURIComponent(value);\n      break;\n\n    case 'auth':\n      var index = value.indexOf(':');\n\n      if (~index) {\n        url.username = value.slice(0, index);\n        url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n        url.password = value.slice(index + 1);\n        url.password = encodeURIComponent(decodeURIComponent(url.password));\n      } else {\n        url.username = encodeURIComponent(decodeURIComponent(value));\n      }\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.auth = url.password ? url.username +':'+ url.password : url.username;\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , host = url.host\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result =\n    protocol +\n    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  } else if (url.password) {\n    result += ':'+ url.password;\n    result += '@';\n  } else if (\n    url.protocol !== 'file:' &&\n    isSpecial(url.protocol) &&\n    !host &&\n    url.pathname !== '/'\n  ) {\n    //\n    // Add back the empty userinfo, otherwise the original invalid URL\n    // might be transformed into a valid one with `url.pathname` as host.\n    //\n    result += '@';\n  }\n\n  //\n  // Trailing colon is removed from `url.host` when it is parsed. If it still\n  // ends with a colon, then add back the trailing colon that was removed. This\n  // prevents an invalid URL from being transformed into a valid one.\n  //\n  if (host[host.length - 1] === ':' || (port.test(url.hostname) && !url.port)) {\n    host += ':';\n  }\n\n  result += host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import crypto from 'crypto';\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('md5').update(bytes).digest();\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","import crypto from 'crypto';\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('sha1').update(bytes).digest();\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n","\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n","\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseStringPromise = bind(this.parseStringPromise, this);\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    Parser.prototype.parseStringPromise = function(str) {\n      return new Promise((function(_this) {\n        return function(resolve, reject) {\n          return _this.parseString(str, function(err, value) {\n            if (err) {\n              return reject(err);\n            } else {\n              return resolve(value);\n            }\n          });\n        };\n      })(this));\n    };\n\n    return Parser;\n\n  })(events);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n  exports.parseStringPromise = function(str, a) {\n    var options, parser;\n    if (typeof a === 'object') {\n      options = a;\n    }\n    parser = new exports.Parser(options);\n    return parser.parseStringPromise(str);\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n  exports.parseStringPromise = parser.parseStringPromise;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Disconnected: 1,\n    Preceding: 2,\n    Following: 4,\n    Contains: 8,\n    ContainedBy: 16,\n    ImplementationSpecific: 32\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Element: 1,\n    Attribute: 2,\n    Text: 3,\n    CData: 4,\n    EntityReference: 5,\n    EntityDeclaration: 6,\n    ProcessingInstruction: 7,\n    Comment: 8,\n    Document: 9,\n    DocType: 10,\n    DocumentFragment: 11,\n    NotationDeclaration: 12,\n    Declaration: 201,\n    Raw: 202,\n    AttributeDeclaration: 203,\n    ElementDeclaration: 204,\n    Dummy: 205\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  getValue = function(obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n  module.exports.getValue = getValue;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    None: 0,\n    OpenTag: 1,\n    InsideTag: 2,\n    CloseTag: 3\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLNode;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.value = this.stringify.attValue(value);\n      this.type = NodeType.Attribute;\n      this.isId = false;\n      this.schemaTypeInfo = null;\n    }\n\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\n      get: function() {\n        return true;\n      }\n    });\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLAttribute.prototype.debugInfo = function(name) {\n      name = name || this.name;\n      if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else {\n        return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLAttribute.prototype.isEqualNode = function(node) {\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.value !== this.value) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCData, XMLCharacterData,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLCData;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCharacterData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCharacterData = (function(superClass) {\n    extend(XMLCharacterData, superClass);\n\n    function XMLCharacterData(parent) {\n      XMLCharacterData.__super__.constructor.call(this, parent);\n      this.value = '';\n    }\n\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\n      get: function() {\n        return this.value.length;\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    XMLCharacterData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCharacterData.prototype.substringData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.appendData = function(arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.insertData = function(offset, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.deleteData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.replaceData = function(offset, count, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.isEqualNode = function(node) {\n      if (!XMLCharacterData.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.data !== this.data) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLCharacterData;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLComment,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\n      }\n      this.name = \"#comment\";\n      this.type = NodeType.Comment;\n      this.value = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.comment(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLComment;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n\n  XMLDOMStringList = require('./XMLDOMStringList');\n\n  module.exports = XMLDOMConfiguration = (function() {\n    function XMLDOMConfiguration() {\n      var clonedSelf;\n      this.defaultParams = {\n        \"canonical-form\": false,\n        \"cdata-sections\": false,\n        \"comments\": false,\n        \"datatype-normalization\": false,\n        \"element-content-whitespace\": true,\n        \"entities\": true,\n        \"error-handler\": new XMLDOMErrorHandler(),\n        \"infoset\": true,\n        \"validate-if-schema\": false,\n        \"namespaces\": true,\n        \"namespace-declarations\": true,\n        \"normalize-characters\": false,\n        \"schema-location\": '',\n        \"schema-type\": '',\n        \"split-cdata-sections\": true,\n        \"validate\": false,\n        \"well-formed\": true\n      };\n      this.params = clonedSelf = Object.create(this.defaultParams);\n    }\n\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function() {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n\n    XMLDOMConfiguration.prototype.getParameter = function(name) {\n      if (this.params.hasOwnProperty(name)) {\n        return this.params[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLDOMConfiguration.prototype.canSetParameter = function(name, value) {\n      return true;\n    };\n\n    XMLDOMConfiguration.prototype.setParameter = function(name, value) {\n      if (value != null) {\n        return this.params[name] = value;\n      } else {\n        return delete this.params[name];\n      }\n    };\n\n    return XMLDOMConfiguration;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMErrorHandler;\n\n  module.exports = XMLDOMErrorHandler = (function() {\n    function XMLDOMErrorHandler() {}\n\n    XMLDOMErrorHandler.prototype.handleError = function(error) {\n      throw new Error(error);\n    };\n\n    return XMLDOMErrorHandler;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMImplementation;\n\n  module.exports = XMLDOMImplementation = (function() {\n    function XMLDOMImplementation() {}\n\n    XMLDOMImplementation.prototype.hasFeature = function(feature, version) {\n      return true;\n    };\n\n    XMLDOMImplementation.prototype.createDocumentType = function(qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createDocument = function(namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createHTMLDocument = function(title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLDOMImplementation;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMStringList;\n\n  module.exports = XMLDOMStringList = (function() {\n    function XMLDOMStringList(arr) {\n      this.arr = arr || [];\n    }\n\n    Object.defineProperty(XMLDOMStringList.prototype, 'length', {\n      get: function() {\n        return this.arr.length;\n      }\n    });\n\n    XMLDOMStringList.prototype.item = function(index) {\n      return this.arr[index] || null;\n    };\n\n    XMLDOMStringList.prototype.contains = function(str) {\n      return this.arr.indexOf(str) !== -1;\n    };\n\n    return XMLDOMStringList;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      this.elementName = this.stringify.name(elementName);\n      this.type = NodeType.AttributeDeclaration;\n      this.attributeName = this.stringify.name(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      if (defaultValue) {\n        this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      }\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.ElementDeclaration;\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n      }\n      if (value == null) {\n        throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.name(name);\n      this.type = NodeType.EntityDeclaration;\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n        this.internal = true;\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n        }\n        this.internal = false;\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n        }\n      }\n    }\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function() {\n        return this.nData || null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.NotationDeclaration;\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.type = NodeType.Declaration;\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNamedNodeMap, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var child, i, len, ref, ref1, ref2;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.type = NodeType.DocType;\n      if (parent.children) {\n        ref = parent.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.Element) {\n            this.name = child.name;\n            break;\n          }\n        }\n      }\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref1 = pubID, pubID = ref1.pubID, sysID = ref1.sysID;\n      }\n      if (sysID == null) {\n        ref2 = [pubID, sysID], sysID = ref2[0], pubID = ref2[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if ((child.type === NodeType.EntityDeclaration) && !child.pe) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.NotationDeclaration) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.docType(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    XMLDocType.prototype.isEqualNode = function(node) {\n      if (!XMLDocType.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.name !== this.name) {\n        return false;\n      }\n      if (node.publicId !== this.publicId) {\n        return false;\n      }\n      if (node.systemId !== this.systemId) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDOMConfiguration, XMLDOMImplementation, XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDOMConfiguration = require('./XMLDOMConfiguration');\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      this.name = \"#document\";\n      this.type = NodeType.Document;\n      this.documentURI = null;\n      this.domConfig = new XMLDOMConfiguration();\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n    }\n\n    Object.defineProperty(XMLDocument.prototype, 'implementation', {\n      value: new XMLDOMImplementation()\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'doctype', {\n      get: function() {\n        var child, i, len, ref;\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.DocType) {\n            return child;\n          }\n        }\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'documentElement', {\n      get: function() {\n        return this.rootObject || null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'strictErrorChecking', {\n      get: function() {\n        return false;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlEncoding', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].encoding;\n        } else {\n          return null;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlStandalone', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].standalone === 'yes';\n        } else {\n          return false;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlVersion', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].version;\n        } else {\n          return \"1.0\";\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'URL', {\n      get: function() {\n        return this.documentURI;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'origin', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'compatMode', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'characterSet', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'contentType', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      writerOptions = {};\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer;\n      }\n      return writer.document(this, writer.filterOptions(writerOptions));\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.document(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocument.prototype.createElement = function(tagName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createDocumentFragment = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTextNode = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createComment = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createCDATASection = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createProcessingInstruction = function(target, data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttribute = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEntityReference = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.importNode = function(importedNode, deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createElementNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttributeNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementById = function(elementId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.adoptNode = function(source) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.normalizeDocument = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.renameNode = function(node, namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEvent = function(eventInterface) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createRange = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createNodeIterator = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTreeWalker = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\n\n  NodeType = require('./NodeType');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      this.name = \"?xml\";\n      this.type = NodeType.Document;\n      options || (options = {});\n      writerOptions = {};\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.writerOptions = this.writer.filterOptions(writerOptions);\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.createChildNode = function(node) {\n      var att, attName, attributes, child, i, len, ref1, ref2;\n      switch (node.type) {\n        case NodeType.CData:\n          this.cdata(node.value);\n          break;\n        case NodeType.Comment:\n          this.comment(node.value);\n          break;\n        case NodeType.Element:\n          attributes = {};\n          ref1 = node.attribs;\n          for (attName in ref1) {\n            if (!hasProp.call(ref1, attName)) continue;\n            att = ref1[attName];\n            attributes[attName] = att.value;\n          }\n          this.node(node.name, attributes);\n          break;\n        case NodeType.Dummy:\n          this.dummy();\n          break;\n        case NodeType.Raw:\n          this.raw(node.value);\n          break;\n        case NodeType.Text:\n          this.text(node.value);\n          break;\n        case NodeType.ProcessingInstruction:\n          this.instruction(node.target, node.value);\n          break;\n        default:\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\n      }\n      ref2 = node.children;\n      for (i = 0, len = ref2.length; i < len; i++) {\n        child = ref2[i];\n        this.createChildNode(child);\n        if (child.type === NodeType.Element) {\n          this.up();\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dummy = function() {\n      return this;\n    };\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name.\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n      }\n      this.openCurrent();\n      name = getValue(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      var child, i, len, oldValidationFlag, ref1, root;\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        this.dtdElement.apply(this, arguments);\n      } else {\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\n          oldValidationFlag = this.options.noValidation;\n          this.options.noValidation = true;\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\n          root.element(name);\n          this.options.noValidation = oldValidationFlag;\n          ref1 = root.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            this.createChildNode(child);\n            if (child.type === NodeType.Element) {\n              this.up();\n            }\n          }\n        } else {\n          this.node(name, attributes, text);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node.\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name.\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node.\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent.\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      var att, chunk, name, ref1;\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\n          this.root = node;\n        }\n        chunk = '';\n        if (node.type === NodeType.Element) {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\n          ref1 = node.attribs;\n          for (name in ref1) {\n            if (!hasProp.call(ref1, name)) continue;\n            att = ref1[name];\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\n          }\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\n          this.writerOptions.state = WriterState.InsideTag;\n        } else {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\n          if (node.pubID && node.sysID) {\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n          } else if (node.sysID) {\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\n          }\n          if (node.children) {\n            chunk += ' [';\n            this.writerOptions.state = WriterState.InsideTag;\n          } else {\n            this.writerOptions.state = WriterState.CloseTag;\n            chunk += '>';\n          }\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.onData(chunk, this.currentLevel);\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      var chunk;\n      if (!node.isClosed) {\n        chunk = '';\n        this.writerOptions.state = WriterState.CloseTag;\n        if (node.type === NodeType.Element) {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        } else {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.writerOptions.state = WriterState.None;\n        this.onData(chunk, this.currentLevel);\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk, level) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk, level + 1);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.debugInfo = function(name) {\n      if (name == null) {\n        return \"\";\n      } else {\n        return \"node: <\" + name + \">\";\n      }\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDummy, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDummy = (function(superClass) {\n    extend(XMLDummy, superClass);\n\n    function XMLDummy(parent) {\n      XMLDummy.__super__.constructor.call(this, parent);\n      this.type = NodeType.Dummy;\n    }\n\n    XMLDummy.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLDummy.prototype.toString = function(options) {\n      return '';\n    };\n\n    return XMLDummy;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLElement, XMLNamedNodeMap, XMLNode, getValue, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      var child, j, len, ref1;\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name. \" + this.debugInfo());\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.Element;\n      this.attribs = {};\n      this.schemaTypeInfo = null;\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.type === NodeType.Document) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n        if (parent.children) {\n          ref1 = parent.children;\n          for (j = 0, len = ref1.length; j < len; j++) {\n            child = ref1[j];\n            if (child.type === NodeType.DocType) {\n              child.name = this.name;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    Object.defineProperty(XMLElement.prototype, 'tagName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'id', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'className', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'classList', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'attributes', {\n      get: function() {\n        if (!this.attributeMap || !this.attributeMap.nodes) {\n          this.attributeMap = new XMLNamedNodeMap(this.attribs);\n        }\n        return this.attributeMap;\n      }\n    });\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attribs = {};\n      ref1 = this.attribs;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attribs[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, j, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo());\n      }\n      name = getValue(name);\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          attName = name[j];\n          delete this.attribs[attName];\n        }\n      } else {\n        delete this.attribs[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.element(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.getAttribute = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].value;\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttribute = function(name, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNode = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttributeNode = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNode = function(oldAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNS = function(namespaceURI, qualifiedName, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNodeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNodeNS = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.hasAttribute = function(name) {\n      return this.attribs.hasOwnProperty(name);\n    };\n\n    XMLElement.prototype.hasAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttribute = function(name, isId) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].isId;\n      } else {\n        return isId;\n      }\n    };\n\n    XMLElement.prototype.setIdAttributeNS = function(namespaceURI, localName, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttributeNode = function(idAttr, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.isEqualNode = function(node) {\n      var i, j, ref1;\n      if (!XMLElement.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.attribs.length !== this.attribs.length) {\n        return false;\n      }\n      for (i = j = 0, ref1 = this.attribs.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n        if (!this.attribs[i].isEqualNode(node.attribs[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNamedNodeMap;\n\n  module.exports = XMLNamedNodeMap = (function() {\n    function XMLNamedNodeMap(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {\n      get: function() {\n        return Object.keys(this.nodes).length || 0;\n      }\n    });\n\n    XMLNamedNodeMap.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItem = function(name) {\n      return this.nodes[name];\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItem = function(node) {\n      var oldNode;\n      oldNode = this.nodes[node.nodeName];\n      this.nodes[node.nodeName] = node;\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItem = function(name) {\n      var oldNode;\n      oldNode = this.nodes[name];\n      delete this.nodes[name];\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.item = function(index) {\n      return this.nodes[Object.keys(this.nodes)[index]] || null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItemNS = function(node) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLNamedNodeMap;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNamedNodeMap, XMLNode, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject, ref1,\n    hasProp = {}.hasOwnProperty;\n\n  ref1 = require('./Utility'), isObject = ref1.isObject, isFunction = ref1.isFunction, isEmpty = ref1.isEmpty, getValue = ref1.getValue;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  XMLDummy = null;\n\n  NodeType = null;\n\n  XMLNodeList = null;\n\n  XMLNamedNodeMap = null;\n\n  DocumentPosition = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent1) {\n      this.parent = parent1;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.value = null;\n      this.children = [];\n      this.baseURI = null;\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n        XMLDummy = require('./XMLDummy');\n        NodeType = require('./NodeType');\n        XMLNodeList = require('./XMLNodeList');\n        XMLNamedNodeMap = require('./XMLNamedNodeMap');\n        DocumentPosition = require('./DocumentPosition');\n      }\n    }\n\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\n      get: function() {\n        return this.value;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\n      get: function() {\n        if (!this.childNodeList || !this.childNodeList.nodes) {\n          this.childNodeList = new XMLNodeList(this.children);\n        }\n        return this.childNodeList;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\n      get: function() {\n        return this.children[0] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\n      get: function() {\n        return this.children[this.children.length - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i + 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\n      get: function() {\n        return this.document() || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\n      get: function() {\n        var child, j, len, ref2, str;\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\n          str = '';\n          ref2 = this.children;\n          for (j = 0, len = ref2.length; j < len; j++) {\n            child = ref2[j];\n            if (child.textContent) {\n              str += child.textContent;\n            }\n          }\n          return str;\n        } else {\n          return null;\n        }\n      },\n      set: function(value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLNode.prototype.setParent = function(parent) {\n      var child, j, len, ref2, results;\n      this.parent = parent;\n      if (parent) {\n        this.options = parent.options;\n        this.stringify = parent.stringify;\n      }\n      ref2 = this.children;\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        results.push(child.setParent(this));\n      }\n      return results;\n    };\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref2, ref3, val;\n      lastChild = null;\n      if (attributes === null && (text == null)) {\n        ref2 = [{}, null], attributes = ref2[0], text = ref2[1];\n      }\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref3 = [attributes, text], text = ref3[0], attributes = ref3[1];\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\n            lastChild = this.dummy();\n          } else if (isObject(val) && isEmpty(val)) {\n            lastChild = this.element(key);\n          } else if (!this.options.keepNullNodes && (val == null)) {\n            lastChild = this.dummy();\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\n              lastChild = this.element(val);\n            } else {\n              lastChild = this.element(key);\n              lastChild.element(val);\n            }\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else if (!this.options.keepNullNodes && text === null) {\n        lastChild = this.dummy();\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, newChild, refChild, removed;\n      if (name != null ? name.type : void 0) {\n        newChild = name;\n        refChild = attributes;\n        newChild.setParent(this);\n        if (refChild) {\n          i = children.indexOf(refChild);\n          removed = children.splice(i);\n          children.push(newChild);\n          Array.prototype.push.apply(children, removed);\n        } else {\n          children.push(newChild);\n        }\n        return newChild;\n      } else {\n        if (this.isRoot) {\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n        }\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        child = this.parent.element(name, attributes, text);\n        Array.prototype.push.apply(this.parent.children, removed);\n        return child;\n      }\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref2;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref2 = [])), ref2;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref2;\n      if (name != null) {\n        name = getValue(name);\n      }\n      attributes || (attributes = {});\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref2 = [attributes, text], text = ref2[0], attributes = ref2[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      if (isObject(value)) {\n        this.element(value);\n      }\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.dummy = function() {\n      var child;\n      child = new XMLDummy(this);\n      return child;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children.length === 0) {\n        doc.children.unshift(xmldec);\n      } else if (doc.children[0].type === NodeType.Declaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref2, ref3;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref2 = doc.children;\n      for (i = j = 0, len = ref2.length; j < len; i = ++j) {\n        child = ref2[i];\n        if (child.type === NodeType.DocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref3 = doc.children;\n      for (i = k = 0, len1 = ref3.length; k < len1; i = ++k) {\n        child = ref3[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node. \" + this.debugInfo());\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node. \" + this.debugInfo());\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.debugInfo = function(name) {\n      var ref2, ref3;\n      name = name || this.name;\n      if ((name == null) && !((ref2 = this.parent) != null ? ref2.name : void 0)) {\n        return \"\";\n      } else if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else if (!((ref3 = this.parent) != null ? ref3.name : void 0)) {\n        return \"node: <\" + name + \">\";\n      } else {\n        return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    XMLNode.prototype.replaceChild = function(newChild, oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.removeChild = function(oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.appendChild = function(newChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.hasChildNodes = function() {\n      return this.children.length !== 0;\n    };\n\n    XMLNode.prototype.cloneNode = function(deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.normalize = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isSupported = function(feature, version) {\n      return true;\n    };\n\n    XMLNode.prototype.hasAttributes = function() {\n      return this.attribs.length !== 0;\n    };\n\n    XMLNode.prototype.compareDocumentPosition = function(other) {\n      var ref, res;\n      ref = this;\n      if (ref === other) {\n        return 0;\n      } else if (this.document() !== other.document()) {\n        res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\n        if (Math.random() < 0.5) {\n          res |= DocumentPosition.Preceding;\n        } else {\n          res |= DocumentPosition.Following;\n        }\n        return res;\n      } else if (ref.isAncestor(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Preceding;\n      } else if (ref.isDescendant(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Following;\n      } else if (ref.isPreceding(other)) {\n        return DocumentPosition.Preceding;\n      } else {\n        return DocumentPosition.Following;\n      }\n    };\n\n    XMLNode.prototype.isSameNode = function(other) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupPrefix = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isDefaultNamespace = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupNamespaceURI = function(prefix) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isEqualNode = function(node) {\n      var i, j, ref2;\n      if (node.nodeType !== this.nodeType) {\n        return false;\n      }\n      if (node.children.length !== this.children.length) {\n        return false;\n      }\n      for (i = j = 0, ref2 = this.children.length - 1; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j) {\n        if (!this.children[i].isEqualNode(node.children[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    XMLNode.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.setUserData = function(key, data, handler) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.getUserData = function(key) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.contains = function(other) {\n      if (!other) {\n        return false;\n      }\n      return other === this || this.isDescendant(other);\n    };\n\n    XMLNode.prototype.isDescendant = function(node) {\n      var child, isDescendantChild, j, len, ref2;\n      ref2 = this.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (node === child) {\n          return true;\n        }\n        isDescendantChild = child.isDescendant(node);\n        if (isDescendantChild) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    XMLNode.prototype.isAncestor = function(node) {\n      return node.isDescendant(this);\n    };\n\n    XMLNode.prototype.isPreceding = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos < thisPos;\n      }\n    };\n\n    XMLNode.prototype.isFollowing = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos > thisPos;\n      }\n    };\n\n    XMLNode.prototype.treePosition = function(node) {\n      var found, pos;\n      pos = 0;\n      found = false;\n      this.foreachTreeNode(this.document(), function(childNode) {\n        pos++;\n        if (!found && childNode === node) {\n          return found = true;\n        }\n      });\n      if (found) {\n        return pos;\n      } else {\n        return -1;\n      }\n    };\n\n    XMLNode.prototype.foreachTreeNode = function(node, func) {\n      var child, j, len, ref2, res;\n      node || (node = this.document());\n      ref2 = node.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (res = func(child)) {\n          return res;\n        } else {\n          res = this.foreachTreeNode(child, func);\n          if (res) {\n            return res;\n          }\n        }\n      }\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNodeList;\n\n  module.exports = XMLNodeList = (function() {\n    function XMLNodeList(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNodeList.prototype, 'length', {\n      get: function() {\n        return this.nodes.length || 0;\n      }\n    });\n\n    XMLNodeList.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNodeList.prototype.item = function(index) {\n      return this.nodes[index] || null;\n    };\n\n    return XMLNodeList;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\n      }\n      this.type = NodeType.ProcessingInstruction;\n      this.target = this.stringify.insTarget(target);\n      this.name = this.target;\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLProcessingInstruction.prototype.isEqualNode = function(node) {\n      if (!XMLProcessingInstruction.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.target !== this.target) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text. \" + this.debugInfo());\n      }\n      this.type = NodeType.Raw;\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.raw(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLStreamWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      this.stream = stream;\n      XMLStreamWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStreamWriter.prototype.endline = function(node, options, level) {\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\n        return '';\n      } else {\n        return XMLStreamWriter.__super__.endline.call(this, node, options, level);\n      }\n    };\n\n    XMLStreamWriter.prototype.document = function(doc, options) {\n      var child, i, j, k, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        child = ref[i];\n        child.isLastRootNode = i === doc.children.length - 1;\n      }\n      options = this.filterOptions(options);\n      ref1 = doc.children;\n      results = [];\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\n        child = ref1[k];\n        results.push(this.writeChildNode(child, options, 0));\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.attribute.call(this, att, options, level));\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.cdata.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.comment.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.declaration.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, options, level) {\n      var child, j, len, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (j = 0, len = ref.length; j < len; j++) {\n          child = ref[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(']');\n      }\n      options.state = WriterState.CloseTag;\n      this.stream.write(options.spaceBeforeSlash + '>');\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, j, len, name, prettySuppressed, ref, ref1;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level) + '<' + node.name);\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          this.stream.write('>');\n          options.state = WriterState.CloseTag;\n          this.stream.write('</' + node.name + '>');\n        } else {\n          options.state = WriterState.CloseTag;\n          this.stream.write(options.spaceBeforeSlash + '/>');\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        this.stream.write('>');\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref1 = node.children;\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\n      }\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.processingInstruction.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.raw.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.text.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdAttList.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdElement.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdEntity.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdNotation.call(this, node, options, level));\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc, options) {\n      var child, i, len, r, ref;\n      options = this.filterOptions(options);\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += this.writeChildNode(child, options, 0);\n      }\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\n        r = r.slice(0, -options.newline.length);\n      }\n      return r;\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalName = bind(this.assertLegalName, this);\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      if (!this.options.version) {\n        this.options.version = '1.0';\n      }\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.name = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalName('' + val || '');\n    };\n\n    XMLStringifier.prototype.text = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.textEscape('' + val || ''));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.attEscape(val = '' + val || ''));\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var regex, res;\n      if (this.options.noValidation) {\n        return str;\n      }\n      regex = '';\n      if (this.options.version === '1.0') {\n        regex = /[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      } else if (this.options.version === '1.1') {\n        regex = /[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.assertLegalName = function(str) {\n      var regex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      this.assertLegalChar(str);\n      regex = /^([:A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])([\\x2D\\.0-:A-Z_a-z\\xB7\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])*$/;\n      if (!str.match(regex)) {\n        throw new Error(\"Invalid character in name\");\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.textEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text. \" + this.debugInfo());\n      }\n      this.name = \"#text\";\n      this.type = NodeType.Text;\n      this.value = this.stringify.text(text);\n    }\n\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\n      get: function() {\n        var next, prev, str;\n        str = '';\n        prev = this.previousSibling;\n        while (prev) {\n          str = prev.data + str;\n          prev = prev.previousSibling;\n        }\n        str += this.data;\n        next = this.nextSibling;\n        while (next) {\n          str = str + next.data;\n          next = next.nextSibling;\n        }\n        return str;\n      }\n    });\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.text(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLText.prototype.splitText = function(offset) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLText.prototype.replaceWholeText = function(content) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLText;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, assign,\n    hasProp = {}.hasOwnProperty;\n\n  assign = require('./Utility').assign;\n\n  NodeType = require('./NodeType');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDummy = require('./XMLDummy');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[\"_\" + key] = this[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.filterOptions = function(options) {\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n      options || (options = {});\n      options = assign({}, this.options, options);\n      filteredOptions = {\n        writer: this\n      };\n      filteredOptions.pretty = options.pretty || false;\n      filteredOptions.allowEmpty = options.allowEmpty || false;\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\n      filteredOptions.dontPrettyTextNodes = (ref3 = (ref4 = options.dontPrettyTextNodes) != null ? ref4 : options.dontprettytextnodes) != null ? ref3 : 0;\n      filteredOptions.spaceBeforeSlash = (ref5 = (ref6 = options.spaceBeforeSlash) != null ? ref6 : options.spacebeforeslash) != null ? ref5 : '';\n      if (filteredOptions.spaceBeforeSlash === true) {\n        filteredOptions.spaceBeforeSlash = ' ';\n      }\n      filteredOptions.suppressPrettyCount = 0;\n      filteredOptions.user = {};\n      filteredOptions.state = WriterState.None;\n      return filteredOptions;\n    };\n\n    XMLWriterBase.prototype.indent = function(node, options, level) {\n      var indentLevel;\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else if (options.pretty) {\n        indentLevel = (level || 0) + options.offset + 1;\n        if (indentLevel > 0) {\n          return new Array(indentLevel).join(options.indent);\n        }\n      }\n      return '';\n    };\n\n    XMLWriterBase.prototype.endline = function(node, options, level) {\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else {\n        return options.newline;\n      }\n    };\n\n    XMLWriterBase.prototype.attribute = function(att, options, level) {\n      var r;\n      this.openAttribute(att, options, level);\n      r = ' ' + att.name + '=\"' + att.value + '\"';\n      this.closeAttribute(att, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.cdata = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<![CDATA[';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ']]>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.comment = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!-- ';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ' -->' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.declaration = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?xml';\n      options.state = WriterState.InsideTag;\n      r += ' version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.docType = function(node, options, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += ']';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, i, j, len, len1, name, prettySuppressed, r, ref, ref1, ref2;\n      level || (level = 0);\n      prettySuppressed = false;\n      r = '';\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r += this.indent(node, options, level) + '<' + node.name;\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          r += '>';\n          options.state = WriterState.CloseTag;\n          r += '</' + node.name + '>' + this.endline(node, options, level);\n        } else {\n          options.state = WriterState.CloseTag;\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        r += '>';\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        r += this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        r += '</' + node.name + '>' + this.endline(node, options, level);\n      } else {\n        if (options.dontPrettyTextNodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw) && (child.value != null)) {\n              options.suppressPrettyCount++;\n              prettySuppressed = true;\n              break;\n            }\n          }\n        }\n        r += '>' + this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += this.indent(node, options, level) + '</' + node.name + '>';\n        if (prettySuppressed) {\n          options.suppressPrettyCount--;\n        }\n        r += this.endline(node, options, level);\n        options.state = WriterState.None;\n      }\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.writeChildNode = function(node, options, level) {\n      switch (node.type) {\n        case NodeType.CData:\n          return this.cdata(node, options, level);\n        case NodeType.Comment:\n          return this.comment(node, options, level);\n        case NodeType.Element:\n          return this.element(node, options, level);\n        case NodeType.Raw:\n          return this.raw(node, options, level);\n        case NodeType.Text:\n          return this.text(node, options, level);\n        case NodeType.ProcessingInstruction:\n          return this.processingInstruction(node, options, level);\n        case NodeType.Dummy:\n          return '';\n        case NodeType.Declaration:\n          return this.declaration(node, options, level);\n        case NodeType.DocType:\n          return this.docType(node, options, level);\n        case NodeType.AttributeDeclaration:\n          return this.dtdAttList(node, options, level);\n        case NodeType.ElementDeclaration:\n          return this.dtdElement(node, options, level);\n        case NodeType.EntityDeclaration:\n          return this.dtdEntity(node, options, level);\n        case NodeType.NotationDeclaration:\n          return this.dtdNotation(node, options, level);\n        default:\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\n      }\n    };\n\n    XMLWriterBase.prototype.processingInstruction = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?';\n      options.state = WriterState.InsideTag;\n      r += node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.raw = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.text = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdAttList = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ATTLIST';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdElement = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ELEMENT';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name + ' ' + node.value;\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdEntity = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ENTITY';\n      options.state = WriterState.InsideTag;\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdNotation = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!NOTATION';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.openNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.closeNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.openAttribute = function(att, options, level) {};\n\n    XMLWriterBase.prototype.closeAttribute = function(att, options, level) {};\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  NodeType = require('./NodeType');\n\n  WriterState = require('./WriterState');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name.\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.dtd(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n  module.exports.implementation = new XMLDOMImplementation();\n\n  module.exports.nodeType = NodeType;\n\n  module.exports.writerState = WriterState;\n\n}).call(this);\n",null,null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage actions.cache\n\nimport actions.core.info\nimport actions.core.warning\n\nsuspend fun restoreAndLog(\n    paths: List<String>, primaryKey: String,\n    restoreKeys: List<String> = listOf(),\n    version: String,\n): RestoreType {\n    val result = try {\n        when {\n            restoreKeys.isEmpty() -> restoreCache(paths.toTypedArray(), version + primaryKey)\n            else -> restoreCache(\n                paths.toTypedArray(),\n                version + primaryKey,\n                restoreKeys.map { version + it }.toTypedArray(),\n            )\n        }\n    } catch (t: Throwable) {\n        when (t.asDynamic().name) {\n            \"ValidationError\" -> throw t\n            else -> {\n                warning(\"Error while loading $primaryKey: ${t.message}\")\n                return RestoreType.None\n            }\n        }\n    }\n    result?.removePrefix(version)?.let {\n        return if (it.endsWith(primaryKey)) RestoreType.Exact(it) else RestoreType.Partial(it)\n    }\n    info(\"Cache was not found for $primaryKey, restore keys: ${restoreKeys.joinToString(\", \")}\")\n    return RestoreType.None\n}\n\nsuspend fun saveAndLog(\n    paths: List<String>,\n    key: String,\n    version: String,\n) {\n    try {\n        saveCache(paths.toTypedArray(), version + key)\n    } catch (t: Throwable) {\n        // TODO: propagate error\n        when (t.asDynamic().name) {\n            \"ValidationError\" -> throw t\n            \"ReserveCacheError\" -> info(t.message ?: \"Unknown ReserveCacheError\")\n            else -> when {\n                t.message?.contains(\"Cache already exists\") == true ->\n                    info(\"Error while uploading $key: ${t.message}\")\n                else ->\n                    warning(\"Error while uploading $key: ${t.message}\")\n            }\n        }\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage actions.cache\n\nsealed class RestoreType {\n    data class Exact(val path: String) : RestoreType()\n    data class Partial(val path: String) : RestoreType()\n    object None : RestoreType() {\n        override fun toString() = \"None\"\n    }\n    object Unknown : RestoreType() {\n        override fun toString() = \"Unknown\"\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage actions.core\n\nclass ActionFailedException(override val message: String, cause: Throwable? = null) :\n    Throwable(message, cause)\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage actions.core\n\nimport js.core.get\nimport node.process.process\nimport kotlin.reflect.KProperty\n\n/**\n * See https://docs.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables\n */\nobject ActionsEnvironment {\n    val HOME by Environment\n    val GITHUB_WORKFLOW by Environment\n    val GITHUB_RUN_ID by Environment\n    val GITHUB_RUN_NUMBER by Environment\n    val GITHUB_ACTION by Environment\n    val GITHUB_ACTOR by Environment\n    val GITHUB_REPOSITORY by Environment\n    val GITHUB_EVENT_NAME by Environment\n    val GITHUB_EVENT_PATH by Environment\n    val GITHUB_WORKSPACE by Environment\n    val GITHUB_SHA by Environment\n    val GITHUB_REF by Environment\n    val GITHUB_HEAD_REF by Environment\n    val GITHUB_BASE_REF by Environment\n    val GITHUB_SERVER_URL by Environment\n    val GITHUB_API_URL by Environment\n    val GITHUB_GRAPHQL_URL by Environment\n    val RUNNER_OS by Environment\n}\n\nprivate object Environment {\n    operator fun getValue(environment: Any, property: KProperty<*>): String =\n        process.env[property.name] ?: throw ActionFailedException(\"${property.name} is not found in process.env\")\n}\n","package actions.core.ext\n\nimport js.core.jso\n\nfun getInput(name: String, required: Boolean = false): String =\n    actions.core.getInput(name, jso { this.required = required })\n\nprivate val LINE_SEPARATOR = Regex(\"[\\r\\n]+\")\n\nfun getListInput(name: String, required: Boolean = false): List<String> =\n    actions.core.getInput(name, jso { this.required = required })\n        .split(LINE_SEPARATOR)\n        .map { it.trim() }\n        .filterNot { it.isEmpty() }\n",null,null,null,null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage actions.core\n\nimport js.core.jso\n\nexternal interface TypedCommandProperties : CommandProperties {\n    var file: String\n    var line: Int\n    var col: Int\n}\n\ninline fun issueCommand(command: String, message: String, properties: TypedCommandProperties.() -> Unit = {}) =\n    issueCommand(command, jso(properties), message)\n\nfun warning(message: String, file: String? = null, line: Int? = null, col: Int? = null) {\n    if (file == null) {\n        issueCommand(\"warning\", message)\n        return\n    }\n    issueCommand(\"warning\", message) {\n        this.file = file\n        line?.let { v -> this.line = v }\n        col?.let { v -> this.col = v }\n    }\n}\n\nfun error(message: String, file: String? = null, line: Int? = null, col: Int? = null) {\n    if (file == null) {\n        issueCommand(\"error\", message)\n        return\n    }\n    issueCommand(\"error\", message) {\n        this.file = file\n        line?.let { v -> this.line = v }\n        col?.let { v -> this.col = v }\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage actions.exec\n\nimport js.core.jso\n\nclass ExecResult(\n    val exitCode: Int,\n    val stdout: String,\n    val stderr: String,\n)\n\nsuspend fun exec(\n    commandLine: String, vararg args: String,\n    captureOutput: Boolean = false,\n    options: ExecOptions.() -> Unit = {}\n): ExecResult {\n    val stdout = mutableListOf<String>()\n    val stderr = mutableListOf<String>()\n    val exitCode = exec(\n        commandLine,\n        args.copyOf(),\n        jso {\n            // TODO: add custom interface for ExecOptions for [captureOutput]\n            listeners = jso()\n            options()\n            if (captureOutput) {\n                listeners!!.stdout = {\n                    // it.toString() results in [...] for unknown reason\n                    stdout.add(\"\" + it.unsafeCast<String>())\n                }\n                listeners!!.stderr = {\n                    // it.toString() results in [...] for unknown reason\n                    stderr.add(\"\" + it.unsafeCast<String>())\n                }\n            }\n        }\n    )\n    return ExecResult(\n        exitCode = exitCode.toInt(),\n        stdout = stdout.joinToString(\"\\n\"),\n        stderr = stderr.joinToString(\"\\n\")\n    )\n}\n",null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage actions.glob\n\nimport kotlinx.coroutines.await\nimport kotlinx.coroutines.launch\nimport kotlinx.coroutines.supervisorScope\nimport node.fs.unlink\n\nsuspend fun removeFiles(files: List<String>) {\n    if (files.isEmpty()) {\n        return\n    }\n    val globber = create(files.joinToString(\"\\n\"))\n    val fileNames = globber.glob().await()\n    supervisorScope {\n        for (file in fileNames) {\n            launch {\n                unlink(file)\n            }\n        }\n    }\n}\n",null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport actions.core.*\nimport actions.core.ext.getInput\nimport actions.core.ext.getListInput\nimport actions.io.mkdirP\nimport com.github.burrunan.gradle.GradleCacheAction\nimport com.github.burrunan.gradle.Parameters\nimport com.github.burrunan.gradle.github.stateVariable\nimport com.github.burrunan.gradle.proxy.CacheProxy\nimport com.github.burrunan.launcher.LaunchParams\nimport com.github.burrunan.launcher.install\nimport com.github.burrunan.launcher.launchGradle\nimport com.github.burrunan.launcher.resolveDistribution\nimport com.github.burrunan.wrappers.nodejs.normalizedPath\nimport js.core.globalThis\nimport js.core.set\nimport node.fs.writeFile\nimport octokit.currentTrigger\nimport node.path.path\nimport node.process.process\n\nfun String.splitLines() =\n    split(Regex(\"\\\\s*[\\r\\n]+\\\\s*\"))\n        .filter { !it.startsWith(\"#\") && it.contains(\"=\") }\n        .associate {\n            val values = it.split(Regex(\"\\\\s*=\\\\s*\"), limit = 2)\n            values[0] to (values.getOrNull(1) ?: \"\")\n        }\n\nfun isMochaRunning() =\n    arrayOf(\"afterEach\", \"after\", \"beforeEach\", \"before\", \"describe\", \"it\").all {\n        globalThis[it] is Function<*>\n    }\n\nsuspend fun main() {\n    if (isMochaRunning()) {\n        // Ignore if called from tests\n        return\n    }\n    val stageVar = stateVariable(\"stage\") { \"MAIN\" }\n    val stage = ActionStage.values().firstOrNull { it.name == stageVar.get() }\n    // Set next stage\n    stageVar.set(\n        when (stage) {\n            ActionStage.MAIN -> ActionStage.POST\n            null -> {\n                setFailed(\"Unable to find action stage: ${stageVar.get()}\")\n                return\n            }\n            else -> null\n        }?.name ?: \"FINAL\",\n    )\n    try {\n        mainInternal(stage)\n    } catch (e: ActionFailedException) {\n        setFailed(e.message)\n    }\n}\n\nsuspend fun mainInternal(stage: ActionStage) {\n    val homeDirectory = getInput(\"home-directory\").trimEnd('/', '\\\\')\n    if (homeDirectory != \"\") {\n        info(\"Overriding home directory to $homeDirectory\")\n        process.env[\"HOME\"] = homeDirectory\n    }\n\n    val gradleStartArguments = parseArgsStringToArgv(getInput(\"arguments\")).toList()\n    val cacheProxyEnabled = getInput(\"remote-build-cache-proxy-enabled\").ifBlank { \"true\" }.toBoolean()\n\n    val executionOnlyCaches = getInput(\"execution-only-caches\").ifBlank { \"false\" }.toBoolean()\n    val enableBuildScanReport = getInput(\"gradle-build-scan-report\").ifBlank { \"true\" }.toBoolean()\n\n    val buildRootDirectory = getInput(\"build-root-directory\").trimEnd('/', '\\\\')\n    if (buildRootDirectory != \"\") {\n        info(\"changing working directory to $buildRootDirectory\")\n        process.chdir(buildRootDirectory)\n    }\n\n    val params = Parameters(\n        jobId = ActionsEnvironment.RUNNER_OS + \"-\" + getInput(\"job-id\"),\n        path = \".\",\n        debug = getInput(\"debug\").toBoolean(),\n        generatedGradleJars = getInput(\"save-generated-gradle-jars\").ifBlank { \"true\" }.toBoolean(),\n        localBuildCache = (!cacheProxyEnabled || gradleStartArguments.isEmpty()) && getInput(\"save-local-build-cache\").ifBlank { \"true\" }\n            .toBoolean(),\n        gradleDependenciesCache = !executionOnlyCaches && getInput(\"save-gradle-dependencies-cache\").ifBlank { \"true\" }.toBoolean(),\n        gradleDependenciesCacheKey = getListInput(\"gradle-dependencies-cache-key\"),\n        mavenDependenciesCache = !executionOnlyCaches && getInput(\"save-maven-dependencies-cache\").ifBlank { \"true\" }.toBoolean(),\n        mavenLocalIgnorePaths = getListInput(\"maven-local-ignore-paths\"),\n        concurrent = getInput(\"concurrent\").ifBlank { \"false\" }.toBoolean(),\n        readOnly = getInput(\"read-only\").ifBlank { \"false\" }.toBoolean(),\n    )\n\n    val gradleDistribution = resolveDistribution(\n        versionSpec = getInput(\"gradle-version\").ifBlank { \"wrapper\" },\n        projectPath = params.path,\n        distributionUrl = getInput(\"gradle-distribution-url\").ifBlank { null },\n        distributionSha256Sum = getInput(\"gradle-distribution-sha-256-sum\").ifBlank { null },\n        enableDistributionSha256SumWarning = getInput(\"gradle-distribution-sha-256-sum-warning\").ifBlank { \"true\" }.toBoolean(),\n    )\n\n    if (stage == ActionStage.MAIN || stage == ActionStage.POST) {\n        val cacheAction = GradleCacheAction(currentTrigger(), params, gradleDistribution)\n\n        if (params.generatedGradleJars || params.localBuildCache ||\n            params.gradleDependenciesCache || params.mavenDependenciesCache\n        ) {\n            cacheAction.execute(stage)\n        }\n    }\n\n    if (stage == ActionStage.MAIN && gradleStartArguments.isNotEmpty()) {\n        val args = when (params.localBuildCache || cacheProxyEnabled) {\n            true -> listOf(\"--build-cache\") + gradleStartArguments\n            else -> gradleStartArguments\n        }\n        val launchParams = LaunchParams(\n            gradle = install(gradleDistribution),\n            projectPath = params.path,\n            arguments = args,\n            properties = getInput(\"properties\").splitLines(),\n        )\n\n        val cacheProxy = CacheProxy()\n\n        if (cacheProxyEnabled) {\n            info(\"Starting remote cache proxy, adding it via ~/.gradle/init.gradle\")\n            cacheProxy.start()\n            val gradleHome = path.join(\"~\".normalizedPath, \".gradle\")\n            mkdirP(gradleHome)\n            writeFile(\n                path.join(gradleHome, \"init.gradle\"),\n                cacheProxy.getMultiCacheConfiguration(\n                    multiCacheEnabled = getInput(\"multi-cache-enabled\").ifBlank { \"true\" }.toBoolean(),\n                    multiCacheVersion = getInput(\"multi-cache-version\").ifBlank { \"1.0\" },\n                    multiCacheRepository = getInput(\"multi-cache-repository\"),\n                    multiCacheGroupIdFilter = getInput(\"multi-cache-group-id-filter\").ifBlank { \"com[.]github[.]burrunan[.]multi-?cache\" },\n                    push = !params.readOnly,\n                ),\n            )\n        }\n\n        try {\n            val result = launchGradle(launchParams)\n            if (enableBuildScanReport) {\n                result.buildScanUrl?.let {\n                    warning(\"Gradle Build Scan: $it\")\n                    setOutput(\"build-scan-url\", it)\n                }\n            }\n        } finally {\n            if (cacheProxyEnabled) {\n                cacheProxy.stop()\n            }\n        }\n    }\n    return\n}\n",null,null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.gradle.proxy\n\nimport actions.cache.internal.*\nimport actions.core.debug\nimport actions.glob.removeFiles\nimport com.github.burrunan.gradle.cache.*\nimport com.github.burrunan.wrappers.nodejs.mkdir\nimport com.github.burrunan.wrappers.nodejs.pipeAndWait\nimport node.fs.createReadStream\nimport node.fs.createWriteStream\nimport node.http.IncomingMessage\nimport node.http.ServerResponse\nimport kotlinx.coroutines.GlobalScope\nimport kotlinx.coroutines.await\nimport kotlinx.coroutines.launch\nimport js.core.jso\nimport js.core.set\nimport node.fs.Stats\nimport node.fs.stat\nimport node.http.OutgoingHttpHeaders\nimport node.net.AddressInfo\nimport node.path.path\nimport node.process.process\nimport node.stream.Readable\nimport node.stream.Writable\nimport kotlin.coroutines.resume\nimport kotlin.coroutines.suspendCoroutine\n\nclass CacheProxy {\n    companion object {\n        const val GHA_CACHE_URL = \"GHA_CACHE_URL\"\n        private const val TEMP_DIR = \".cache-proxy\"\n    }\n\n    private var _cacheUrl: String? = null\n\n    val cacheUrl: String? get() = _cacheUrl\n\n    private val server = node.http.createServer<IncomingMessage, ServerResponse<*>> { req, res ->\n        val query = node.url.parse(req.url!!, true)\n        val path = query.pathname ?: \"\"\n        res.handle {\n            val id = path.removePrefix(\"/\")\n            when (req.method) {\n                \"GET\" -> getEntry(id, res)\n                \"PUT\" -> putEntry(id, req, res)\n                else -> HttpException.notImplemented(\"Not implemented: ${req.method}\")\n            }\n        }\n    }\n\n    private val compression = jso<InternalCacheOptions> { compressionMethod = CompressionMethod.Gzip }\n\n    private suspend fun putEntry(id: String, req: IncomingMessage, res: ServerResponse<*>) {\n        val fileName = path.join(TEMP_DIR, \"bc-$id\")\n        try {\n            req.pipeAndWait(createWriteStream(fileName))\n            res.writeHead(200, \"OK\")\n        } finally {\n            GlobalScope.launch {\n                try {\n                    val cacheIdRequest = reserveCache(id, arrayOf(id), compression)\n                    val response = cacheIdRequest.await()\n                    val cacheId = response.result?.cacheId\n                        ?: when {\n                            response.statusCode == 400 -> throw Throwable(\n                                \"Cache $fileName size of ${stat(fileName).unsafeCast<Stats>().size.toLong() / 1024 / 1024} MB is over the limit, not saving cache\"\n                            )\n                            else -> throw Throwable(\n                                \"Can't reserve cache for id $id, another job might be creating this cache: ${response.error?.message}\"\n                            )\n                        }\n                    console.log(\"cacheid: ${cacheId}\")\n                    saveCache(cacheId, fileName).await()\n                } finally {\n                    removeFiles(listOf(fileName))\n                }\n            }\n        }\n    }\n\n    private suspend fun getEntry(id: String, res: ServerResponse<*>) {\n        val cacheEntry = getCacheEntry(arrayOf(id), arrayOf(id), compression).await()\n            ?: throw HttpException.notFound(\"No cache entry found for $id\")\n        val archiveLocation = cacheEntry.archiveLocation\n            ?: throw HttpException.notFound(\"No archive location for $id\")\n        val fileName = path.join(TEMP_DIR, \"dl-$id\")\n        debug { \"Found ${cacheEntry.cacheKey}, ${cacheEntry.scope} $archiveLocation\" }\n        try {\n            downloadCache(archiveLocation, fileName).await()\n            res.writeHead(\n                200, \"Ok\",\n                jso<OutgoingHttpHeaders> {\n                    this[\"content-length\"] = stat(fileName).unsafeCast<Stats>().size\n                },\n            )\n            createReadStream(fileName).pipeAndWait(res)\n        } finally {\n            removeFiles(listOf(fileName))\n        }\n    }\n\n    private val pluginId = \"com.github.burrunan.multi-cache\"\n\n    fun getMultiCacheConfiguration(\n        multiCacheEnabled: Boolean = true,\n        multiCacheVersion: String = \"1.0\",\n        multiCacheRepository: String = \"\",\n        multiCacheGroupIdFilter: String = \"com[.]github[.]burrunan[.]multi-?cache\",\n        push: Boolean = true,\n    ): String {\n        val multiCacheGroupIdFilterEscaped = multiCacheGroupIdFilter.replace(\"\\\\\", \"\\\\\\\\\")\n        //language=Groovy\n        return \"\"\"\n            def pluginId = 'com.github.burrunan.multi-cache'\n            def multiCacheVersion = '1.0'\n            def multiCacheGroupIdFilter = 'com[.]github[.]burrunan[.]multi-?cache'\n            boolean multiCacheEnabled = $multiCacheEnabled\n            String multiCacheRepository = '$multiCacheRepository'\n            boolean gradle6Plus = org.gradle.util.GradleVersion.current() >= org.gradle.util.GradleVersion.version('6.0')\n            // beforeSettings is Gradle 6.0+\n            if (multiCacheEnabled && !gradle6Plus) {\n                println(\"Multiple remote build caches ($pluginId) are supported in Gradle 6.0+ only\")\n                multiCacheEnabled = false\n            }\n            if (multiCacheEnabled) {\n                beforeSettings { settings ->\n                    def repos = settings.buildscript.repositories\n                    if (multiCacheRepository != '') {\n                        repos.add(\n                            repos.maven {\n                                url = multiCacheRepository\n                                if ('$multiCacheGroupIdFilterEscaped' != '') {\n                                    content {\n                                        includeGroupByRegex('$multiCacheGroupIdFilterEscaped')\n                                    }\n                                }\n                            }\n                        )\n                    } else if (repos.isEmpty()) {\n                        repos.add(repos.gradlePluginPortal())\n                    }\n                    settings.buildscript.dependencies {\n                        classpath(\"$pluginId:${pluginId}.gradle.plugin:$multiCacheVersion\")\n                    }\n                }\n            }\n\n            settingsEvaluated { settings ->\n                settings.buildCache {\n                    boolean needMulticache = remote != null\n                    if (needMulticache && !multiCacheEnabled) {\n                        println(\"$pluginId is disabled\")\n                        return\n                    }\n\n                    local {\n                        enabled = true\n                        push = $push\n                    }\n                    if (needMulticache) {\n                        settings.pluginManager.apply(\"$pluginId\")\n                        settings.multicache.push('base')\n                    }\n                    remote(HttpBuildCache) {\n                        url = '$cacheUrl'\n                        push = $push\n                        // Build cache is located on localhost, so it is fine to use http protocol\n                        if (gradle6Plus) {\n                            allowInsecureProtocol = true\n                        }\n                    }\n                    if (needMulticache) {\n                        settings.multicache.pushAndConfigure('actions-cache') {\n                            loadSequentiallyWriteConcurrently('actions-cache', 'base')\n                        }\n                    }\n                }\n            }\n        \"\"\".trimIndent()\n    }\n\n    suspend fun start() {\n        suspendCoroutine<Nothing?> { cont ->\n            server.listen(0) {\n                cont.resume(null)\n            }\n        }\n\n        mkdir(TEMP_DIR)\n        val url = \"http://localhost:${(server.address().unsafeCast<AddressInfo>()).port}/\"\n        _cacheUrl = url\n        process.env[GHA_CACHE_URL] = url\n    }\n\n    fun stop() {\n        server.close()\n    }\n\n    suspend inline operator fun <T> invoke(block: () -> T): T {\n        start()\n        try {\n            return block()\n        } finally {\n            stop()\n        }\n    }\n}\n",null,null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nclass HttpException(val code: Int, message: String) : Throwable(message) {\n    companion object {\n        fun noContent(message: String) = HttpException(204, message)\n        fun notImplemented(message: String) = HttpException(501, message)\n        fun notFound(message: String) = HttpException(404, message)\n        fun badRequest(message: String) = HttpException(400, message)\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nimport node.http.ServerResponse\nimport kotlinx.coroutines.CoroutineScope\nimport kotlinx.coroutines.GlobalScope\nimport kotlinx.coroutines.launch\nimport kotlinx.coroutines.supervisorScope\n\nfun ServerResponse<*>.handle(action: suspend CoroutineScope.() -> Unit) =\n    GlobalScope.launch {\n        try {\n            supervisorScope {\n                action()\n            }\n        } catch (e: HttpException) {\n            writeHead(e.code, e.message ?: \"no message\")\n        } catch (e: Throwable) {\n            e.printStackTrace()\n            writeHead(500, \"Error processing ${e.message}\")\n        } finally {\n            end()\n        }\n    }\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher\n\ndata class GradleDistribution(\n    val version: String,\n    val distributionUrl: String,\n    val distributionSha256Sum: String?,\n)\n\nsuspend fun resolveDistribution(\n    versionSpec: String,\n    projectPath: String,\n    distributionUrl: String? = null,\n    distributionSha256Sum: String? = null,\n    enableDistributionSha256SumWarning: Boolean = true\n): GradleDistribution {\n    return if (distributionUrl == null) {\n        when (val version = GradleVersion(versionSpec)) {\n            is GradleVersion.Official -> version.findUrl()\n            is GradleVersion.Dynamic -> version.findUrl()\n            is GradleVersion.Wrapper -> findVersionFromWrapper(projectPath, enableDistributionSha256SumWarning)\n        }\n    } else {\n        GradleDistribution(\n            version = versionSpec,\n            distributionUrl = distributionUrl,\n            distributionSha256Sum = distributionSha256Sum ?: \"$distributionUrl.sha256\",\n        )\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher\n\nimport actions.core.ActionFailedException\nimport actions.core.info\nimport actions.core.warning\nimport actions.http.client.HttpClient\nimport actions.http.client.HttpCodes\nimport actions.io.rmRF\nimport actions.tool.cache.cacheDir\nimport actions.tool.cache.downloadTool\nimport actions.tool.cache.extractZip\nimport com.github.burrunan.hashing.hashFiles\nimport com.github.burrunan.wrappers.nodejs.exists\nimport kotlinx.coroutines.GlobalScope\nimport kotlinx.coroutines.await\nimport kotlinx.coroutines.launch\nimport js.core.recordOf\nimport node.buffer.BufferEncoding\nimport node.fs.chmod\nimport node.fs.readFile\nimport node.path.path\nimport node.process.Platform\n\nsuspend fun install(distribution: GradleDistribution): String {\n    val cachedTool = actions.tool.cache.find(\"gradle\", distribution.version)\n    val gradleDir = if (cachedTool.isNotEmpty()) {\n        info(\"Detected Gradle ${distribution.version} at $cachedTool\")\n        cachedTool\n    } else {\n        val gradleZip = downloadTool(distribution.distributionUrl)\n        distribution.distributionSha256Sum?.let { expectedSha256 ->\n            val hash = hashFiles(gradleZip, algorithm = \"sha256\", includeFileName = false).hash\n            if (hash != expectedSha256) {\n                throw ActionFailedException(\n                    \"Checksum mismatch for Gradle ${distribution.version} (${distribution.distributionUrl}). \" +\n                        \"Expected: $expectedSha256, actual: $hash\",\n                )\n            }\n        }\n        val extractedGradleDir = extractZip(gradleZip)\n        cacheDir(path.join(extractedGradleDir, \"gradle-${distribution.version}\"), \"gradle\", distribution.version).also {\n            GlobalScope.launch {\n                // Remove temporary files\n                rmRF(gradleZip)\n                rmRF(extractedGradleDir)\n            }\n        }\n    }\n    return path.join(gradleDir, \"bin\", if (node.os.platform() == Platform.win32) \"gradle.bat\" else \"gradle\").also {\n        if (node.os.platform() != Platform.win32) {\n            chmod(it, \"755\".toInt(8))\n        }\n    }\n}\n\nprivate val HTTP_AGENT = recordOf<String, Any>(\"User-Agent\" to \"burrunan/gradle-cache-action\")\n\nsuspend fun GradleVersion.Official.findUrl(): GradleDistribution {\n    val url = \"https://services.gradle.org/versions/all\"\n    val response =\n        HttpClient().getJson<Array<GradleVersionResponse>>(url, HTTP_AGENT).await()\n    if (response.statusCode.unsafeCast<HttpCodes>() != HttpCodes.OK) {\n        throw ActionFailedException(\"Unable to lookup $url Gradle version: ${response.statusCode}, ${JSON.stringify(response.result)}\")\n    }\n    return response.result?.firstOrNull { it.version == name }?.resolveChecksum()\n        ?: throw ActionFailedException(\"Unable to find Gradle version $name\")\n}\n\nsuspend fun GradleVersion.Dynamic.findUrl(): GradleDistribution {\n    val url = \"https://services.gradle.org/versions/$apiPath\"\n    val response = HttpClient().getJson<dynamic>(url, HTTP_AGENT).await()\n    if (response.statusCode.unsafeCast<HttpCodes>() != HttpCodes.OK) {\n        throw ActionFailedException(\"Unable to lookup $url Gradle version: ${response.statusCode}, ${JSON.stringify(response.result)}\")\n    }\n    if (response.result?.version != null) {\n        return response.result.unsafeCast<GradleVersionResponse>().resolveChecksum()\n    }\n    if (this is GradleVersion.ReleaseCandidate) {\n        return GradleVersion.Current.findUrl()\n    }\n    throw ActionFailedException(\"Empty result from $url: ${JSON.stringify(response.result)}\")\n}\n\nsuspend fun GradleVersionResponse.resolveChecksum() =\n    GradleDistribution(\n        version = version,\n        distributionUrl = downloadUrl,\n        distributionSha256Sum = HttpClient().get(checksumUrl, HTTP_AGENT).await().readBody().await().trim(),\n    )\n\nsuspend fun findVersionFromWrapper(projectPath: String, enableDistributionSha256SumWarning: Boolean): GradleDistribution {\n    val gradleWrapperProperties = path.join(projectPath, \"gradle\", \"wrapper\", \"gradle-wrapper.properties\")\n    if (!exists(gradleWrapperProperties)) {\n        warning(\"Gradle wrapper configuration is not found at ${path.resolve(gradleWrapperProperties)}.\\nWill use the current release Gradle version\")\n        return GradleVersion.Current.findUrl()\n    }\n    val propString = readFile(gradleWrapperProperties, BufferEncoding.utf8)\n    val props = javaproperties.parseString(propString).run {\n        getKeys().associateWith { getFirst(it)!! }\n    }\n\n    val distributionUrl = props.getValue(\"distributionUrl\")\n    val distributionSha256Sum = props[\"distributionSha256Sum\"]\n\n    val version = distributionUrl.substringAfterLast(\"/\")\n        .substringAfter(\"gradle-\")\n        .removeSuffix(\"-all.zip\")\n        .removeSuffix(\"-bin.zip\")\n        .removeSuffix(\".zip\")\n\n    if (enableDistributionSha256SumWarning && distributionSha256Sum == null) {\n        warning(\n            \"distributionSha256Sum is not set in $gradleWrapperProperties.\\n\" +\n                \"Please consider adding the checksum, \" +\n                \"see https://docs.gradle.org/current/userguide/gradle_wrapper.html#configuring_checksum_verification\",\n        )\n    }\n\n    return if (distributionUrl.removePrefix(\"https\").removePrefix(\"http\")\n            .startsWith(\"://services.gradle.org/\")\n    ) {\n        // Official release, use shorter version\n        //   https://services.gradle.org/distributions-snapshots/gradle-6.7-20200730220045+0000-all.zip\n        //   https://services.gradle.org/distributions/gradle-6.6-rc-4-all.zip\n        //   https://services.gradle.org/distributions/gradle-6.5.1-all.zip\n        if (distributionUrl.endsWith(\"-bin.zip\") && distributionSha256Sum != null) {\n            GradleDistribution(version, distributionUrl, distributionSha256Sum)\n        } else {\n            // Resolve checksum from the official site\n            // This would switch to -bin distribution which is smaller\n            GradleVersion.Official(version).findUrl()\n        }\n    } else {\n        GradleDistribution(version, distributionUrl, distributionSha256Sum)\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.launcher\n\nimport actions.core.ExitCode\nimport actions.core.setFailed\nimport actions.core.setOutput\nimport actions.exec.exec\nimport com.github.burrunan.launcher.internal.GradleErrorCollector\nimport com.github.burrunan.launcher.internal.GradleOutErrorCollector\nimport js.core.jso\nimport node.process.process\n\nclass GradleResult(\n    val buildScanUrl: String?,\n)\n\nsuspend fun launchGradle(params: LaunchParams): GradleResult {\n    var buildScanUrl: String? = null\n    // See https://youtrack.jetbrains.com/issue/KT-41107\n    var failureDetected = false\n    val errorCollector = GradleErrorCollector()\n    val outCollector = GradleOutErrorCollector()\n\n    @Suppress(\"REDUNDANT_SPREAD_OPERATOR_IN_NAMED_FORM_IN_FUNCTION\")\n    val result = exec(\n        params.gradle,\n        args = *(listOf(\"--no-daemon\") +\n            params.properties.map { \"-P${it.key}=${it.value}\" } +\n            params.arguments).toTypedArray(),\n    ) {\n        cwd = params.projectPath\n        ignoreReturnCode = true\n        listeners = jso {\n            stdline = {\n                val str = it.trimEnd()\n                if (str.startsWith(\"https://gradle.com/s/\")) {\n                    setOutput(\"build-scan-url\", str)\n                    buildScanUrl = str\n                }\n                outCollector.process(str)\n            }\n            errline = {\n                errorCollector.process(it)\n                outCollector.process(it)\n            }\n        }\n    }\n    errorCollector.done()\n    outCollector.done()\n    for (error in errorCollector.errors + outCollector.errors) {\n        failureDetected = true\n        val shortFile = error.file\n            ?.removePrefix(process.cwd())\n        actions.core.error(error.message, shortFile, error.line, error.col)\n    }\n    if (failureDetected) {\n        process.exitCode = ExitCode.Failure.unsafeCast<Number>()\n    }\n    if (!failureDetected && result.exitCode != 0) {\n        setFailed(\"Gradle process finished with a non-zero exit code: ${result.exitCode}\")\n    }\n    return GradleResult(buildScanUrl)\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher\n\nsealed class GradleVersion(val name: String, unused: Int = 0) {\n    companion object {\n        val DYNAMIC_VERSIONS = listOf(\n            Current,\n            ReleaseCandidate,\n            Nightly,\n            ReleaseNightly,\n        )\n        val FIXED_VERSIONS = DYNAMIC_VERSIONS + Wrapper\n    }\n\n    abstract class Dynamic(label: String, val apiPath: String) : GradleVersion(label)\n    class Official(label: String) : GradleVersion(label) {\n        override fun toString() = \"Official($name)\"\n    }\n\n    object Current : Dynamic(\"current\", \"current\") {\n        override fun toString() = \"Current\"\n    }\n\n    object ReleaseCandidate : Dynamic(\"rc\", \"release-candidate\") {\n        override fun toString() = \"ReleaseCandidate\"\n    }\n\n    object Nightly : Dynamic(\"nightly\", \"nightly\") {\n        override fun toString() = \"Nightly\"\n    }\n\n    object ReleaseNightly : Dynamic(\"release-nightly\", \"release-nightly\") {\n        override fun toString() = \"ReleaseNightly\"\n    }\n\n    object Wrapper : GradleVersion(\"wrapper\") {\n        override fun toString() = \"Wrapper\"\n    }\n}\n\nfun GradleVersion(version: String) =\n    GradleVersion.FIXED_VERSIONS.firstOrNull { it.name == version }\n        ?: GradleVersion.Official(version)\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher\n\nclass LaunchParams(\n    val gradle: String,\n    val projectPath: String,\n    val arguments: List<String>,\n    val properties: Map<String, String>,\n)\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher.internal\n\nclass GradleError(\n    val message: String,\n    val file: String? = null,\n    val line: Int? = null,\n    val col: Int? = null,\n) {\n    override fun toString() = \"GradleError(line=$line, col=$col, file=$file, message='$message')\"\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher.internal\n\nprivate enum class ErrorHeader(val message: String) {\n    FAILURE(\"FAILURE: \"),\n    WHERE(\"* Where:\"),\n    WHAT_WENT_WRONG(\"* What went wrong:\"),\n    TRY(\"* Try:\"),\n}\n\nprivate val errorHeaderValues = ErrorHeader.values()\n\nclass GradleErrorCollector {\n    private val _errors = mutableListOf<GradleError>()\n    val errors: List<GradleError> = _errors\n\n    private val sb = StringBuilder()\n    private var nextKey: ErrorHeader? = null\n    private val data = mutableMapOf<ErrorHeader, String>()\n\n    fun done() {\n        if (data.isNotEmpty()) {\n            val message = data[ErrorHeader.WHAT_WENT_WRONG] ?: \"Unknown error\"\n\n            _errors += data[ErrorHeader.WHERE]?.let { location ->\n                Regex(\"^Build file '(.+)' line: (\\\\d+)$\").matchEntire(location)?.let {\n                    GradleError(\n                        message = message,\n                        file = it.groupValues[1],\n                        line = it.groupValues[2].toInt(),\n                    )\n                }\n            } ?: GradleError(message)\n        }\n        data.clear()\n        sb.clear()\n    }\n\n    fun process(line: String) {\n        val str = line.trimEnd()\n        if (str.startsWith(ErrorHeader.FAILURE.message)) {\n            done()\n            data[ErrorHeader.FAILURE] = str.removePrefix(ErrorHeader.FAILURE.message)\n            return\n        }\n\n        if (str.startsWith(\"* Get more help\") ||\n            str.startsWith(\"BUILD FAILED \")\n        ) {\n            done()\n            nextKey = null\n            return\n        }\n\n        errorHeaderValues.firstOrNull { str.startsWith(it.message) }?.let {\n            nextKey?.let {\n                data[it] = sb.toString().trimEnd()\n            }\n            sb.clear()\n            nextKey = it\n            return\n        }\n\n        if (nextKey != null) {\n            sb.appendLine(line)\n        }\n    }\n}\n",null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.launcher.internal\n\n// e: /../build.gradle.kts:62:1: Unresolved reference: invalid\nprivate val KOTLIN_COMPILE_ERROR = Regex(\"^e: (\\\\S.+?):(\\\\d+):(?:(\\\\d+):)? (.+)$\")\n// [ant:checkstyle] [ERROR] /.../SqlHopTableFunction.java:56:35: ',' is not followed by whitespace. [WhitespaceAfter]\nprivate val CHECKSTYLE_ERROR = Regex(\"^\\\\[ant:checkstyle\\\\] \\\\[ERROR\\\\] (\\\\S.+?):(\\\\d+):(?:(\\\\d+):)? (.+) \\\\[([^\\\\]]+)\\\\]\\$\")\n// /.../RelDataType.java:249: error: reference not found\nprivate val JAVA_ERROR = Regex(\"^(\\\\S.+?):(\\\\d+): error: (.+)$\")\n\nclass GradleOutErrorCollector {\n    private val _errors = mutableListOf<GradleError>()\n    val errors: List<GradleError> = _errors\n    private var taskName: String = \"Unknown task\"\n    private var javaError: MatchResult? = null\n    private val javaErrorLines = mutableListOf<String>()\n\n    fun process(line: String) {\n        if (line.startsWith(\"> Task \") ||\n            line.startsWith(\"> Configure\")\n        ) {\n            taskName = line.removePrefix(\"> \").let { \"[$it]\" }\n        }\n        if (line.startsWith(\"e: \")) {\n            // Looks like Kotlin error\n            // e: /../build.gradle.kts:62:1: Unresolved reference: invalid\n            KOTLIN_COMPILE_ERROR.matchEntire(line)?.let {\n                _errors += GradleError(\n                    message = \"$taskName ${it.groupValues[4]}\",\n                    file = it.groupValues[1],\n                    line = it.groupValues[2].toInt(),\n                    col = it.groupValues[3].takeIf { it.isNotBlank() }?.toInt(),\n                )\n            }\n            return\n        }\n        // Checkstyle error:\n        // [ant:checkstyle] [ERROR] /.../SqlHopTableFunction.java:56:35: ',' is not followed by whitespace. [WhitespaceAfter]\n        CHECKSTYLE_ERROR.matchEntire(line)?.let {\n            _errors += GradleError(\n                message = \"$taskName ${\"[${it.groupValues[5]}] \".removePrefix(\"[] \")}${it.groupValues[4]}\",\n                file = it.groupValues[1],\n                line = it.groupValues[2].toInt(),\n                col = it.groupValues[3].takeIf { it.isNotBlank() }?.toInt(),\n            )\n        }\n        processJavaError(line)\n    }\n\n    private fun processJavaError(line: String) {\n        // /.../RelDataType.java:249: error: reference not found\n        JAVA_ERROR.matchEntire(line)?.let {\n            done()\n            javaError = it\n            return\n        }\n        if (javaError != null) {\n            val errorContinuation = line.startsWith(\" \")\n            if (errorContinuation) {\n                javaErrorLines += line\n            }\n            if (!errorContinuation || javaErrorLines.size >= 3) {\n                done()\n            }\n        }\n    }\n\n    fun done() {\n        javaError?.let {\n            _errors += GradleError(\n                message = \"$taskName ${it.groupValues[3]}\\n${javaErrorLines.joinToString(\"\\n\")}\",\n                file = it.groupValues[1],\n                line = it.groupValues[2].toInt(),\n            )\n        }\n        javaError = null\n        javaErrorLines.clear()\n    }\n}\n",null,null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.hashing\n\nimport actions.core.ActionFailedException\nimport actions.core.warning\nimport com.github.burrunan.wrappers.nodejs.normalizedPath\nimport com.github.burrunan.wrappers.nodejs.pipeAndWait\nimport kotlinx.coroutines.await\nimport kotlinx.serialization.Serializable\nimport node.WritableStream\nimport node.crypto.BinaryToTextEncoding\nimport node.crypto.createHash\nimport node.fs.Stats\nimport node.fs.createReadStream\nimport node.fs.stat\nimport node.process.process\nimport node.stream.Transform\n\n@Serializable\nclass HashDetails(\n    val info: HashInfo,\n    val contents: HashContents,\n)\n\n@Serializable\nclass HashInfo(\n    val totalBytes: Long,\n    val hash: String,\n    val totalFiles: Int,\n)\n\n@Serializable\nclass HashContents(\n    val files: Map<String, FileDetails>,\n)\n\n@Serializable\nclass FileDetails(\n    val fileSize: Long,\n    val hash: String,\n)\n\n/**\n * Sample: ~/.gradle/caches/modules-2/files-2.1/com.google.errorprone/error_prone_annotations/2.0.18/5f65affce1684999e2f4024983835efc3504012e/error_prone_annotations-2.0.18.jar\n */\nprivate fun sha1FromModulesFileName(key: String): String {\n    val lastSlash = key.lastIndexOf('/')\n    val hashStart = key.lastIndexOf('/', startIndex = lastSlash - 1) + 1\n    return key.substring(hashStart, lastSlash).padStart(40, '0')\n}\n\nsuspend fun hashFilesDetailed(\n    vararg paths: String,\n    algorithm: String = \"sha1\",\n    includeFileName: Boolean = true,\n): HashDetails = try {\n    val globber = actions.glob.create(paths.joinToString(\"\\n\"))\n    val fileNames = globber.glob().await()\n    // Sorting is needed for stable overall hash\n    fileNames.sort()\n\n    val githubWorkspace = process.cwd()\n    val homeDir = \"~\".normalizedPath\n\n    var totalBytes = 0L\n    val files = mutableMapOf<String, FileDetails>()\n    val overallHash = createHash(algorithm)\n    for (name in fileNames) {\n        val statSync = stat(name).unsafeCast<Stats>()\n        if (statSync.isDirectory()) {\n            continue\n        }\n        val fileSize = statSync.size.toLong()\n        totalBytes += fileSize\n        val key = when {\n            name.startsWith(githubWorkspace) ->\n                \"ws://\" + name.substring(githubWorkspace.length)\n            name.startsWith(homeDir) ->\n                \"~\" + name.substring(homeDir.length)\n            else -> name\n        }.replace('\\\\', '/')\n        // Avoid hashing the contents when we know the hash from the file path\n        val digest = when {\n            algorithm == \"sha1\" && key.startsWith(\"~/.gradle/caches/modules-2/files-2.1/\") ->\n                sha1FromModulesFileName(key)\n            key.startsWith(\"~/.gradle/caches/build-cache-1/\") ->\n                key.substringAfterLast('/')\n            else -> {\n                val hash = createHash(algorithm)\n                try {\n                    createReadStream(name).pipeAndWait(hash.unsafeCast<WritableStream>(), end = true)\n                } catch (e: Throwable) {\n                    warning(\"Unable to hash $name, will ignore the file: ${e.stackTraceToString()}\")\n                    continue\n                }\n                hash.digest(BinaryToTextEncoding.hex)\n            }\n        }\n        files[key] = FileDetails(fileSize, digest)\n        // Add filename\n        if (includeFileName) {\n            overallHash.update(key)\n        }\n        overallHash.update(digest)\n    }\n    HashDetails(\n        HashInfo(totalBytes, overallHash.digest(BinaryToTextEncoding.hex), files.size),\n        HashContents(files),\n    )\n} catch (e: Throwable) {\n    throw ActionFailedException(\"Unable to hash ${paths.joinToString(\", \")}: $e\", e)\n}\n",null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.hashing\n\nimport com.github.burrunan.formatBytes\n\nclass Diff(\n    val newFiles: Int,\n    val totalUpdated: Long,\n    val totalDeleted: Long,\n    val messages: List<String>,\n    val updatedFiles: List<String>,\n    val deletedFiles: List<String>,\n) {\n    val summary: String\n        get() =\n            (if (updatedFiles.isNotEmpty()) \"${updatedFiles.size} updates (${totalUpdated.formatBytes()})\" else \"\") +\n                (if (deletedFiles.isNotEmpty()) (if (updatedFiles.isNotEmpty()) \", \" else \"\") +\n                    \"${deletedFiles.size} deletes (${totalDeleted.formatBytes()})\" else \"\") +\n                \"\\n  \" + messages.joinToString(\"\\n  \")\n}\n\nfun diff(\n    oldContents: HashContents,\n    newContents: HashContents,\n    maxUpdatesToPrint: Int = 50,\n): Diff {\n    val messages = mutableListOf<String>()\n    val updatedFiles = mutableListOf<String>()\n    val deletedFiles = mutableListOf<String>()\n    var newFiles = 0\n    var totalUpdated = 0L\n    var totalDeleted = 0L\n    for ((file, hash) in newContents.files) {\n        val oldHash = oldContents.files[file]\n        if (oldHash?.hash == hash.hash) {\n            continue\n        }\n        updatedFiles.add(file)\n        if (messages.size >= maxUpdatesToPrint) {\n            continue\n        }\n        messages.add(\n            if (oldHash == null) {\n                newFiles += 1\n                totalUpdated += hash.fileSize\n                \"N ${hash.fileSize} $file ${hash.hash}\"\n            } else {\n                totalUpdated += hash.fileSize\n                \"U ${hash.fileSize} $file ${oldHash.fileSize} ${oldHash.hash} => ${hash.hash}\"\n            },\n        )\n    }\n    if (oldContents.files.size + newFiles != newContents.files.size) {\n        for ((file, hash) in oldContents.files) {\n            if (file !in newContents.files) {\n                deletedFiles.add(file)\n                totalDeleted += hash.fileSize\n                if (messages.size < maxUpdatesToPrint) {\n                    messages.add(\"D $file $hash\")\n                }\n            }\n        }\n    }\n    return Diff(\n        newFiles = newFiles,\n        totalUpdated = totalUpdated,\n        totalDeleted = totalDeleted,\n        messages = messages,\n        updatedFiles = updatedFiles,\n        deletedFiles = deletedFiles,\n    )\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.hashing\n\nimport actions.core.ActionFailedException\nimport actions.core.warning\nimport com.github.burrunan.wrappers.nodejs.normalizedPath\nimport com.github.burrunan.wrappers.nodejs.pipeAndWait\nimport kotlinx.coroutines.await\nimport node.WritableStream\nimport node.buffer.BufferEncoding\nimport node.crypto.BinaryToTextEncoding\nimport node.crypto.createHash\nimport node.fs.Stats\nimport node.fs.createReadStream\nimport node.fs.stat\nimport node.process.process\n\ndata class HashResult(\n    val hash: String,\n    val numFiles: Int,\n    val totalBytes: Int,\n)\n\nsuspend fun hashFiles(\n    vararg paths: String,\n    algorithm: String = \"sha1\",\n    includeFileName: Boolean = true,\n): HashResult = try {\n    val globber = actions.glob.create(paths.joinToString(\"\\n\"))\n    val fileNames = globber.glob().await()\n    fileNames.sort()\n\n    val githubWorkspace = process.cwd()\n    val homeDir = \"~\".normalizedPath\n    val hash = createHash(algorithm)\n\n    var totalBytes = 0\n    var numFiles = 0\n    for (name in fileNames) {\n        val statSync = stat(name).unsafeCast<Stats>()\n        if (statSync.isDirectory()) {\n            continue\n        }\n        val key = when {\n            name.startsWith(githubWorkspace) ->\n                \"ws://\" + name.substring(githubWorkspace.length)\n            name.startsWith(homeDir) ->\n                \"~\" + name.substring(homeDir.length)\n            else -> name\n        }.replace('\\\\', '/')\n\n        numFiles += 1\n        totalBytes += statSync.size.toInt()\n        // Add filename\n\n        try {\n            createReadStream(name).pipeAndWait(hash.unsafeCast<WritableStream>(), end = false)\n        } catch (e: Throwable) {\n            warning(\"Unable to hash $name, will ignore the file: ${e.stackTraceToString()}\")\n            continue\n        }\n\n        if (includeFileName) {\n            hash.update(key, BufferEncoding.utf8)\n        }\n    }\n    hash.unsafeCast<WritableStream>().end()\n    HashResult(\n        hash = hash.digest(BinaryToTextEncoding.hex),\n        numFiles = numFiles,\n        totalBytes = totalBytes,\n    )\n} catch (e: Throwable) {\n    throw ActionFailedException(\"Unable to hash ${paths.joinToString(\", \")}: $e\", e)\n}\n",null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage javaproperties\n\nprivate val NEWLINE = Regex(\"\\\\s*[\\r\\n]+\\\\s*\")\n\nfun parseString(text: String) = PropertiesFile().apply {\n    for(line in text.split(NEWLINE)) {\n        makeKeys(line)\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan\n\nfun Long.formatBytes() = when {\n    this < 5 * 1024 -> \"${this} B\"\n    this < 5 * 1024 * 1204 -> \"${(this + 512L) / (1024L)} KiB\"\n    this < 5L * 1024 * 1204 * 1024 -> \"${(this + 512L * 1024) / (1024L * 1024)} MiB\"\n    else -> \"${(this + 512L * 1024 * 1024) / (1024L * 1024 * 1024)} GiB\"\n}\n",null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle\n\nimport actions.core.ActionFailedException\nimport actions.core.ActionStage\nimport actions.core.info\nimport actions.exec.exec\nimport com.github.burrunan.gradle.cache.*\nimport com.github.burrunan.gradle.github.suspendingStateVariable\nimport com.github.burrunan.launcher.GradleDistribution\nimport octokit.ActionsTrigger\nimport kotlin.js.Date\nimport kotlin.math.roundToInt\n\nclass GradleCacheAction(\n    val trigger: ActionsTrigger,\n    val params: Parameters,\n    val gradleDistribution: GradleDistribution,\n) {\n    companion object {\n        const val DEFAULT_BRANCH_VAR = \"defaultbranch\"\n    }\n\n    private val treeId = suspendingStateVariable(\"tree_id\") {\n        // Sometimes the output might include a newline, so trim it\n        // See https://github.com/burrunan/gradle-cache-action/issues/63\n        exec(\"git\", \"log\", \"-1\", \"--quiet\", \"--format=%T\", captureOutput = true).stdout.trim()\n    }\n\n    suspend fun execute(stage: ActionStage) {\n        val gradleVersion = gradleDistribution.version\n\n        val caches = mutableListOf<Cache>()\n\n        if (params.generatedGradleJars) {\n            caches.add(gradleGeneratedJarsCache(gradleVersion))\n        }\n\n        if (params.localBuildCache) {\n            caches.add(localBuildCache(params.jobId, trigger, gradleVersion, treeId.get()))\n        }\n\n        if (params.gradleDependenciesCache) {\n            caches.add(gradleDependenciesCache(trigger, params.path, params.gradleDependenciesCacheKey))\n        }\n\n        if (params.mavenDependenciesCache) {\n            caches.add(mavenDependenciesCache(trigger, params.path, params.mavenLocalIgnorePaths))\n        }\n\n        val cache = CompositeCache(\"all-caches\", caches, concurrent = params.concurrent)\n        when (stage) {\n            ActionStage.MAIN -> {\n                val started = Date.now()\n                val restore = cache.restore()\n                val elapsed = Date.now() - started\n                info(\"Cache restore took ${(elapsed / 1000).roundToInt()} seconds\")\n            }\n            ActionStage.POST -> {\n                if (params.readOnly) {\n                    info(\"read-only == true, so will skip cache upload\")\n                } else {\n                    cache.save()\n                }\n            }\n            else -> throw ActionFailedException(\"Cache action should be called in PRE or POST stages only. \" +\n                \"Current stage is $stage\")\n        }\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle\n\ndata class Parameters(\n    val jobId: String,\n    val path: String,\n    val debug: Boolean,\n    val generatedGradleJars: Boolean,\n    val localBuildCache: Boolean,\n    val gradleDependenciesCache: Boolean,\n    val gradleDependenciesCacheKey: List<String>,\n    val mavenDependenciesCache: Boolean,\n    val mavenLocalIgnorePaths: List<String>,\n    val concurrent: Boolean,\n    val readOnly: Boolean,\n)\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.gradle.cache\n\nimport actions.core.ActionsEnvironment\nimport com.github.burrunan.gradle.GradleCacheAction\nimport octokit.ActionsTrigger\n\nval ActionsTrigger.cacheKey: String\n    get() = when (this) {\n        is ActionsTrigger.PullRequest -> \"PR${event.pull_request.number}\"\n        is ActionsTrigger.BranchPush -> when (val ref = event.ref.removePrefix(\"refs/heads/\")) {\n            event.repository.default_branch.removePrefix(\"refs/heads/\") ->\n                GradleCacheAction.DEFAULT_BRANCH_VAR\n            else -> ref\n        }\n        is ActionsTrigger.Schedule, is ActionsTrigger.WorkflowDispatch ->\n            GradleCacheAction.DEFAULT_BRANCH_VAR\n        is ActionsTrigger.Other -> \"$name-${ActionsEnvironment.GITHUB_WORKFLOW}-${ActionsEnvironment.GITHUB_SHA}\"\n    }\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nimport actions.cache.RestoreType\nimport actions.core.ext.group\nimport kotlinx.coroutines.launch\nimport kotlinx.coroutines.supervisorScope\n\nclass CompositeCache(\n    override val name: String,\n    private val caches: List<Cache>,\n    private val concurrent: Boolean,\n) : Cache {\n    override suspend fun save() {\n        if (!concurrent) {\n            for (cache in caches) {\n                group(\"Save ${cache.name}\") {\n                    cache.save()\n                }\n            }\n            return\n        }\n\n        supervisorScope {\n            for (cache in caches) {\n                launch {\n                    cache.save()\n                }\n            }\n        }\n    }\n\n    override suspend fun restore(): RestoreType {\n        if (!concurrent) {\n            for (cache in caches) {\n                group(\"Restore ${cache.name}\") {\n                    cache.restore()\n                }\n            }\n            return RestoreType.Unknown\n        }\n\n        supervisorScope {\n            for (cache in caches) {\n                launch {\n                    cache.restore()\n                }\n            }\n        }\n        return RestoreType.Unknown\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nimport actions.cache.RestoreType\nimport actions.cache.restoreAndLog\nimport actions.cache.saveAndLog\nimport actions.core.debug\nimport actions.core.info\nimport actions.glob.removeFiles\nimport com.github.burrunan.formatBytes\nimport com.github.burrunan.gradle.github.stateVariable\nimport com.github.burrunan.gradle.github.toBoolean\nimport com.github.burrunan.gradle.github.toInt\nimport com.github.burrunan.hashing.HashContents\nimport com.github.burrunan.hashing.HashDetails\nimport com.github.burrunan.hashing.HashInfo\nimport com.github.burrunan.hashing.hashFilesDetailed\nimport com.github.burrunan.wrappers.nodejs.exists\nimport kotlin.math.absoluteValue\n\nclass DefaultCache(\n    name: String,\n    val primaryKey: String,\n    private val restoreKeys: List<String> = listOf(),\n    private val paths: List<String>,\n    private val readOnlyMessage: String? = null,\n    stateKey: String = \"\",\n    private val skipRestoreIfPathExists: String? = null\n) : Cache {\n    @Suppress(\"CanBePrimaryConstructorProperty\")\n    override val name: String = name\n\n    private val version = \"1-\"\n\n    private val cacheInfo =\n        MetadataFile(\"$name-info\", HashInfo.serializer())\n    private val cacheContents =\n        MetadataFile(\"$name-contents\", HashContents.serializer())\n    private val saveRestorePaths = paths + cacheInfo.cachedName + cacheContents.cachedName\n\n    private val isExactMatch = stateVariable(\"${name}_${stateKey}_exact\").toBoolean()\n    private val isSkipped = stateVariable(\"${name}_${stateKey}_skip\").toBoolean()\n    private val restoredKeyIndex = stateVariable(\"${name}_${stateKey}_key\").toInt(-1)\n\n    private val restoredKey: String?\n        get() = when {\n            isExactMatch.get() -> primaryKey\n            restoredKeyIndex.get() >= 0 -> restoreKeys[restoredKeyIndex.get()]\n            else -> null\n        }\n\n    private var details: HashDetails? = null\n\n    suspend fun info(): HashInfo? {\n        details?.info?.let { return it }\n        restoredKey?.let { cacheContents.prepare(it) }\n        if (!isExactMatch.get() && restoredKeyIndex.get() == -1) {\n            // Cache was not restored => no information known\n            return null\n        }\n        return cacheInfo.decode()\n    }\n\n    suspend fun contents(): HashContents? {\n        details?.contents?.let { return it }\n        restoredKey?.let { cacheContents.prepare(it) }\n        if (!isExactMatch.get() && restoredKeyIndex.get() == -1) {\n            // Cache was not restored => no information known\n            return null\n        }\n        return cacheContents.decode()\n    }\n\n    override suspend fun restore(): RestoreType {\n        skipRestoreIfPathExists?.let {\n            if (exists(it)) {\n                debug { \"$name: $it already exists, so the cache restore and upload will be skipped\" }\n                isSkipped.set(true)\n            }\n        }\n        debug { \"$name: restoring $primaryKey, $restoreKeys, $saveRestorePaths\" }\n        return restoreAndLog(saveRestorePaths, primaryKey, restoreKeys, version = version).also {\n            isExactMatch.set(it is RestoreType.Exact)\n            restoredKeyIndex.set(\n                when (it) {\n                    is RestoreType.Partial -> restoreKeys.indexOfFirst { key -> it.path.startsWith(key) }\n                    else -> -1\n                },\n            )\n            debug { \"$name: restore type $it, ${isExactMatch.get()}, ${restoredKeyIndex.get()}\" }\n\n            restoredKey?.let { key ->\n                cacheInfo.restore(key)\n                cacheContents.restore(key)\n            }\n        }\n    }\n\n    override suspend fun save() {\n        debug { \"$name: saving ${isExactMatch.get()} ${restoredKeyIndex.get()} $primaryKey, $restoreKeys, $saveRestorePaths\" }\n        if (isSkipped.get()) {\n            debug { \"$name: cache save skipped\" }\n            return\n        }\n        if (isExactMatch.get()) {\n            info(\"$name loaded from exact match, no need to update the cache entry\")\n            return\n        }\n        readOnlyMessage?.let {\n            info(\"$name is configured as read-only: $it\")\n            return\n        }\n\n        restoredKey?.let { key ->\n            cacheInfo.prepare(key)\n            cacheContents.prepare(key)\n        }\n\n        val oldHash = info()\n\n        val newHash = hashFilesDetailed(*paths.toTypedArray())\n        details = newHash\n\n        if (newHash.contents.files.isEmpty()) {\n            info(\"$name: no files to cache => won't upload empty cache\")\n            return\n        }\n        if (oldHash != null) {\n            info(\"$name: comparing modifications of the cache contents\")\n            if (newHash.info.hash == oldHash.hash) {\n                info(\"$name: contents did not change => no need to upload it\")\n                return\n            }\n            val delta = newHash.info.totalBytes - oldHash.totalBytes\n            info(\"$name: hash content differs (${delta.absoluteValue} bytes ${if (delta >= 0) \"increase\" else \"decrease\"})\")\n        }\n        info(\"$name: uploading ${newHash.info.totalBytes.formatBytes()}, ${newHash.contents.files.size} files as $primaryKey\")\n        cacheInfo.encode(newHash.info)\n        cacheContents.encode(newHash.contents)\n        saveAndLog(saveRestorePaths, primaryKey, version = version)\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nfun gradleGeneratedJarsCache(gradleVersion: String): Cache =\n    DefaultCache(\n        name = \"gradle-generated-jars\",\n        primaryKey = \"generated-gradle-jars-gradle-$gradleVersion\",\n        paths = listOf(\n            \"~/.gradle/caches/$gradleVersion/generated-gradle-jars/*\",\n            \"!~/.gradle/caches/$gradleVersion/generated-gradle-jars/*.lock\",\n        ),\n        skipRestoreIfPathExists = \"~/.gradle/caches/$gradleVersion/generated-gradle-jars\",\n    )\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nimport actions.cache.RestoreType\nimport actions.core.ActionFailedException\nimport actions.core.debug\nimport actions.core.info\nimport actions.core.warning\nimport actions.glob.removeFiles\nimport com.github.burrunan.formatBytes\nimport com.github.burrunan.gradle.github.stateVariable\nimport com.github.burrunan.gradle.github.toBoolean\nimport com.github.burrunan.hashing.*\nimport kotlinx.serialization.Serializable\n\n@Serializable\nclass CacheLayers(\n    val layers: List<CacheLayer>,\n    val deletedFiles: List<String>,\n)\n\n@Serializable\nclass CacheLayer(\n    // format is $version-...\n    val primaryKey: String,\n    val paths: List<String>,\n)\n\nclass LayeredCache(\n    override val name: String,\n    private val baseline: String,\n    val maxLayers: Int = 5,\n    private val primaryKey: String,\n    private val restoreKeys: List<String> = listOf(),\n    private val paths: List<String>,\n) : Cache {\n    private val version = \"1\"\n\n    private val layers = MetadataFile(\"layer-$name\", CacheLayers.serializer())\n\n    private val isExactMatch = stateVariable(\"${name}_exact\").toBoolean()\n\n    private val index = DefaultCache(\n        name = \"$version-index-$name\",\n        primaryKey = \"$version-index-$primaryKey\",\n        restoreKeys = restoreKeys.map { \"$version-index-$it\" },\n        paths = listOf(layers.cachedName),\n    )\n\n    override fun toString(): String =\n        \"Cache $name, primaryKey=$primaryKey, restoreKeys=$restoreKeys, \"\n\n    private fun CacheLayer.toCache(stateKey: String) =\n        DefaultCache(\n            name = name,\n            stateKey = stateKey,\n            primaryKey = primaryKey,\n            restoreKeys = if (paths.isNotEmpty()) listOf() else restoreKeys.map { \"$version-$it\" },\n            paths = this@toCache.paths.ifEmpty { this@LayeredCache.paths },\n        )\n\n    private fun Diff.toLayer(): CacheLayer {\n        // @actions/cache treats \"paths\" as a part of the cache key, so \"delta-\" is not important here for correctness\n        // delta- is here for readability\n        return CacheLayer(\n            primaryKey = \"$version-delta-$primaryKey\",\n            paths = updatedFiles,\n        )\n    }\n\n    override suspend fun restore(): RestoreType {\n        val indexRestoreType = index.restore()\n        if (indexRestoreType == RestoreType.None) {\n            return RestoreType.None\n        }\n        val cacheIndex = layers.decode() ?: run {\n            warning(\"Unable to restore cache $this\")\n            return RestoreType.Unknown\n        }\n\n        var restoreType: RestoreType = when (indexRestoreType) {\n            is RestoreType.Exact -> RestoreType.Exact(indexRestoreType.path.removePrefix(\"$version-index-\"))\n            is RestoreType.Partial -> RestoreType.Partial(indexRestoreType.path.removePrefix(\"$version-index-\"))\n            else -> indexRestoreType\n        }\n\n        info(\n            cacheIndex.layers.joinToString(\", \", \"$name: ${cacheIndex.layers.size} layers. \") {\n                if (it.paths.isEmpty()) it.primaryKey else \"${it.primaryKey} (${it.paths.size} files)\"\n            },\n        )\n\n        // Restore layers one by one, so newer layers can overwrite the old files\n        for ((index, layer) in cacheIndex.layers.withIndex()) {\n            val cache = layer.toCache(index.toString())\n            val restore = cache.restore()\n            if (restore !is RestoreType.Exact) {\n                restoreType = RestoreType.Unknown\n            }\n            debug { \"$name: layer $index, restore=$restore\" }\n        }\n        removeFiles(cacheIndex.deletedFiles)\n        isExactMatch.set(restoreType is RestoreType.Exact)\n        return restoreType\n    }\n\n    override suspend fun save() {\n        if (isExactMatch.get()) {\n            info(\"$name loaded from exact match, no need to update the cache entry\")\n            return\n        }\n\n        val cacheIndex = layers.decode(warnOnMissing = false)\n        val isBaseline = primaryKey.startsWith(baseline)\n        if (cacheIndex == null) {\n            if (!isBaseline) {\n                info(\"$name: old contents is not found, and the current cache $primaryKey does not start with $baseline, so cache saving can't be done\")\n                return\n            }\n            saveSingleLayerCache()\n            return\n        }\n\n        // PR: keep all baseline layers, add one new for PR\n        // branch:\n\n        val caches = cacheIndex.layers\n            .mapIndexed { index, cacheLayer -> cacheLayer.toCache(index.toString()) }\n        val oldContents = caches.associateWith { it.contents() }\n\n        if (isBaseline) {\n            val missing = oldContents.mapNotNull { (cache, contents) ->\n                if (contents == null) cache.primaryKey else null\n            }\n\n            if (missing.isNotEmpty()) {\n                info(\"$name: there are missing layers: $missing\")\n                saveSingleLayerCache()\n                return\n            }\n            if (cacheIndex.layers.size > maxLayers) {\n                info(\"$name: ${cacheIndex.layers.size} layers reached, will create new snapshot\")\n                saveSingleLayerCache()\n                return\n            }\n        }\n\n        // non-baseline\n\n        if (!isBaseline) {\n            val firstLayer = cacheIndex.layers.firstOrNull()\n            val firstBaseline = caches.firstOrNull { it.name.startsWith(baseline) }?.name\n            if (firstLayer?.primaryKey?.startsWith(\"$version-$baseline\") != true) {\n                info(\"$name: the first baseline is not found, and the current cache $primaryKey does not start with $version-$baseline, so cache saving can't be done\")\n                return\n            }\n            if (oldContents.values.firstOrNull() == null) {\n                info(\"$name: the first baseline $firstBaseline was not received, and the current cache $primaryKey does not start with $baseline, so cache saving can't be done\")\n                return\n            }\n        }\n\n        val newContents = hashFilesDetailed(*paths.toTypedArray())\n\n        val oldFiles = mutableMapOf<String, FileDetails>()\n        val reusedFiles = mutableMapOf<String, FileDetails>()\n        val deletedFiles = mutableSetOf<String>()\n        val newLayers = mutableListOf<CacheLayer>()\n        val layerInfo = mutableListOf<String>()\n        for ((layer, contents) in cacheIndex.layers.zip(oldContents.values)) {\n            if (contents == null) {\n                info(\"$name: unknown contents for layer ${layer.primaryKey}\")\n                continue\n            }\n            var helpfulBytes = 0L\n            var wastedBytes = 0L\n            val helpfulLayerFiles = mutableMapOf<String, FileDetails>()\n            val deletedLayerFiles = mutableListOf<String>()\n            for ((file, details) in contents.files) {\n                val newDetails = newContents.contents.files[file]\n                if (details.hash == newDetails?.hash && file !in reusedFiles) {\n                    // same file => previous layer is helpful\n                    helpfulBytes += details.fileSize\n                    helpfulLayerFiles[file] = details\n                } else {\n                    // file is different or removed => previous layer is not useful\n                    if (newDetails == null) {\n                        deletedLayerFiles.add(file)\n                    }\n                    wastedBytes += details.fileSize\n                }\n            }\n            if (wastedBytes >= helpfulBytes) {\n                // Too much waste => remove the layer\n                info(\"$name: layer ${layer.primaryKey} has too much waste (${wastedBytes.formatBytes()} > ${helpfulBytes.formatBytes()}), so the layer will be skipped\")\n                continue\n            }\n            oldFiles += contents.files\n            reusedFiles += helpfulLayerFiles\n            deletedFiles += deletedLayerFiles\n            newLayers += layer\n            layerInfo += \"${layer.primaryKey} ${(helpfulBytes + wastedBytes).formatBytes()} total (${contents.files.size} files), ${wastedBytes.formatBytes()} outdated\"\n        }\n\n        if (!isBaseline && newLayers.isEmpty()) {\n            info(\"$name: at least one layer from the default branch is needed. The new contents is ${newContents.info.totalBytes.formatBytes()} (${newContents.info.totalFiles} files)\")\n            return\n        }\n\n        val diff = diff(HashContents(oldFiles), newContents.contents)\n        if (diff.messages.isNotEmpty()) {\n            info(\"$name: cache contents is changed: ${diff.summary}\")\n        }\n\n        val layer = diff.toLayer()\n        val cache = layer.toCache(\"newlayer\")\n        // TODO: reuse HashDetails when saving cache\n        cache.save()\n\n        newLayers += layer\n        layerInfo += \"${layer.primaryKey} ${diff.totalUpdated.formatBytes()} total (${diff.updatedFiles.size} files), ${diff.totalDeleted.formatBytes()} deleted (${diff.deletedFiles.size} files)\"\n\n        info(layerInfo.joinToString(\"; \", \"$name: ${newLayers.size} layers. \"))\n\n        layers.encode(CacheLayers(newLayers, deletedFiles = deletedFiles.toList()))\n        // Save the index\n        index.save()\n    }\n\n    private suspend fun saveSingleLayerCache() {\n        info(\"$name: creating single-layer cache image\")\n        val layer = CacheLayer(\n            primaryKey = \"$version-$primaryKey\",\n            paths = listOf(),\n        )\n        val cache = layer.toCache(\"single-layer\")\n        cache.save()\n        if (cache.info()?.totalFiles == 0) {\n            // cache is empty => skip creating empty file\n            return\n        }\n        layers.encode(CacheLayers(listOf(layer), deletedFiles = listOf()))\n        index.save()\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nimport actions.core.warning\nimport com.github.burrunan.wrappers.nodejs.exists\nimport com.github.burrunan.wrappers.nodejs.normalizedPath\nimport kotlinx.serialization.KSerializer\nimport kotlinx.serialization.SerializationException\nimport kotlinx.serialization.json.Json\nimport node.buffer.BufferEncoding\nimport node.fs.*\n\nclass MetadataFile<T>(name: String, private val serializer: KSerializer<T>, private val extension: String = \".json\") {\n    companion object {\n        const val ROOT_FOLDER = \"~/.gradle-cache-action\"\n        val SPECIAL_CHARS = Regex(\"\"\"[!@#$%^&*:;'\"{}\\r\\n\\[\\]\\\\]\"\"\")\n\n        init {\n            val path = ROOT_FOLDER.normalizedPath\n            if (!existsSync(path)) {\n                try {\n                    mkdirSync(path)\n                } catch (ignored: Throwable) {\n                }\n            }\n        }\n    }\n\n    val cachedName = \"$ROOT_FOLDER/$name$extension\"\n    private var uniqueName = cachedName.normalizedPath\n\n    fun prepare(key: String) {\n        uniqueName = \"${cachedName.normalizedPath}.${key.replace('/', '-')}\"\n    }\n\n    suspend fun restore(key: String) {\n        val path = cachedName.normalizedPath\n        if (exists(path)) {\n            prepare(key)\n            rename(path, uniqueName)\n        } else {\n            warning(\"$cachedName: $path does not exist\")\n        }\n    }\n\n    suspend fun decode(warnOnMissing: Boolean = true): T? {\n        if (!exists(uniqueName)) {\n            if (warnOnMissing) {\n                warning(\"$cachedName: $uniqueName does not exist\")\n            }\n            return null\n        }\n        return try {\n            Json.decodeFromString(\n                serializer,\n                readFile(uniqueName, BufferEncoding.utf8)\n            )\n        } catch (e: SerializationException) {\n            warning(\"$cachedName: error deserializing $uniqueName with ${serializer.descriptor.serialName}, message: $e\")\n            return null\n        }\n    }\n\n    suspend fun encode(value: T) {\n        writeFile(\n            cachedName.normalizedPath,\n            Json.encodeToString(serializer, value),\n            BufferEncoding.utf8,\n        )\n    }\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.gradle.cache\n\nimport actions.core.ActionsEnvironment\nimport actions.core.debug\nimport com.github.burrunan.gradle.GradleCacheAction\nimport com.github.burrunan.gradle.github.suspendingStateVariable\nimport com.github.burrunan.hashing.hashFiles\nimport octokit.ActionsTrigger\n\n/**\n * Populate cache only when building a default branch, otherwise treat the cache as read-only.\n */\nsuspend fun dependenciesCache(\n    name: String,\n    trigger: ActionsTrigger,\n    cacheLocation: List<String>,\n    pathDependencies: List<String>,\n): Cache {\n    val defaultBranch = GradleCacheAction.DEFAULT_BRANCH_VAR\n    val pkPrefix = trigger.cacheKey\n    val cacheName = \"dependencies-$name\"\n\n    // Avoid re-computing the hash for saving the cache\n    val dependencyDeclarationHash = suspendingStateVariable(cacheName) {\n        hashFiles(*pathDependencies.toTypedArray()).hash\n    }\n    debug { \"$cacheName: dependencyDeclarationHash=${dependencyDeclarationHash.get()}\" }\n    val prefix = \"dependencies-$name-${ActionsEnvironment.RUNNER_OS}\"\n    return LayeredCache(\n        name = cacheName,\n        baseline = prefix,\n        primaryKey = \"$prefix-$pkPrefix-${dependencyDeclarationHash.get()}\",\n        restoreKeys = listOf(\n            \"$prefix-$pkPrefix\",\n            \"$prefix-$defaultBranch\",\n            \"$prefix-master\",\n            \"$prefix-main\",\n        ),\n        paths = cacheLocation,\n    )\n}\n\nsuspend fun gradleDependenciesCache(trigger: ActionsTrigger, path: String, gradleDependenciesCacheKey: List<String>): Cache =\n    dependenciesCache(\n        \"gradle\",\n        trigger,\n        cacheLocation = listOf(\n            \"~/.gradle/caches/modules-2/*\",\n            \"!~/.gradle/caches/modules-2/gc.properties\",\n            \"!~/.gradle/caches/modules-2/modules-2.lock\",\n        ),\n        pathDependencies = listOf(\n            \"$path/**/*.gradle\",\n            \"$path/**/*.gradle.kts\",\n            \"$path/**/gradle/dependency-locking/**\",\n            \"$path/**/*.properties\",\n            \"$path/**/gradle/libs.versions.toml\",\n        ) + gradleDependenciesCacheKey.map {\n                (if (it.startsWith(\"!\")) \"!\" else \"\") +\n                    \"$path/**/\" + it.trim().trimStart('!')\n            } +\n            // Excludes must go the last so they win\n            listOf(\"!$path/**/.gradle/\"),\n    )\n\nsuspend fun mavenDependenciesCache(trigger: ActionsTrigger, path: String, mavenLocalIgnorePaths: List<String>): Cache =\n    dependenciesCache(\n        \"maven\",\n        trigger,\n        cacheLocation = listOf(\"~/.m2/repository\") +\n            mavenLocalIgnorePaths.map { \"!~/.m2/repository/$it\" },\n        pathDependencies = listOf(\n            \"$path/**/pom.xml\",\n        ),\n    )\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.cache\n\nimport com.github.burrunan.gradle.GradleCacheAction\nimport octokit.ActionsTrigger\n\nfun localBuildCache(jobId: String, trigger: ActionsTrigger, gradleVersion: String, treeId: String): Cache {\n    val buildCacheLocation = \"~/.gradle/caches/build-cache-1\"\n    val defaultBranch = GradleCacheAction.DEFAULT_BRANCH_VAR\n    val pkPrefix = trigger.cacheKey\n\n    val restoreKeys = when (trigger) {\n        is ActionsTrigger.PullRequest -> arrayOf(\n            pkPrefix,\n            trigger.event.pull_request.base.ref.removePrefix(\"refs/heads/\"),\n        )\n        is ActionsTrigger.BranchPush -> arrayOf(\n            pkPrefix,\n        )\n        else -> arrayOf()\n    } + arrayOf(\n        defaultBranch,\n        \"master\",\n        \"main\",\n    )\n    val prefix = \"gradle-build-cache-$jobId-gradle-$gradleVersion\"\n    return LayeredCache(\n        name = \"local-build-cache\",\n        baseline = \"$prefix-$defaultBranch\",\n        primaryKey = \"$prefix-$pkPrefix-$treeId\",\n        restoreKeys = restoreKeys.map { \"$prefix-$it\" },\n        paths = listOf(\n            \"$buildCacheLocation/*\",\n            \"!$buildCacheLocation/gc.properties\",\n            \"!$buildCacheLocation/build-cache-1.lock\",\n        ),\n    )\n}\n",null,"/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.gradle.github\n\nimport actions.core.getState\nimport actions.core.saveState\n\ninterface MutableStateVariable<T : Any> {\n    fun set(value: T)\n}\n\nopen class BaseStateVariable<T : Any>(protected val name: String) : MutableStateVariable<T> {\n    protected var value: T? = null\n\n    override fun set(value: T) {\n        this.value = value\n        saveState(name, value)\n    }\n}\n\ninterface SuspendingStateVariable<T : Any> : MutableStateVariable<T> {\n    suspend fun get(): T\n}\n\nclass DefaultSuspendingStateVariable(name: String, val default: suspend () -> String) :\n    BaseStateVariable<String>(name), SuspendingStateVariable<String> {\n    override suspend fun get(): String =\n        value ?: getState(name).ifBlank { default() }.also { set(it) }\n}\n\ninterface StateVariable<T : Any> : MutableStateVariable<T> {\n    fun get(): T\n}\n\nclass DefaultStateVariable(name: String, private val default: () -> String) :\n    BaseStateVariable<String>(name), StateVariable<String> {\n    override fun get(): String =\n        value ?: getState(name).ifBlank { default() }.also { set(it) }\n}\n\nfun suspendingStateVariable(name: String, default: suspend () -> String): SuspendingStateVariable<String> =\n    DefaultSuspendingStateVariable(name, default)\n\nfun stateVariable(name: String, default: () -> String = { \"\" }): StateVariable<String> =\n    DefaultStateVariable(name, default)\n\nfun <T : Any, R : Any> StateVariable<T>.transform(decode: (T) -> R, encode: (R) -> T) = object : StateVariable<R> {\n    override fun get(): R = decode(this@transform.get())\n\n    override fun set(value: R) {\n        this@transform.set(encode(value))\n    }\n}\n\nfun StateVariable<String>.toBoolean() = transform({ it == \"Y\" }, { if (it) \"Y\" else \"N\" })\nfun StateVariable<String>.toInt(default: Int) = transform({ if (it.isBlank()) default else it.toInt() }, { it.toString() })\nfun StateVariable<String>.toLong(default: Long) = transform({ if (it.isBlank()) default else it.toLong() }, { it.toString() })\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.github.burrunan.wrappers.nodejs\n\nimport js.core.jso\nimport node.fs.MakeDirectoryOptions\nimport node.fs.existsSync\nimport node.fs.mkdir\n\nsuspend fun mkdir(path: String) {\n    if (!exists(path)) {\n        mkdir(path, jso<MakeDirectoryOptions> { recursive = true })\n    }\n}\n\n@Deprecated(message = \"catch errors instead\", level = DeprecationLevel.WARNING)\nfun exists(path: String) =\n    existsSync(path.normalizedPath)\n\nval String.normalizedPath: String\n    get() = when {\n        startsWith(\"~\") -> node.os.homedir() + substring(1)\n        else -> this\n    }\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.github.burrunan.wrappers.nodejs\n\nimport js.core.jso\nimport node.ReadableStream\nimport node.WritableStream\nimport node.buffer.Buffer\nimport node.buffer.BufferEncoding\nimport node.events.Event\nimport node.stream.finished\n\nsuspend fun <T> ReadableStream.readJson(): T = JSON.parse(readToBuffer().toString(BufferEncoding.utf8))\n\nsuspend fun ReadableStream.readToBuffer(): Buffer {\n    val data = mutableListOf<Buffer>()\n    on(Event.DATA) { chunk: Any ->\n        data += chunk as Buffer\n    }\n    finished(this)\n    return Buffer.concat(data.toTypedArray())\n}\n\nsuspend fun <T : ReadableStream, D: WritableStream> T.pipeAndWait(destination: D, end : Boolean = false) {\n    pipe(destination = destination, options = jso { this.end = end })\n    finished(this)\n}\n","/*\n * Copyright 2020 Vladimir Sitnikov <sitnikov.vladimir@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage octokit\n\nimport actions.core.ActionsEnvironment\nimport node.buffer.BufferEncoding\nimport node.fs.readFile\nimport octokit.webhooks.WebhookPayloadPullRequest\nimport octokit.webhooks.WebhookPayloadPush\nimport octokit.webhooks.WebhookPayloadWorkflowDispatch\n\nsealed class ActionsTrigger(val name: String, open val event: Any) {\n    class PullRequest(override val event: WebhookPayloadPullRequest) : ActionsTrigger(\"pull_request\", event)\n    class BranchPush(override val event: WebhookPayloadPush) : ActionsTrigger(\"push\", event)\n    class WorkflowDispatch(override val event: WebhookPayloadWorkflowDispatch) : ActionsTrigger(\"workflow_dispatch\", event)\n    class Schedule(name: String, event: Any) : ActionsTrigger(name, event)\n    class Other(name: String, event: Any) : ActionsTrigger(name, event)\n}\n\nsuspend fun currentTrigger(): ActionsTrigger {\n    val eventString = readFile(ActionsEnvironment.GITHUB_EVENT_PATH, BufferEncoding.utf8)\n    val event = JSON.parse<Any>(eventString)\n    @Suppress(\"UNCHECKED_CAST_TO_EXTERNAL_INTERFACE\")\n    return when (val eventName = ActionsEnvironment.GITHUB_EVENT_NAME) {\n        \"pull_request\" -> ActionsTrigger.PullRequest(event as WebhookPayloadPullRequest)\n        \"push\" -> ActionsTrigger.BranchPush(event as WebhookPayloadPush)\n        \"workflow_dispatch\" -> ActionsTrigger.WorkflowDispatch(event as WebhookPayloadWorkflowDispatch)\n        \"schedule\" -> ActionsTrigger.Schedule(eventName, event)\n        else -> ActionsTrigger.Other(eventName, event)\n    }\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"node:crypto\");","module.exports = require(\"node:fs\");","module.exports = require(\"node:fs/promises\");","module.exports = require(\"node:http\");","module.exports = require(\"node:os\");","module.exports = require(\"node:path\");","module.exports = require(\"node:process\");","module.exports = require(\"node:stream/promises\");","module.exports = require(\"node:url\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"punycode\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","module.exports = require(\"timers\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6116);\n"],"names":["root","factory","exports","module","define","amd","this","v1","v4","uuid","byteToHex","i","toString","substr","buf","offset","bth","join","crypto","randomBytes","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","options","b","node","clockseq","undefined","seedBytes","msecs","Date","getTime","nsecs","dt","Error","tl","tmh","n","Array","rnds","random","ii","AbortError","constructor","message","super","name","AbortController","parentSignals","_signal","isArray","arguments","parentSignal","aborted","abort","addEventListener","signal","static","ms","timer","setTimeout","unref","listenersMap","WeakMap","abortedMap","AbortSignal","onabort","set","has","TypeError","get","none","_type","listener","push","removeEventListener","listeners","index","indexOf","splice","dispatchEvent","_event","abortSignal","call","slice","forEach","type","CombinedStream","util","path","http","https","parseUrl","fs","Stream","mime","asynckit","populate","FormData","option","_overheadLength","_valueLength","_valuesToMeasure","inherits","LINE_BREAK","DEFAULT_CONTENT_TYPE","prototype","append","field","value","filename","bind","_error","header","_multiPartHeader","footer","_multiPartFooter","_trackLength","valueLength","knownLength","Buffer","isBuffer","length","byteLength","readable","hasOwnProperty","_lengthRetriever","callback","end","Infinity","start","stat","err","fileSize","size","headers","on","response","pause","resume","contentDisposition","_getContentDisposition","contentType","_getContentType","contents","concat","prop","getBoundary","filepath","normalize","replace","basename","client","_httpMessage","lookup","next","_streams","_lastBoundary","getHeaders","userHeaders","formHeaders","toLowerCase","setBoundary","boundary","_boundary","_generateBoundary","getBuffer","dataBuffer","alloc","len","from","substring","Math","floor","getLengthSync","hasKnownLength","getLength","cb","parallel","values","process","nextTick","submit","params","request","defaults","method","port","pathname","host","hostname","protocol","setHeader","pipe","onResponse","error","responce","removeListener","emit","dst","src","Object","keys","punycode","urlParse","pubsuffix","Store","MemoryCookieStore","pathMatch","validators","VERSION","COOKIE_OCTETS","CONTROL_CHARS","TERMINATORS","PATH_VALUE","DATE_DELIM","MONTH_TO_NUM","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","MAX_TIME","SAME_SITE_CONTEXT_VAL_ERR","checkSameSiteContext","validate","isNonEmptyString","context","String","PrefixSecurityEnum","freeze","SILENT","STRICT","DISABLED","IP_REGEX_LOWERCASE","IP_V6_REGEX","trim","IP_V6_REGEX_OBJECT","RegExp","parseDigits","token","minDigits","maxDigits","trailingOK","count","c","charCodeAt","parseInt","parseTime","parts","split","result","num","parseMonth","parseDate","str","tokens","hour","minute","second","dayOfMonth","month","year","UTC","formatDate","date","isDate","toUTCString","canonicalDomain","test","toASCII","domainMatch","domStr","canonicalize","idx","lastIndexOf","defaultPath","rightSlash","parseCookiePair","cookiePair","looseMode","isEmptyString","t","terminatorIdx","trimTerminator","isString","cookieName","cookieValue","firstEq","Cookie","key","parse","firstSemi","loose","unparsed","cookie_avs","av","shift","av_sep","av_key","av_value","exp","expires","delta","setMaxAge","domain","secure","httpOnly","sameSite","extensions","jsonParse","obj","JSON","e","fromJSON","serializableProperties","cookieDefaults","cookieCompare","a","isObject","cmp","aPathLen","creation","creationIndex","getCookieContext","url","decodeURI","maxAge","hostOnly","pathIsDefault","lastAccessed","customInspectSymbol","getCustomInspectSymbol","inspect","assign","defineProperty","configurable","enumerable","writable","cookiesCreated","now","createAge","accessAge","toJSON","toISOString","clone","cdomain","match","getPublicSuffix","setExpires","age","cookieString","val","ssCanon","sameSiteCanonical","ext","TTL","expiryTime","relativeTo","expiryDate","millisec","isPersistent","canonicalizedDomain","getNormalizedPrefixSecurity","prefixSecurity","normalizedPrefixSecurity","sameSiteLevel","strict","lax","CookieJar","store","rejectPublicSuffixes","enableLooseMode","allowSpecialUseDomain","_cloneSync","syncWrap","_importCookiesSync","getCookiesSync","getCookieStringSync","getSetCookieStringsSync","removeAllCookiesSync","setCookieSync","serializeSync","setCookie","cookie","isFunction","sameSiteContext","ignoreError","ignoreErrorForPrefixSecurity","errorMsg","errorFound","startsWith","isSecurePrefixConditionMet","isHostPrefixConditionMet","updateCookie","oldCookie","newCookie","putCookie","findCookie","getCookies","expireCheck","expire","allPaths","matchingCookie","removeCookie","findCookies","cookies","filter","sort","getCookieString","args","pop","map","apply","getSetCookieStrings","serialize","serialized","version","storeType","getAllCookies","_importCookies","putNext","newStore","deserialize","cloneSync","synchronous","removeAllCookies","completedCount","removeErrors","removeCookieCb","removeErr","strOrObj","jar","syncErr","syncResult","deserializeSync","fromCallback","ParameterError","permuteDomain","getUtilInspect","inspectFallback","results","pathMatcher","domainIndex","cookiePath","pathIndex","curPath","domains","curDomain","removeCookies","domainName","domainValue","indent","paths","pathName","pathValue","cookieNames","formatPath","formatDomain","reqPath","p","pubSuf","reverse","cur","permutations","psl","SPECIAL_USE_DOMAINS","SPECIAL_TREATMENT_DOMAINS","domainParts","topLevelDomain","includes","requireUtil","lookupCustomInspectSymbol","Symbol","for","fallback","showHidden","depth","custom","tryReadingCustomSymbolFromUtilInspect","data","isInstanceStrict","isInteger","bool","XML_ATTRKEY","XML_CHARKEY","validUuidRegex","versions","generateUuid","validateISODuration","replaceAll","searchValue","replaceValue","getEnvironmentValue","env","URLQuery","_rawQuery","any","parameterName","parameterValue","caseParameterValue","newValue","parameterStrings","parameterValueElement","text","currentState","currentCharacter","URLBuilder","setScheme","scheme","_scheme","getScheme","setHost","_host","getHost","setPort","_port","getPort","setPath","schemeIndex","schemeStart","_path","appendPath","currentPath","getPath","endsWith","setQuery","query","_query","setQueryParameter","queryParameterName","queryParameterValue","getQueryParameterValue","getQuery","startState","tokenizer","URLTokenizer","current","tokenPath","URLToken","_text","state","_textLength","_currentState","_currentIndex","_currentToken","hasCurrentCharacter","readWhile","character","characterCode","isAlphaNumericCharacter","readWhileLetterOrDigit","nextScheme","schemeOrHost","readUntilCharacter","getCurrentCharacter","peekCharacters","nextSchemeOrHost","nextCharacter","nextHost","nextPort","nextPath","readRemaining","nextQuery","step","charactersToPeek","endIndex","condition","terminatingCharacters","defaultAllowedHeaderNames","defaultAllowedQueryParameters","Sanitizer","allowedHeaderNames","allowedQueryParameters","Set","sanitize","seen","stringify","sanitizeHeaders","sanitizeUrl","sanitizeQuery","input","add","sanitizeObject","v","k","allowedKeys","accessor","sanitized","urlBuilder","queryString","errorSanitizer","RestError","code","statusCode","setPrototypeOf","REQUEST_SEND_ERROR","PARSE_ERROR","create","__values","o","s","iterator","m","done","thisArg","_arguments","generator","asyncIterator","g","q","verb","Promise","r","resolve","then","fulfill","reject","settle","f","d","HttpPipelineLogLevel","isTokenCredential","credential","castCredential","getToken","signRequest","BaseRequestPolicy","_nextPolicy","_options","shouldLog","logLevel","log","RequestPolicyOptions","_logger","OFF","minimumLogLevel","coreHttpVersion","HTTP","HTTPS","HTTP_PROXY","HTTPS_PROXY","NO_PROXY","ALL_PROXY","HttpConstants","HttpVerbs","PUT","GET","DELETE","POST","MERGE","HEAD","PATCH","StatusCodes","TooManyRequests","ServiceUnavailable","HeaderConstants","AUTHORIZATION","AUTHORIZATION_SCHEME","RETRY_AFTER","USER_AGENT","globalNoProxyList","noProxyListLoaded","globalBypassedMap","Map","getDefaultProxySettings","proxyUrl","httpsProxy","allProxy","httpProxy","loadEnvironmentProxyValue","atIndex","urlWithoutAuth","authStart","auth","colonIndex","hasPassword","username","password","extractAuthFromUrl","parsedUrl","Number","proxySettings","noProxy","item","loadNoProxy","nextPolicy","requestPolicyOptions","ProxyPolicy","customNoProxyList","sendRequest","uri","noProxyList","bypassedMap","isBypassedFlag","pattern","isBypassed","_globalThis","globalThis","global","re","isCompatible","ownVersion","acceptedVersions","rejectedVersions","myVersionMatch","ownVersionParsed","globalVersion","_reject","_accept","globalVersionMatch","globalVersionParsed","_makeCompatibilityCheck","major","GLOBAL_OPENTELEMETRY_API_KEY","_global","registerGlobal","instance","diag","allowOverride","api","stack","debug","getGlobal","unregisterGlobal","DiagLogLevel","parentContext","self","_currentContext","getValue","setValue","BaseContext","deleteValue","delete","ROOT_CONTEXT","active","with","_context","fn","target","enable","disable","props","_namespace","namespace","logProxy","info","warn","verbose","funcName","logger","unshift","TraceFlags","API_NAME","_logProxy","setLogger","optionsOrLogLevel","INFO","oldLogger","newLogger","maxLevel","_filterFunc","theLevel","theFunc","NONE","ALL","ERROR","WARN","DEBUG","VERBOSE","createLogLevelDiagLogger","suppressOverrideMessage","createComponentLogger","DiagComponentLogger","_instance","DiagAPI","NOOP_CONTEXT_MANAGER","NoopContextManager","getInstance","ContextAPI","setGlobalContextManager","contextManager","_getContextManager","description","INVALID_SPANID","INVALID_TRACEID","INVALID_SPAN_CONTEXT","traceId","spanId","traceFlags","_spanContext","spanContext","setAttribute","_key","_value","setAttributes","_attributes","addEvent","_name","setStatus","_status","updateName","_endTime","isRecording","recordException","_exception","_time","SPAN_KEY","getSpan","getActiveSpan","setSpan","span","deleteSpan","setSpanContext","NonRecordingSpan","getSpanContext","VALID_TRACEID_REGEX","VALID_SPANID_REGEX","isSpanContextValid","wrapSpanContext","contextApi","startSpan","Boolean","parentFromContext","startActiveSpan","arg2","arg3","arg4","opts","ctx","contextWithSpanSet","SpanKind","NOOP_TRACER","NoopTracer","_provider","_getTracer","_fn","tracer","Reflect","_delegate","getDelegateTracer","NOOP_TRACER_PROVIDER","getTracer","_version","ProxyTracer","getDelegate","setDelegate","delegate","_proxyTracerProvider","ProxyTracerProvider","TraceAPI","setGlobalTracerProvider","provider","success","getTracerProvider","trace","SpanStatusCode","operationOptionsToRequestOptionsBase","getOwnPropertySymbols","propertyIsEnumerable","requestOptions","tracingOptions","tracingContext","spanOptions","encodeByteArray","buffer","decodeString","Serializer","modelMappers","isXML","validateConstraints","mapper","objectName","failValidation","constraintName","constraintValue","constraints","valueAsNumber","ExclusiveMaximum","ExclusiveMinimum","InclusiveMaximum","InclusiveMinimum","valueAsArray","MaxItems","MaxLength","MinItems","MinLength","MultipleOf","Pattern","UniqueItems","some","ar","object","updatedOptions","rootName","includeRoot","xmlCharKey","payload","mapperType","serializedName","isConstant","defaultValue","required","nullable","typeName","valueOf","objectType","ArrayBuffer","isView","Blob","serializeBasicTypes","allowedValues","serializeEnumType","isNaN","dateToUnixTime","serializeDateTypes","returnValue","Uint8Array","serializeByteArrayType","ch","trimEnd","bufferToBase64Url","serializeBase64UrlType","serializer","isXml","elementType","element","tempArray","serializedValue","xmlNamespace","xmlnsKey","xmlNamespacePrefix","serializeSequenceType","valueType","tempDictionary","getXmlObjectValue","serializeDictionaryType","getPolymorphicDiscriminatorRecursively","getPolymorphicMapper","modelProps","resolveModelProperties","propertyMapper","readOnly","propName","parentObject","xmlIsWrapped","xmlName","xmlElementName","splitSerializeName","propertyObjectName","toSerialize","polymorphicDiscriminator","clientName","xmlIsAttribute","additionalPropertiesMapper","additionalProperties","className","modelMapper","resolveReferencedMapper","resolveAdditionalProperties","propNames","clientPropName","every","pn","serializeCompositeType","responseBody","handledPropertyNames","headerCollectionPrefix","dictionary","headerKey","xmlIsMsText","propertyName","wrapped","elementList","property","propertyInstance","res","arrayInstance","entries","isAdditionalProperty","responsePropName","isSpecialXmlProperty","deserializeCompositeType","castResponseBody","parseFloat","unixTimeToDate","base64UrlToByteArray","deserializeSequenceType","deserializeDictionaryType","classes","partialclass","subwords","charAt","modelProperties","polymorphicPropertyName","discriminatorName","discriminatorValue","uberParent","indexDiscriminator","polymorphicMapper","discriminators","getPolymorphicDiscriminatorSafely","MapperType","strEnum","BlobServiceProperties","blobAnalyticsLogging","hourMetrics","minuteMetrics","cors","defaultServiceVersion","deleteRetentionPolicy","staticWebsite","Logging","deleteProperty","read","write","retentionPolicy","RetentionPolicy","enabled","days","Metrics","includeAPIs","CorsRule","allowedOrigins","allowedMethods","allowedHeaders","exposedHeaders","maxAgeInSeconds","StaticWebsite","indexDocument","errorDocument404Path","defaultIndexDocumentPath","StorageError","BlobServiceStatistics","geoReplication","GeoReplication","status","lastSyncOn","ListContainersSegmentResponse","serviceEndpoint","prefix","marker","maxPageSize","containerItems","continuationToken","ContainerItem","deleted","properties","metadata","ContainerProperties","lastModified","etag","leaseStatus","leaseState","leaseDuration","publicAccess","hasImmutabilityPolicy","hasLegalHold","defaultEncryptionScope","preventEncryptionScopeOverride","deletedOn","remainingRetentionDays","isImmutableStorageWithVersioningEnabled","KeyInfo","startsOn","expiresOn","UserDelegationKey","signedObjectId","signedTenantId","signedStartsOn","signedExpiresOn","signedService","signedVersion","FilterBlobSegment","where","blobs","FilterBlobItem","containerName","tags","BlobTags","blobTagSet","BlobTag","SignedIdentifier","id","accessPolicy","AccessPolicy","permissions","ListBlobsFlatSegmentResponse","segment","BlobFlatListSegment","blobItems","BlobItemInternal","snapshot","versionId","isCurrentVersion","blobTags","objectReplicationMetadata","hasVersionsOnly","BlobName","encoded","content","BlobPropertiesInternal","createdOn","contentLength","contentEncoding","contentLanguage","contentMD5","cacheControl","blobSequenceNumber","blobType","copyId","copyStatus","copySource","copyProgress","copyCompletedOn","copyStatusDescription","serverEncrypted","incrementalCopy","destinationSnapshot","accessTier","accessTierInferred","archiveStatus","customerProvidedKeySha256","encryptionScope","accessTierChangedOn","tagCount","isSealed","rehydratePriority","lastAccessedOn","immutabilityPolicyExpiresOn","immutabilityPolicyMode","legalHold","ListBlobsHierarchySegmentResponse","delimiter","BlobHierarchyListSegment","blobPrefixes","BlobPrefix","BlockLookupList","committed","uncommitted","latest","BlockList","committedBlocks","uncommittedBlocks","Block","PageList","pageRange","clearRange","PageRange","ClearRange","QueryRequest","queryType","expression","inputSerialization","outputSerialization","QuerySerialization","format","QueryFormat","delimitedTextConfiguration","jsonTextConfiguration","arrowConfiguration","parquetTextConfiguration","DelimitedTextConfiguration","columnSeparator","fieldQuote","recordSeparator","escapeChar","headersPresent","JsonTextConfiguration","ArrowConfiguration","schema","ArrowField","precision","scale","ServiceSetPropertiesHeaders","clientRequestId","requestId","errorCode","ServiceSetPropertiesExceptionHeaders","ServiceGetPropertiesHeaders","ServiceGetPropertiesExceptionHeaders","ServiceGetStatisticsHeaders","ServiceGetStatisticsExceptionHeaders","ServiceListContainersSegmentHeaders","ServiceListContainersSegmentExceptionHeaders","ServiceGetUserDelegationKeyHeaders","ServiceGetUserDelegationKeyExceptionHeaders","ServiceGetAccountInfoHeaders","skuName","accountKind","isHierarchicalNamespaceEnabled","ServiceGetAccountInfoExceptionHeaders","ServiceSubmitBatchHeaders","ServiceSubmitBatchExceptionHeaders","ServiceFilterBlobsHeaders","ServiceFilterBlobsExceptionHeaders","ContainerCreateHeaders","ContainerCreateExceptionHeaders","ContainerGetPropertiesHeaders","blobPublicAccess","denyEncryptionScopeOverride","ContainerGetPropertiesExceptionHeaders","ContainerDeleteHeaders","ContainerDeleteExceptionHeaders","ContainerSetMetadataHeaders","ContainerSetMetadataExceptionHeaders","ContainerGetAccessPolicyHeaders","ContainerGetAccessPolicyExceptionHeaders","ContainerSetAccessPolicyHeaders","ContainerSetAccessPolicyExceptionHeaders","ContainerRestoreHeaders","ContainerRestoreExceptionHeaders","ContainerRenameHeaders","ContainerRenameExceptionHeaders","ContainerSubmitBatchHeaders","ContainerSubmitBatchExceptionHeaders","ContainerFilterBlobsHeaders","ContainerFilterBlobsExceptionHeaders","ContainerAcquireLeaseHeaders","leaseId","ContainerAcquireLeaseExceptionHeaders","ContainerReleaseLeaseHeaders","ContainerReleaseLeaseExceptionHeaders","ContainerRenewLeaseHeaders","ContainerRenewLeaseExceptionHeaders","ContainerBreakLeaseHeaders","leaseTime","ContainerBreakLeaseExceptionHeaders","ContainerChangeLeaseHeaders","ContainerChangeLeaseExceptionHeaders","ContainerListBlobFlatSegmentHeaders","ContainerListBlobFlatSegmentExceptionHeaders","ContainerListBlobHierarchySegmentHeaders","ContainerListBlobHierarchySegmentExceptionHeaders","ContainerGetAccountInfoHeaders","ContainerGetAccountInfoExceptionHeaders","BlobDownloadHeaders","objectReplicationPolicyId","objectReplicationRules","contentRange","acceptRanges","blobCommittedBlockCount","isServerEncrypted","encryptionKeySha256","blobContentMD5","contentCrc64","BlobDownloadExceptionHeaders","BlobGetPropertiesHeaders","isIncrementalCopy","BlobGetPropertiesExceptionHeaders","BlobDeleteHeaders","BlobDeleteExceptionHeaders","BlobUndeleteHeaders","BlobUndeleteExceptionHeaders","BlobSetExpiryHeaders","BlobSetExpiryExceptionHeaders","BlobSetHttpHeadersHeaders","BlobSetHttpHeadersExceptionHeaders","BlobSetImmutabilityPolicyHeaders","immutabilityPolicyExpiry","BlobSetImmutabilityPolicyExceptionHeaders","BlobDeleteImmutabilityPolicyHeaders","BlobDeleteImmutabilityPolicyExceptionHeaders","BlobSetLegalHoldHeaders","BlobSetLegalHoldExceptionHeaders","BlobSetMetadataHeaders","BlobSetMetadataExceptionHeaders","BlobAcquireLeaseHeaders","BlobAcquireLeaseExceptionHeaders","BlobReleaseLeaseHeaders","BlobReleaseLeaseExceptionHeaders","BlobRenewLeaseHeaders","BlobRenewLeaseExceptionHeaders","BlobChangeLeaseHeaders","BlobChangeLeaseExceptionHeaders","BlobBreakLeaseHeaders","BlobBreakLeaseExceptionHeaders","BlobCreateSnapshotHeaders","BlobCreateSnapshotExceptionHeaders","BlobStartCopyFromURLHeaders","BlobStartCopyFromURLExceptionHeaders","BlobCopyFromURLHeaders","xMsContentCrc64","BlobCopyFromURLExceptionHeaders","BlobAbortCopyFromURLHeaders","BlobAbortCopyFromURLExceptionHeaders","BlobSetTierHeaders","BlobSetTierExceptionHeaders","BlobGetAccountInfoHeaders","BlobGetAccountInfoExceptionHeaders","BlobQueryHeaders","copyCompletionTime","BlobQueryExceptionHeaders","BlobGetTagsHeaders","BlobGetTagsExceptionHeaders","BlobSetTagsHeaders","BlobSetTagsExceptionHeaders","PageBlobCreateHeaders","PageBlobCreateExceptionHeaders","PageBlobUploadPagesHeaders","PageBlobUploadPagesExceptionHeaders","PageBlobClearPagesHeaders","PageBlobClearPagesExceptionHeaders","PageBlobUploadPagesFromURLHeaders","PageBlobUploadPagesFromURLExceptionHeaders","PageBlobGetPageRangesHeaders","blobContentLength","PageBlobGetPageRangesExceptionHeaders","PageBlobGetPageRangesDiffHeaders","PageBlobGetPageRangesDiffExceptionHeaders","PageBlobResizeHeaders","PageBlobResizeExceptionHeaders","PageBlobUpdateSequenceNumberHeaders","PageBlobUpdateSequenceNumberExceptionHeaders","PageBlobCopyIncrementalHeaders","PageBlobCopyIncrementalExceptionHeaders","AppendBlobCreateHeaders","AppendBlobCreateExceptionHeaders","AppendBlobAppendBlockHeaders","blobAppendOffset","AppendBlobAppendBlockExceptionHeaders","AppendBlobAppendBlockFromUrlHeaders","AppendBlobAppendBlockFromUrlExceptionHeaders","AppendBlobSealHeaders","AppendBlobSealExceptionHeaders","BlockBlobUploadHeaders","BlockBlobUploadExceptionHeaders","BlockBlobPutBlobFromUrlHeaders","BlockBlobPutBlobFromUrlExceptionHeaders","BlockBlobStageBlockHeaders","BlockBlobStageBlockExceptionHeaders","BlockBlobStageBlockFromURLHeaders","BlockBlobStageBlockFromURLExceptionHeaders","BlockBlobCommitBlockListHeaders","BlockBlobCommitBlockListExceptionHeaders","BlockBlobGetBlockListHeaders","BlockBlobGetBlockListExceptionHeaders","QueryCollectionFormat","parameterPath","blobServiceProperties","accept","skipEncoding","restype","comp","timeoutInSeconds","accept1","comp2","include","collectionFormat","Csv","keyInfo","restype1","body","comp4","multipartContentType","comp5","restype2","access","ifModifiedSince","ifUnmodifiedSince","comp6","comp7","comp8","comp10","action","duration","proposedLeaseId","action1","leaseId1","action2","action3","breakPeriod","action4","proposedLeaseId1","include1","range","encryptionKey","encryptionAlgorithm","ifMatch","ifNoneMatch","ifTags","blobCacheControl","blobContentType","blobContentEncoding","blobContentLanguage","blobContentDisposition","comp12","tier","sourceIfModifiedSince","sourceIfUnmodifiedSince","sourceIfMatch","sourceIfNoneMatch","sourceIfTags","blobTagsString","legalHold1","sourceContentMD5","copySourceAuthorization","copySourceTags","queryRequest","comp18","transactionalContentMD5","transactionalContentCrc64","contentType1","body1","accept2","comp19","pageWrite","ifSequenceNumberLessThanOrEqualTo","ifSequenceNumberLessThan","ifSequenceNumberEqualTo","sourceUrl","sourceContentCrc64","comp20","comp22","maxSize","appendPosition","sourceRange1","blobType2","comp24","blockId","blocks","comp25","Service","setProperties","operationArguments","sendOperationRequest","setPropertiesOperationSpec","getProperties","getPropertiesOperationSpec","getStatistics","getStatisticsOperationSpec","listContainersSegment","listContainersSegmentOperationSpec","getUserDelegationKey","getUserDelegationKeyOperationSpec","getAccountInfo","getAccountInfoOperationSpec","submitBatch","submitBatchOperationSpec","filterBlobs","filterBlobsOperationSpec","xmlSerializer","httpMethod","responses","headersMapper","default","bodyMapper","requestBody","queryParameters","urlParameters","headerParameters","mediaType","Container","createOperationSpec","deleteOperationSpec","setMetadata","setMetadataOperationSpec","getAccessPolicy","getAccessPolicyOperationSpec","setAccessPolicy","setAccessPolicyOperationSpec","restore","restoreOperationSpec","rename","sourceContainerName","renameOperationSpec","acquireLease","acquireLeaseOperationSpec","releaseLease","releaseLeaseOperationSpec","renewLease","renewLeaseOperationSpec","breakLease","breakLeaseOperationSpec","changeLease","changeLeaseOperationSpec","listBlobFlatSegment","listBlobFlatSegmentOperationSpec","listBlobHierarchySegment","listBlobHierarchySegmentOperationSpec","createSpanFunction","operationName","operationOptions","kind","INTERNAL","spanName","packagePrefix","azureTracingDisabledValue","AZURE_TRACING_DISABLED","isTracingDisabled","newSpanOptions","attributes","newTracingOptions","debugEnvVariable","enabledString","enabledNamespaces","skippedNamespaces","debuggers","debugObj","createDebugger","stderr","EOL","namespaces","wildcard","namespaceList","ns","skipped","enabledNamespace","newDebugger","destroy","extend","registeredLoggers","logLevelFromEnv","AZURE_LOG_LEVEL","azureLogLevel","AzureLogger","AZURE_LOG_LEVELS","isAzureLogLevel","level","shouldEnable","setLogLevel","console","levelMap","warning","createClientLogger","clientRootLogger","patchLogMethod","createLogger","parent","child","createSpan","TracingPolicy","userAgent","async","tryCreateSpan","tryProcessResponse","tryProcessError","CLIENT","namespaceFromContext","traceParentHeader","missingFields","hexFlags","getTraceParentHeader","traceState","serviceRequestId","OK","KeepAlivePolicy","keepAliveOptions","keepAlive","requestIdHeaderName","GenerateClientRequestIdPolicy","_requestIdHeaderName","contains","xml2jsDefaultOptionsV2","explicitCharkey","normalizeTags","attrkey","explicitArray","ignoreAttrs","mergeAttrs","explicitRoot","validator","xmlns","explicitChildren","preserveChildrenOrder","childkey","charsAsChildren","includeWhiteChars","attrNameProcessors","attrValueProcessors","tagNameProcessors","valueProcessors","xmldec","encoding","standalone","doctype","renderOpts","pretty","newline","headless","chunkSize","emptyTag","cdata","xml2jsParserSettings","xml2jsBuilderSettings","stringifyXML","charkey","xml2js","Builder","buildObject","deserializationContentTypes","parsingOptions","DeserializationPolicy","defaultJsonContentTypes","defaultXmlContentTypes","jsonContentTypes","json","xmlContentTypes","xml","operationResponse","errorHandler","msg","bodyAsText","errCode","streaming","streamResponseStatusCodes","streamResponseBody","contentComponents","component","parsedBody","catch","xmlParser","Parser","parseString","parseXML","parsedResponse","shouldDeserialize","shouldDeserializeResponse","operationSpec","responseSpec","operationResponseGetter","getOperationResponse","isSuccessByStatus","isExpectedStatusCode","expectedStatusCodes","isOperationSpecEmpty","shouldReturnResponse","isError","errorResponseSpec","initialErrorMessage","defaultBodyMapper","defaultHeadersMapper","parsedError","valueToDeserialize","Sequence","internalError","parsedHeaders","toJson","defaultError","handleErrorResponse","innerError","deserializeResponseBody","loggingOptions","LogPolicy","sanitizer","logRequest","logResponse","DisableResponseDecompressionPolicy","decompressResponse","getHeaderKey","headerName","isHttpHeadersLike","castObject","rawHeaders","remove","headersArray","headerValues","headerNames","_headersMap","headerValue","preserveCase","resultPreservingCasing","WebResource","withCredentials","timeout","onUploadProgress","onDownloadProgress","formData","validateRequestProperties","prepare","pathTemplate","validMethods","toUpperCase","baseUrl","segments","pathParameters","pathParamName","pathParam","stringifiedPathParameters","encodeURIComponent","skipUrlEncoding","queryParams","queryParamName","queryParam","disableClientRequestId","bodyIsStream","serializationMapper","mappers","disableJsonStringifyOnBody","SERVICE_VERSION","REQUEST_TIMEOUT","StorageOAuthScopes","FORCE_BROWSER_NO_CACHE","SIGNATURE","SNAPSHOT","VERSIONID","TIMEOUT","HTTPURLConnection","BATCH_MAX_PAYLOAD_IN_BYTES","EncryptionAlgorithmAES25","DevelopmentConnectionString","StorageBlobLoggingAllowedHeaderNames","StorageBlobLoggingAllowedQueryParameters","PathStylePorts","escapeURLPath","urlParsed","getValueInConnString","connectionString","argument","elements","extractConnectionStringParts","proxyUri","search","matchCredentials","getProxyUriFromDevConnString","blobEndpoint","defaultEndpointsProtocol","accountName","accountKey","endpointSuffix","accountSas","getAccountNameFromUrl","appendToURLPath","setURLParameter","getURLParameter","getURLPath","getURLPathAndQuery","pathString","RangeError","appendToURLQuery","queryParts","truncatedISO8061Date","withMilliseconds","dateString","generateBlockID","blockIDPrefix","blockIndex","maxSourceStringLength","currentString","targetLength","padString","padStart","repeat","btoa","iEqual","str1","str2","toLocaleLowerCase","isIpEndpointStyle","toBlobTagsString","tagPairs","toBlobTags","toTags","blobTag","toQuerySerialization","textConfiguration","escapeCharacter","hasHeaders","parseObjectReplicationRecord","objectReplicationRecord","orProperties","ids","policyPrefix","rule","ruleId","replicationStatus","policyIndex","findIndex","policy","policyId","rules","attachCredential","thing","httpAuthorizationToString","httpAuthorization","BlobNameToString","decodeURIComponent","ConvertInternalResponseOfListBlobHierarchy","internalResponse","blobPrefixInternal","blobItemInteral","ParseBoolean","ParseBlobName","blobNameInXML","ParseBlobProperties","blobPropertiesInXML","blobProperties","byteString","atob","arr","decodeBase64String","ParseBlobItem","blobInXML","blobItem","blobTagsInXML","blobTagInXML","ParseBlobTag","ParseBlobTags","ParseBlobPrefix","blobPrefixInXML","ProcessBlobItems","blobArrayInXML","ExtractPageRangeInfoItems","getPageRangesSegment","pageRangeIndex","clearRangeIndex","isClear","EscapePath","blobName","StorageBrowserPolicy","StorageBrowserPolicyFactory","StorageRetryPolicyType","DEFAULT_RETRY_OPTIONS","maxRetryDelayInMs","maxTries","retryDelayInMs","retryPolicyType","EXPONENTIAL","secondaryHost","tryTimeoutInMs","RETRY_ABORT_ERROR","StorageRetryPolicy","retryOptions","min","attemptSendRequest","secondaryHas404","attempt","newRequest","isPrimaryRetry","setURLHost","shouldRetry","delay","retriableErrors","retriableError","delayTimeInMs","pow","FIXED","timeInMs","aborter","abortError","abortHandler","clearTimeout","StorageRetryPolicyFactory","CredentialPolicy","AnonymousCredentialPolicy","Credential","AnonymousCredential","TelemetryPolicy","telemetry","TelemetryPolicyFactory","userAgentInfo","telemetryString","userAgentPrefix","libInfo","runtimeInfo","isUrlHttps","createTunnel","isRequestHttps","isProxyHttps","tunnelOptions","tunnel","httpsOverHttps","httpsOverHttp","httpOverHttps","httpOverHttp","require","Readable","BUFFER","TYPE","blobParts","buffers","byteOffset","arrayBuffer","ab","stream","_read","relativeStart","relativeEnd","max","slicedBuffer","blob","FetchError","systemError","errno","captureStackTrace","convert","defineProperties","toStringTag","INTERNALS","PassThrough","Body","_this","_ref","_ref$size","_ref$timeout","isURLSearchParams","isBlob","disturbed","consumeBody","_this4","accum","accumBytes","resTimeout","chunk","getAll","p1","p2","bodyUsed","extractContentType","getTotalBytes","_lengthRetrievers","ct","_this2","textConverted","_this3","charset","exec","convertBody","mixIn","proto","getOwnPropertyNames","desc","getOwnPropertyDescriptor","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","find","MAP","Headers","init","raw","pairs","pair","_pairs$i","createHeadersIterator","HeadersIteratorPrototype","getPrototypeOf","_INTERNAL","exportNodeCompatibleHeaders","__proto__","hostHeaderKey","INTERNALS$1","STATUS_CODES","Response","statusText","counter","ok","redirected","INTERNALS$2","parse_url","format_url","parseURL","urlStr","streamDestructionSupported","isRequest","Request","parsedURL","href","inputBody","isAbortSignal","redirect","follow","compress","agent","URL$1","PassThrough$1","isDomainOrSubdomain","destination","original","orig","dest","isSameProtocol","fetch","contentLengthValue","totalBytes","getNodeRequestOptions","send","destroyStream","abortAndFinalize","finalize","req","reqTimeout","once","socket","errorCallback","hadError","listenerCount","fixResponseChunkedTransferBadEnding","addListener","hasDataListener","createHeadersLenient","isRedirect","location","locationURL","requestOpts","response_options","statusMessage","codings","zlibOptions","flush","finishFlush","writeToStream","getCachedAgent","isHttps","agentCache","httpsAgent","httpAgent","ReportTransform","Transform","progressCallback","loadedBytes","_transform","_encoding","isReadableStream","isStreamComplete","NodeFetchHttpClient","proxyAgentMap","keepAliveAgents","cookieJar","httpRequest","abortController","abortListener","event","requestForm","appendFormValue","formKey","formValue","j","uploadReportStream","platformSpecificRequestInit","prepareRequest","requestInit","httpHeaders","parseHeaders","readableStreamBody","downloadReportStream","processRequest","fetchError","uploadStreamDone","downloadStreamDone","all","getOrCreateAgent","proxyAgents","requestUrl","proxy","proxyAuth","createProxyAgent","agentOptions","setCookieHeader","_defaultHttpClient","isDefined","StandardAbortMessage","onAborted","rejectOnAbort","abortErrorMsg","removeListeners","DefaultScope","DEFAULT_CYCLER_OPTIONS","forcedRefreshWindowInMs","retryIntervalInMs","refreshWindowInMs","createTokenCycler","scopes","tokenCyclerOptions","refreshWorker","cycler","isRefreshing","shouldRefresh","expiresOnTimestamp","mustRefresh","refresh","getTokenOptions","getAccessToken","timeoutInMs","tryGetAccessToken","finalToken","beginRefresh","_token","reason","tokenOptions","storageBearerTokenChallengeAuthenticationPolicy","StorageBearerTokenChallengeAuthenticationPolicy","webResource","getTokenInternal","challenge","getChallenge","challengeInfo","x","keyValue","reduce","parseChallenge","challengeScopes","resource_id","tenantId","authorization_uri","getTokenForChallenge","tokenForChallenge","isPipelineLike","pipeline","castPipeline","factories","toServiceClientOptions","Pipeline","httpClient","requestPolicyFactories","newPipeline","pipelineOptions","telemetryPolicy","userAgentOptions","proxyOptions","audience","StorageSharedKeyCredentialPolicy","stringToSign","getHeaderValueToSign","getCanonicalizedHeadersString","getCanonicalizedResourceString","signature","computeHMACSHA256","localeCompare","array","canonicalizedHeadersStringToSign","trimRight","trimLeft","canonicalizedResourceString","queries","querySubStrings","indexOfEqual","lastIndexOfEqual","querySubString","splitResults","getURLQueries","lowercaseQueries","queryKeys","lowercaseKey","StorageSharedKeyCredential","createHmac","update","digest","allowedRedirect","RedirectPolicy","maxRetries","handleRedirect","currentRetries","locationHeader","builder","isNumber","retryLimit","predicate","retryData","retryCount","updateRetryData","retryInterval","incrementDelta","minRetryInterval","maxRetryInterval","RetryMode","ExponentialRetryPolicy","retry","requestError","isAborted","responseParam","getPathStringFromParameter","parameter","getPathStringFromParameterPath","getDefaultUserAgentKey","getDefaultUserAgentHeaderName","platformSpecificData","telemetryInfo","keySeparator","valueSeparator","getUserAgentString","UserAgentPolicy","addUserAgentHeader","bearerTokenAuthenticationPolicy","BearerTokenAuthenticationPolicy","cachedHttpClient","RPRegistrationPolicy","_retryTimeout","rpName","matchRes","checkRPNotRegisteredError","urlPrefix","extractSubscriptionUrl","originalRequest","postUrl","getUrl","reqOptions","getRequestEssentials","getRegistrationStatus","registerRP","registrationStatus","registerIfNeeded","reuseUrlToo","registrationState","SigningPolicy","authenticationProvider","nextRequest","SystemErrorRetryPolicy","_response","nestedErr","ThrottlingRetryPolicy","_handleResponse","numberOfRetries","_defaultResponseHandler","httpResponse","retryAfterHeader","delayInMs","parseRetryAfterHeader","retryAfterInSeconds","parseDateRetryAfterHeader","diff","ServiceClient","credentials","_withCredentials","_httpClient","_requestPolicyOptions","httpPipelineLogger","authPolicyFactory","wrappedPolicyFactory","bearerTokenPolicyFactory","serviceClient","serviceClientOptions","createOptions","credentialScopes","baseUri","scope","URL","getCredentialScopes","generateClientRequestIdHeader","clientRequestIdHeaderName","userAgentHeaderName","getValueOrFunctionResult","userAgentHeaderValue","userAgentData","maximumRetries","retryTimeout","rpRegistrationPolicy","rpRegistrationRetryTimeout","noRetryPolicy","createDefaultRequestPolicyFactories","newRequestPolicyFactories","_requestPolicyFactories","isWebResourceLike","httpPipeline","serializerOptions","urlParameter","urlParameterValue","getOperationArgumentValueFromParameter","queryParameter","Multi","Ssv","Tsv","requestContentType","headerParameter","customHeaders","customHeaderName","rawResponse","sendRequestError","requestBodyParameterPathString","isStream","getXmlValueWithNamespace","elementName","xmlNamespaceKey","formDataParameters","formDataParameter","formDataParameterValue","formDataParameterPropertyName","serializeRequestBody","getStreamResponseStatusCodes","details","flattenResponse","defaultValueCreator","getOperationArgumentValueFromParameterPath","parameterMapper","propertySearchResult","getPropertyFromParameterPath","propertyFound","useDefaultValue","propertyValue","parameterPathString","propertyPath","propertyPathString","parameterPathPart","addOperationResponse","blobBody","isPageableResponse","arrayResponse","StorageClientContext","defaultUserAgent","endpoint","StorageClient","storageClientContext","getURLScheme","convertTracingToRequestOptionsBase","BlobSASPermissions","deleteVersion","tag","move","execute","setImmutabilityPolicy","permanentDelete","blobSASPermissions","char","permissionLike","ContainerSASPermissions","list","filterByTags","containerSASPermissions","UserDelegationKeyCredential","userDelegationKey","ipRangeToString","ipRange","SASProtocol","SASQueryParameters","permissionsOrOptions","services","resourceTypes","identifier","resource","preauthorizedAgentObjectId","correlationId","ipRangeInner","signedOid","param","tryAppendQueryParameter","generateBlobSASQueryParameters","blobSASSignatureValues","sharedKeyCredentialOrUserDelegationKey","sharedKeyCredential","userDelegationKeyCredential","SASSignatureValuesSanityCheckAndAutofill","verifiedPermissions","timestamp","snapshotTime","getCanonicalName","generateBlobSASQueryParameters20201206","generateBlobSASQueryParametersUDK20201206","generateBlobSASQueryParameters20181109","generateBlobSASQueryParametersUDK20200210","generateBlobSASQueryParametersUDK20181109","generateBlobSASQueryParameters20150405","download","downloadOperationSpec","undelete","undeleteOperationSpec","setExpiry","expiryOptions","setExpiryOperationSpec","setHttpHeaders","setHttpHeadersOperationSpec","setImmutabilityPolicyOperationSpec","deleteImmutabilityPolicy","deleteImmutabilityPolicyOperationSpec","setLegalHold","setLegalHoldOperationSpec","createSnapshot","createSnapshotOperationSpec","startCopyFromURL","startCopyFromURLOperationSpec","copyFromURL","copyFromURLOperationSpec","abortCopyFromURL","abortCopyFromURLOperationSpec","setTier","setTierOperationSpec","queryOperationSpec","getTags","getTagsOperationSpec","setTags","setTagsOperationSpec","BlobLeaseClient","clientContext","_url","_isContainer","_containerOrBlobOperation","_leaseId","conditions","tagConditions","modifiedAccessConditions","RetriableReadableStream","source","getter","highWaterMark","retries","sourceDataHandler","doInjectErrorOnce","removeAllListeners","onProgress","sourceErrorOrEndHandler","removeSourceEventHandlers","maxRetryRequests","newSource","setSourceEventHandlers","_destroy","BlobDownloadResponse","originalResponse","blobDownloadStream","objectReplicationDestinationPolicyId","objectReplicationSourceProperties","contentAsBlob","AVRO_INIT_BYTES","AvroParser","bytes","readFixedBytes","byte","haveMoreByte","significanceInFloat","zigZagEncoded","significanceInBit","readByte","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","readZigZagLong","u8arr","DataView","getFloat32","getFloat64","readLong","readBytes","TextDecoder","decode","readItemMethod","readString","readArray","readMapPair","dict","items","AvroComplex","AvroPrimitive","AvroType","fromStringSchema","fromArraySchema","fromObjectSchema","NULL","BOOLEAN","INT","LONG","FLOAT","DOUBLE","BYTES","STRING","AvroPrimitiveType","AvroUnionType","fromSchema","RECORD","aliases","fields","AvroRecordType","ENUM","symbols","AvroEnumType","AvroMapType","ARRAY","primitive","_primitive","readNull","readBoolean","readInt","readFloat","readDouble","_symbols","types","_types","typeIndex","itemType","_itemType","readMap","_fields","record","arraysEqual","AvroReader","dataStream","headerStream","currentBlockOffset","indexWithinCurrentBlock","_dataStream","_headerStream","_initialized","_blockOffset","_objectIndex","_initialBlockOffset","blockOffset","objectIndex","_metadata","codec","_syncMarker","position","_itemsRemainingInBlock","hasNext","parseObjects","initialize","AvroReadable","ABORT_ERROR","AvroReadableFromStream","_readable","_position","toUint8Array","cleanUp","readableCallback","rejectCallback","callbackChunk","BlobQuickQueryStream","avroPaused","onError","avroReader","avroIter","readInternal","avroNext","$schema","bytesScanned","fatal","isFatal","BlobQueryResponse","AppendBlob","appendBlock","appendBlockOperationSpec","appendBlockFromUrl","appendBlockFromUrlOperationSpec","seal","sealOperationSpec","BlockBlob","upload","uploadOperationSpec","putBlobFromUrl","putBlobFromUrlOperationSpec","stageBlock","stageBlockOperationSpec","stageBlockFromURL","stageBlockFromURLOperationSpec","commitBlockList","commitBlockListOperationSpec","getBlockList","listType","getBlockListOperationSpec","PageBlob","uploadPages","uploadPagesOperationSpec","clearPages","clearPagesOperationSpec","uploadPagesFromURL","sourceRange","uploadPagesFromURLOperationSpec","getPageRanges","getPageRangesOperationSpec","getPageRangesDiff","getPageRangesDiffOperationSpec","resize","resizeOperationSpec","updateSequenceNumber","sequenceNumberAction","updateSequenceNumberOperationSpec","copyIncremental","copyIncrementalOperationSpec","BlockBlobTier","PremiumPageBlobTier","StorageBlobAudience","toAccessTier","ensureCpkIfSpecified","cpk","rangeResponseFromModel","PollerStoppedError","PollerCancelledError","Poller","operation","resolveOnUnsuccessful","stopped","pollProgressCallbacks","promise","pollOptions","isStopped","isDone","poll","fireProgress","processUpdatedState","cancel","pollOncePromise","pollOnce","clearPollOncePromise","isCancelled","getResult","startPolling","isCompleted","stopPolling","cancelOperation","cancelPromise","cancelOnce","getOperationState","BlobBeginCopyFromUrlPoller","resumeFrom","makeBlobBeginCopyFromURLPollOperation","blobClient","startCopyFromURLOptions","intervalInMs","isStarted","prevCopyProgress","rangeToString","iRange","BatchStates","Batch","concurrency","actives","completed","operations","Good","emitter","EventEmitter","addOperation","parallelExecute","nextOperation","BuffersStream","byteOffsetInCurrentBuffer","bufferIndex","pushedBytesLength","buffersLength","readableHighWaterMark","outBuffers","remainingDataInAllBuffers","remainingCapacityInThisBuffer","remaining","maxBufferLength","PooledBuffer","capacity","totalLength","_size","bufferNum","ceil","allocUnsafe","fill","targetOffset","sourceOffset","totalCopiedNum","copiedNum","copy","getReadableStream","BufferScheduler","bufferSize","maxBuffers","outgoingHandler","isStreamEnd","executingOutgoingHandlers","numBuffers","unresolvedDataArray","unresolvedLength","incoming","outgoing","appendUnresolvedData","resolveData","triggerOutgoingHandlers","shiftBufferFromUnresolvedDataArray","triggerOutgoingHandler","bufferLength","reuseBuffer","streamToBuffer","pos","chunkLength","fsStat","fsCreateReadStream","BlobClient","urlOrConnectionString","credentialOrPipelineOrContainerName","blobNameOrOptions","extractedCreds","_containerName","getBlobAndContainerNamesFromUrl","blobContext","_snapshot","_versionId","withSnapshot","withVersion","getAppendBlobClient","AppendBlobClient","getBlockBlobClient","BlockBlobClient","getPageBlobClient","PageBlobClient","customerProvidedKey","leaseAccessConditions","rangeGetContentMD5","rangeGetContentCRC64","rangeGetContentCrc64","cpkInfo","wrappedRes","updatedDownloadOptions","deleteSnapshots","succeeded","blobHTTPHeaders","blobHttpHeaders","getBlobLeaseClient","proposeLeaseId","poller","sourceConditions","sourceModifiedAccessConditions","sourceAuthorization","immutabilityPolicy","expiriesOn","policyMode","param1","param2","param3","param4","blockSize","transferProgress","batch","off","chunkEnd","maxRetryRequestsPerBlock","do","filePath","rs","file","ws","readStreamToLocalFile","pathComponents","sealBlob","generateSasUrl","sas","modifiedAccessCondition","legalHoldEnabled","appendBlobContext","appendPositionAccessConditions","sourceURL","blockBlobContext","_blobContext","inputTextConfiguration","outputTextConfiguration","uploadSeekableInternal","browserBlob","browserData","bodyFactory","maxSingleShotSize","BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES","numBlocks","blockList","blockID","autoClose","maxConcurrency","blockNum","scheduler","pageBlobContext","sequenceNumberAccessConditions","destOffset","listPageRangeItemSegments","getPageRangeItemSegmentsResponse","listPageRangesSegment","listPageRangeItems","listPageRanges","iter","byPage","settings","prevSnapshot","prevsnapshot","prevSnapshotOrUrl","listPageRangeDiffItemSegments","listPageRangesDiffSegment","listPageRangeDiffItems","listPageRangesDiff","prevSnapshotUrl","sequenceNumber","getBodyAsText","batchResponse","responseLength","streamToBuffer2","BatchResponseParser","subRequests","responseBatchBoundary","perResponsePrefix","batchResponseEnding","subResponses","subResponseCount","deserializedSubResponses","subResponsesSucceededCount","subResponsesFailedCount","subResponse","deserializedSubResponse","responseLines","subRespHeaderStartFound","subRespHeaderEndFound","subRespFailed","contentId","responseLine","_request","MutexLockStatus","Mutex","UNLOCKED","LOCKED","onUnlockEvent","emitUnlockEvent","handler","setImmediate","BlobBatch","batchRequest","InnerBatchRequest","getMultiPartContentType","getMultipartContentType","getHttpRequestBody","getSubRequests","subRequest","assembleSubRequestFunc","lock","preAddSubRequest","postAddSubRequest","unlock","setBatchType","batchType","urlOrBlobClient","credentialOrOptions","addSubRequestInternal","createPipeline","credentialOrTier","tierOrOptions","setAccessTier","operationCount","tempGuid","subRequestPrefix","batchRequestEnding","isAnonymousCreds","policyFactoryLength","BatchHeaderFilterPolicyFactory","BatchRequestAssemblePolicyFactory","appendSubRequestToBody","BatchRequestAssemblePolicy","dummyResponse","BatchHeaderFilterPolicy","xMsHeaderName","BlobBatchClient","credentialOrPipeline","serviceOrContainerContext","createBatch","urlsOrBlobClients","deleteBlob","setBlobAccessTier","batchRequestBody","rawBatchResponse","batchResponseParser","responseSummary","parseBatchResponse","ContainerClient","getContainerNameFromUrl","containerContext","getBlobClient","signedIdentifiers","containerAcl","acl","blockBlobClient","blobPrefixesInXML","ProcessBlobPrefixes","listSegments","listBlobsFlatSegmentResponse","listItems","listBlobsFlat","includeCopy","includeDeleted","includeMetadata","includeSnapshots","includeVersions","includeUncommitedBlobs","includeTags","includeDeletedWithVersions","includeImmutabilityPolicy","includeLegalHold","listHierarchySegments","listBlobsHierarchySegmentResponse","listItemsByHierarchy","listBlobsByHierarchy","tagFilterSqlExpression","tagValue","findBlobsByTagsSegments","findBlobsByTagsSegment","findBlobsByTagsItems","findBlobsByTags","listSegmentOptions","getBlobBatchClient","AccountSASPermissions","accountSASPermissions","AccountSASResourceTypes","service","container","accountSASResourceTypes","AccountSASServices","queue","table","accountSASServices","generateAccountSASQueryParameters","accountSASSignatureValues","parsedPermissions","parsedServices","parsedResourceTypes","BlobServiceClient","serviceContext","getContainerClient","containerClient","containerCreateResponse","deletedContainerName","deletedContainerVersion","destinationContainerName","containerUndeleteResponse","containerRenameResponse","sourceLeaseId","sourceCondition","listContainersSegmentResponse","listContainers","includeSystem","generateAccountSasUrl","serial","serialOrdered","clean","jobs","defer","isAsync","runJob","output","sortMethod","isNamedList","initState","keyedList","iterate","terminator","ascending","iteratorHandler","descending","balanced","maybeMatch","pre","post","reg","begs","beg","left","right","ai","bi","concatMap","expand","escSlash","escOpen","escClose","escComma","escPeriod","escapeBraces","unescapeBraces","numeric","parseCommaParts","postParts","embrace","isPadded","el","lte","y","gte","isTop","expansions","isNumericSequence","isAlphaSequence","isSequence","isOptions","N","width","incr","abs","pad","fromCharCode","need","z","expansion","DelayedStream","dataSize","maxDataSize","pauseStreams","_released","_currentStream","_insideLoop","_pendingNext","combinedStream","isStreamLike","newStream","pauseStream","_checkDataSize","_handleErrors","_getNext","_realGetNext","_pipeNext","_emitError","_reset","_updateDataSize","xs","_maxDataSizeExceeded","_bufferedEvents","delayedStream","realEmit","_handleEmit","setEncoding","release","_checkIfMaxDataSizeExceeded","of","PropertiesFile","_fs","__esModule","objs","makeKeys","line","separatorPositions","splitIndex","oldValue","escapedValue","unescape","addFile","readFileSync","me","ret","interpolate","getLast","lg","getFirst","getInt","defaultIntValue","getFloat","defaultFloatValue","getBoolean","defaultBooleanValue","getKeys","getMatchingKeys","matchstr","reset","globalFile","preference","db","extname","EXTRACT_TYPE_REGEXP","TEXT_TYPE_REGEXP","charsets","extension","exts","to","minimatch","Minimatch","GLOBSTAR","plTypes","open","close","qmark","star","twoStarDot","twoStarNoDot","reSpecials","slashSplit","assertValidPattern","nocomment","allowWindowsEscape","regexp","negate","comment","empty","partial","make","braceExpand","nobrace","def","makeRe","parseNegate","globSet","globParts","si","negateOffset","nonegate","l","isSub","noglobstar","stateChar","hasMagic","nocase","escaping","patternListStack","negativeLists","inClass","reClassStart","classStart","patternStart","dot","clearStateChar","noext","reStart","pl","reEnd","cs","er","sp","SUBPARSE","tail","_","$1","$2","addPatternStart","nl","nlBefore","nlFirst","nlLast","nlAfter","openParensBefore","cleanAfter","dollar","globUnescape","flags","regExp","_glob","_src","twoStar","regExpEscape","ex","mm","nonull","matchBase","matchOne","flipNegate","fi","pi","fl","hit","fr","pr","swallowee","Punycode","internals","suffix","punySuffix","exception","findRule","punyDomain","memo","errorCodes","DOMAIN_TOO_SHORT","DOMAIN_TOO_LONG","LABEL_STARTS_WITH_DASH","LABEL_ENDS_WITH_DASH","LABEL_TOO_LONG","LABEL_TOO_SHORT","LABEL_INVALID_CHARS","ascii","label","labels","parsed","tld","sld","subdomain","listed","handlePunycode","tldParts","privateParts","isValid","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","stringFromCharCode","mapDomain","ucs2decode","string","extra","ucs2encode","codePoints","fromCodePoint","digitToBasic","digit","flag","adapt","numPoints","firstTime","baseMinusTMin","base","inputLength","bias","basic","oldi","w","codePoint","baseMinusT","out","encode","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","qMinusT","toUnicode","undef","part","parser","sax","opt","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","clearBuffers","bufferCheckPosition","lowercase","lowercasetags","looseCase","closed","closedRoot","sawRoot","noscript","S","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","rootNS","trackPosition","column","EVENTS","F","BEGIN_WHITESPACE","beginWhiteSpace","TEXT","starti","textNode","isWhitespace","strictFail","TEXT_ENTITY","OPEN_WAKA","startTagPosition","SCRIPT","SCRIPT_ENDING","script","CLOSE_TAG","SGML_DECL","sgmlDecl","isMatch","nameStart","OPEN_TAG","tagName","PROC_INST","procInstName","procInstBody","CDATA","emitNode","COMMENT","DOCTYPE","isQuote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","textopts","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","nameBody","newTag","openTag","OPEN_TAG_SLASH","ATTRIB","closeTag","attribName","attribValue","ATTRIB_NAME","ATTRIB_VALUE","attrib","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","isAttribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","notMatch","returnState","parseEntity","entity","entityBody","entityStart","maxAllowed","maxActual","closeText","checkBufferLength","streamWraps","ev","_parser","onend","onerror","_decoder","h","SD","XML_NAMESPACE","XMLNS_NAMESPACE","regex","STATE","COMMENT_STARTING","nodeType","qname","attribute","qualName","local","qn","selfClosing","nv","isSelfClosing","closeTo","entityLC","numStr","highSurrogate","lowSurrogate","codeUnits","isFinite","SemVer","NODE_DEBUG","SEMVER_SPEC_VERSION","MAX_LENGTH","R","tok","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULLPLAIN","FULL","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","COERCERTL","LONETILDE","TILDETRIM","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","includePrerelease","minor","patch","prerelease","build","valid","compare","other","compareMain","comparePre","compareIdentifiers","compareBuild","inc","version1","version2","eq","v2","defaultResult","anum","bnum","gt","lt","neq","op","Comparator","semver","ANY","operator","rcompareIdentifiers","compareLoose","versionA","versionB","rcompare","rsort","Range","parseRange","isSatisfiable","comparators","remainingComparators","testComparator","otherComparator","intersects","isX","hyphenReplace","$0","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","outside","hilo","gtfn","ltefn","ltfn","ecomp","high","low","comparator","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","M","replaceCaret","replaceCarets","replaceTilde","replaceTildes","gtlt","xM","xm","xp","anyX","replaceXRange","replaceXRanges","replaceStars","parseComparator","thisComparators","rangeComparators","thisComparator","rangeComparator","toComparators","maxSatisfying","maxSV","rangeObj","minSatisfying","minSV","minVersion","minver","compver","validRange","ltr","gtr","r1","r2","coerce","rtl","lastIndex","parseArgsStringToArgv","myRegexp","myString","myArray","firstString","_i","arg","mappingTable","PROCESSING_OPTIONS","TRANSITIONAL","NONTRANSITIONAL","findStatus","mid","regexAstralSymbols","countSymbols","combiningMarksRegex","validateLabel","processing_option","codePointAt","processing","domain_name","useSTD3","hasError","processed","mapChars","validation","verifyDnsLength","total","tls","events","TunnelingAgent","maxSockets","Agent","defaultMaxSockets","requests","sockets","localAddress","toOptions","pending","onSocket","removeSocket","createSecureSocket","createSocket","hostHeader","getHeader","tlsOptions","mergeOptions","servername","secureSocket","connect","overrides","keyLen","defaultPort","addRequest","onFree","onCloseOrRemove","placeholder","connectOptions","connectReq","onConnect","head","useChunkedEncodingByDefault","upgrade","cause","fromPromise","qs","controlOrWhitespace","CRHTLF","slashes","protocolre","windowsDriveLetter","address","isSpecial","NaN","ignore","hash","lolcation","loc","window","finaldestination","Url","extractProtocol","rest","forwardSlashes","otherSlashes","slashesCount","relative","extracted","instruction","instructions","last","up","origin","ins","DNS","hashfunc","generateUUID","stringToBytes","v35","rnds8Pool","poolPtr","conversions","sign","createNumberConversion","bitLength","typeOpts","unsigned","lowerBound","upperBound","moduloVal","moduloBitLength","moduloBound","V","enforceRange","clamp","round","evenRound","treatNullAsEmptyString","U","usm","implementation","constructorArgs","parsedBase","basicURLParse","baseURL","serializeURL","serializeURLOrigin","stateOverride","cannotHaveAUsernamePasswordPort","setTheUsername","setThePassword","serializeHost","serializeInteger","cannotBeABaseURL","fragment","utils","Impl","impl","implSymbol","setup","is","privateData","wrapper","wrapperSymbol","interface","expose","Window","Worker","tr46","specialSchemes","ftp","gopher","wss","failure","ucs2","at","isASCIIDigit","isASCIIAlpha","isASCIIHex","isSingleDot","isWindowsDriveLetterString","isSpecialScheme","percentEncode","hex","isC0ControlPercentEncode","extraPathPercentEncodeSet","isPathPercentEncode","extraUserinfoPercentEncodeSet","isUserinfoPercentEncode","percentEncodeChar","encodeSetPredicate","cStr","utf8PercentEncode","parseIPv4Number","parseHost","isSpecialArg","pieceIndex","pointer","numbersSeen","ipv4Piece","number","swaps","temp","parseIPv6","decoded","parseOpaqueHost","utf8PercentDecode","asciiDomain","ipv4Host","numbers","ipv4","parseIPv4","serializeIPv4","maxIdx","maxLen","currStart","currLen","findLongestZeroSequence","ignore0","serializeIPv6","shortenPath","includesCredentials","URLStateMachine","encodingOverride","parseError","trimControlChars","trimTabAndNewline","atFlag","arrFlag","passwordTokenSeenFlag","isASCIIAlphanumeric","encodedCodePoints","fileOtherwiseCodePoints","cp1","cp2","excludeFragment","tuple","serializeOrigin","integer","mixin","wrapperForImpl","implForWrapper","stripBOM","escapeCDATA","requiresCDATA","wrapCDATA","hasProp","entry","ref","rootObj","render","rootElement","attr","txt","ele","att","allowSurrogateChars","bom","isEmpty","processItem","processors","superClass","parseStringPromise","assignOrPush","processAsync","xmlnskey","ctor","__super__","saxParser","error1","errThrown","ontext","ended","resultObject","EXPLICIT_CHARKEY","onopentag","processedKey","onclosetag","emptyStr","nodeName","objClone","old","xpath","charChild","oncdata","prefixMatch","firstCharLowerCase","stripPrefix","parseNumbers","parseBooleans","ValidationError","Disconnected","Preceding","Following","Contains","ContainedBy","ImplementationSpecific","Element","Attribute","Text","CData","EntityReference","EntityDeclaration","ProcessingInstruction","Comment","Document","DocType","DocumentFragment","NotationDeclaration","Declaration","Raw","AttributeDeclaration","ElementDeclaration","Dummy","isPlainObject","sources","Function","None","OpenTag","InsideTag","CloseTag","NodeType","XMLAttribute","debugInfo","attValue","isId","schemaTypeInfo","writer","filterOptions","isEqualNode","namespaceURI","localName","XMLCharacterData","XMLCData","XMLNode","substringData","appendData","insertData","deleteData","replaceData","XMLComment","XMLDOMErrorHandler","XMLDOMStringList","XMLDOMConfiguration","defaultParams","getParameter","canSetParameter","setParameter","handleError","XMLDOMImplementation","hasFeature","feature","createDocumentType","qualifiedName","publicId","systemId","createDocument","createHTMLDocument","title","getFeature","XMLDTDAttList","attributeName","attributeType","defaultValueType","dtdAttType","dtdAttDefault","dtdAttList","XMLDTDElement","dtdElementValue","dtdElement","XMLDTDEntity","pe","pubID","sysID","internal","dtdPubID","dtdSysID","nData","dtdNData","dtdEntityValue","dtdEntity","XMLDTDNotation","dtdNotation","XMLDeclaration","xmlVersion","xmlEncoding","xmlStandalone","declaration","XMLNamedNodeMap","XMLDocType","ref1","ref2","children","documentObject","nodes","attList","pEntity","notation","docType","ent","pent","not","XMLStringWriter","XMLStringifier","XMLDocument","documentURI","domConfig","rootObject","writerOptions","document","createElement","createDocumentFragment","createTextNode","createComment","createCDATASection","createProcessingInstruction","createAttribute","createEntityReference","getElementsByTagName","tagname","importNode","importedNode","deep","createElementNS","createAttributeNS","getElementsByTagNameNS","getElementById","elementId","adoptNode","normalizeDocument","renameNode","getElementsByClassName","classNames","createEvent","eventInterface","createRange","createNodeIterator","whatToShow","createTreeWalker","WriterState","XMLElement","XMLProcessingInstruction","XMLRaw","XMLText","XMLDocumentCB","onData","onEnd","onDataCallback","onEndCallback","currentNode","currentLevel","openTags","documentStarted","documentCompleted","createChildNode","attName","attribs","dummy","openCurrent","oldValidationFlag","noValidation","keepNullAttributes","insTarget","insValue","processingInstruction","rootNodeName","closeNode","openNode","isOpen","endline","isClosed","nod","dat","com","dtd","XMLDummy","isRoot","attributeMap","clonedSelf","clonedChild","removeAttribute","getAttribute","getAttributeNode","setAttributeNode","newAttr","removeAttributeNode","oldAttr","getAttributeNS","setAttributeNS","removeAttributeNS","getAttributeNodeNS","setAttributeNodeNS","hasAttribute","hasAttributeNS","setIdAttribute","setIdAttributeNS","setIdAttributeNode","idAttr","getNamedItem","setNamedItem","oldNode","removeNamedItem","getNamedItemNS","setNamedItemNS","removeNamedItemNS","DocumentPosition","XMLNodeList","parent1","baseURI","childNodeList","textContent","setParent","childNode","lastChild","len1","ref3","ignoreDecorators","convertAttKey","separateArrayItems","keepNullNodes","convertTextKey","convertCDataKey","convertCommentKey","convertRawKey","convertPIKey","insertBefore","newChild","refChild","removed","insertAfter","commentBefore","commentAfter","instructionBefore","instructionAfter","doc","prev","importDocument","clonedRoot","u","importXMLBuilder","replaceChild","oldChild","removeChild","appendChild","hasChildNodes","cloneNode","isSupported","hasAttributes","compareDocumentPosition","isAncestor","isDescendant","isPreceding","isSameNode","lookupPrefix","isDefaultNamespace","lookupNamespaceURI","setUserData","getUserData","nodePos","thisPos","treePosition","isFollowing","found","foreachTreeNode","func","XMLWriterBase","XMLStreamWriter","isLastRootNode","writeChildNode","spaceBeforeSlash","childNodeCount","firstChildNode","allowEmpty","suppressPrettyCount","assertLegalName","assertLegalChar","textEscape","attEscape","ampregex","noDoubleEncoding","previousSibling","nextSibling","splitText","replaceWholeText","filteredOptions","ref4","ref5","ref6","dontPrettyTextNodes","dontprettytextnodes","spacebeforeslash","user","indentLevel","openAttribute","closeAttribute","prettySuppressed","begin","stringWriter","streamWriter","writerState","RestoreType","restoreCache","removePrefix","Exact","Partial","saveCache","getInput","issueCommand","col","ExecResult","unlink","glob","supervisorScope","getOrNull","isMochaRunning","stateVariable","setFailed","mainInternal","toList","toBoolean","chdir","Parameters","resolveDistribution","currentTrigger","GradleCacheAction","listOf","install","LaunchParams","splitLines","CacheProxy","mkdirP","writeFile","launchGradle","setOutput","handle","createServer","compressionMethod","getEntry","putEntry","reserveCache","cacheId","removeFiles","createWriteStream","writeHead","getCacheEntry","archiveLocation","cacheKey","downloadCache","createReadStream","listen","mkdir","multiCacheGroupIdFilter","trimIndent","multiCacheEnabled","multiCacheRepository","multiCacheGroupIdFilterEscaped","multiCacheVersion","HttpException","printStackTrace","recordOf","it","cwd","ignoreReturnCode","stdline","errline","Dynamic","Official","errorContinuation","GradleDistribution","findUrl","findVersionFromWrapper","rmRF","downloadTool","hashFiles","extractZip","cacheDir","platform","chmod","toInt","HttpClient","getJson","resolveChecksum","exists","readFile","removeSuffix","downloadUrl","checksumUrl","readBody","GradleErrorCollector","GradleOutErrorCollector","shortFile","GradleResult","processJavaError","lastSlash","newFiles","totalUpdated","totalDeleted","oldContents","oldHash","updatedFiles","messages","maxUpdatesToPrint","newContents","deletedFiles","Diff","createHash","isDirectory","sha1FromModulesFileName","pipeAndWait","stackTraceToString","FileDetails","HashDetails","HashInfo","HashContents","ActionFailedException","formatBytes","HashResult","suspendingStateVariable","pull_request","repository","default_branch","stateKey","gradleVersion","CacheLayer","existsSync","mkdirSync","trimStart","dependenciesCache","trigger","jobId","defaultBranch","pkPrefix","treeId","buildCacheLocation","DefaultStateVariable","BaseStateVariable","DefaultSuspendingStateVariable","transform","isBlank","gradleGeneratedJarsCache","localBuildCache","gradleDependenciesCache","mavenDependenciesCache","CompositeCache","roundToInt","elapsed","cache","restoreAndLog","saveAndLog","withIndex","toCache","saveSingleLayerCache","firstOrNull","firstLayer","firstBaseline","zip","layer","helpfulBytes","wastedBytes","newDetails","helpfulLayerFiles","deletedLayerFiles","toLayer","CacheLayers","saveState","getState","homedir","finished","ActionsTrigger","eventString","PullRequest","BranchPush","WorkflowDispatch","Schedule","eventName","Other","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition"],"sourceRoot":""}